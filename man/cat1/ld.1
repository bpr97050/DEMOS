
LD(1)                  ДЕМОС. Команды                  LD(1)


ИИММЯЯ
       lldd - редактор связей

ФФООРРММААТТ
       lldd [_к_л_ю_ч] _ф_а_й_л ...

ООППИИССААННИИЕЕ
       Команда lldd объединяет несколько объектных программ  в
       одну,  разрешает  внешние ссылки и производит поиск в
       библиотеках и обрабатывает псевдоархивы  (см.  ниже).
       В простейшем случае задаются несколько объектных фай-
       лов, и lldd объединяет их, создавая  объектный  модуль,
       который может либо выполняться, либо являться входным
       для последующих запусков lldd (в последнем случае  дол-
       жен  задаваться ключ --rr для сохранения разрядов пере-
       мещения). Результат работы lldd  помeщается  в  файл  с
       именем  _a._o_u_t.   Этот  файл будет выполняемым, если в
       процессе загрузки не было ошибок.

       Программы,  указанные  параметрами,  объединяются   в
       заданной  последовательности. Точкой входа для выход-
       ного модуля является начало первой программы (если не
       используется ключ --ee).

       Если какой-либо из параметров представляет собой биб-
       лиотеку,  эта библиотека  просматривается только один
       раз в тот момент,  когда  она  встречается  в  списке
       параметров.  Загружаются только те программы, которые
       определены как неразрешенные  внешние  ссылки.   Если
       подпрограмма  из библиотеки ссылается на другую подп-
       рограмму из той же библиотеки,  то  последняя  должна
       находится в библиотеке после подпрограммы, которая на
       нее ссылается.  Если первый член библиотеки имеет имя
       ____..SSYYMMDDEEFF, то считается, что он содержит каталог биб-
       лиотеки, полученный с помощью команды  rraannlliibb(1).   В
       этом случае все ссылки будут успешно разрешены.

       Псевдоархив - это текстовый файл, в  начале  которого
       есть  строка  '##&&'.   Далее в нем перечисляются имена
       объектных файлов или  библиотек,  которые  последова-
       тельно просматриваются редактором связей, как если бы
       они были указаны в аргументах вызова. Имена  разделя-
       ются   пробелом,  табуляцией  или  символом  перевода
       строки. В тексте в любом месте могут встречаться ком-
       ментарии, они начинаются с символа '##' и продолжаются
       до конца строки.  Пример псевдоархива  -  стандартная
       C-библиотека _l_i_b_c._a:

              ##&&
              ## _П_с_е_в_д_о_а_р_х_и_в _с_т_а_н_д_а_р_т_н_о_й _C-_б_и_б_л_и_о_т_е_к_и
              --llsspplliittcc  --llbbaasseecc

       (т.е. вместо нее подключаются две библиотеки).

       Символы __eetteexxtt, __eeddaattaa и __eenndd (eetteexxtt, eeddaattaa и  eenndd  в
       языке  Си)  зарезервированы  и,  если  на них имеются
       ссылки, устанавливаются на первую ячейку над програм-
       мой,  первую ячейку над инициализированными данными и


                            -1-                      ДЕМОС/P


LD(1)                  ДЕМОС. Команды                  LD(1)


       первую  ячейку  над  всеми  данными   соответственно.
       Попытка переопределить эти символы приводит к ошибке.

       Команда lldd распознает несколько ключей.  За  исключе-
       нием ключа --ll, все они должны находится перед именами
       файлов:

       --DD  Следующий параметр рассматривается как десятичное
           число, определяющее размер сегмента данных.

       --dd  Вызывает  определение  общей  памяти,  даже  если
           установлен ключ --rr.

       --ee  Следующий параметр рассматривается как имя  точки
           входа загружаемой программы; по умолчанию исполь-
           зуется ячейка 0.

       --ll_X Этот ключ является сокращением  имени  библиотеки
           /_l_i_b/_l_i_b_X.a,  где _X - строка. Если эта библиотека
           не существует, команда lldd пытается отыскать  биб-
           лиотеку  /_u_s_r/_l_i_b/_l_i_b_X.a.   Поскольку осуществля-
           ется поиск, местонахождение --ll  является  сущест-
           венным.

       --nn  Приводит к тому,  что  при  выполнении  выходного
           файла  текстовая часть будет доступной только для
           чтения и разделяется между всеми  пользователями,
           выполняющими зтот файл.  Сегмент данных перемеща-
           ется на границу первых 4K, следующих за текстовым
           сегметом.

       --oo  Параметр  _и_м_я  после  ключа  --oo  используется   в
           качестве имени выходного файла lldd вместо _a._o_u_t.

       --rr  Генерирует биты перемещения в выходном файле, так
           что  он  может  участвовать в последующем прогоне
           lldd.  Этот ключ предотвращает также  окончательное
           определение общих символов и подавляет диагности-
           ческие сообщения относительно неопределенных сим-
           волов.

       --ss  Удаляет из результирующего файла таблицу символов
           и  биты перемещения с целью экономии места (ценой
           снижения полезности отладчиков).  Эта  информация
           может   быть  удалена  также  с  помощью  команды
           ssttrriipp(1).

       --uu  Рассматривает  следующий  параметр  как   символ,
           который  вводится  в  качестве  неопределенного в
           таблицу символов. Это удобно для загрузки целиком
           из  библиотеки,   поскольку первоначально таблица
           символов пуста, а для загрузки  первой  программы
           требуется неразрешенная ссылка.

       --XX  Сохраняет локальные символы, за исключением  тех,
           чьи  имена  начинаются  с  буквы  'L'.  Этот ключ
           используется командой cccc(1) для отбрасывания сге-
           нерированных  при  обработке  меток с сохранением


                            -2-                      ДЕМОС/P


LD(1)                  ДЕМОС. Команды                  LD(1)


           при этом символов, локальных  для  программы.   В
           таблицу  символов  помещаются только внешние сим-
           волы.

       --xx  Не помещает локальные (не объявленные при  помощи
           ..gglloobbll)  символы  в выходной файл.  В этом режиме
           экономится определенное место в  выходном  файле.
           Для  работы  отладчиков с оверлейными программами
           остаются только символы входов процедур,  генери-
           руемые компиляторами C и Фортрана-77.

       -i  Приводит к тому, что при выполнении  результирую-
           щего файла сегменты текста и данных располагаются
           в раздельных адресных пространствах.   В  отличие
           от ключа --nn располагает сегмент данных с нуля.

       --vv  При указанном ключе --QQ на стандартный вывод  оши-
           бок выдается для справки сформированная командная
           строка, в которой распределенные модули разделены
           ключами --ZZ и --LL.

       --ZZ  Означает создание оверлейной программы и  индици-
           рует  переход  от  одного  оверлейного сегмента к
           другому. В дополнение к этому  ключу  может  быть
           задан  ключ --nn или --ii для создания либо программы
           с раздельными командами и данными, либо (на маши-
           нах  с возможностью раздельной адресации команд и
           данных, например, Электронике-79) с  совмещенными
           адресами  команд  и  данных. Если ни один из этих
           ключей не задан, по умолчанию устанавливается --nn.

           Суть оверлейной программы заключается в том,  что
           создается  от 1 до 31 оверлейных сегментов команд
           , которые размещаются на одних и тех же  адресах.
           В  случае,  если количество сегментов превосходит
           7, у выходного файла меняется _м_а_г_и_ч_е_с_к_о_е _ч_и_с_л_о  и
           размер  таблицы  оверлеев  (см.   _a._o_u_t(5)).  При
           вызове функции, входящей  в  оверлейный  сегмент,
           система  автоматически  переключает  приписку  на
           нужный сегмент, а при возврате из функции восста-
           навливает  ее прежнее значение.  Кроме того, соз-
           дается _б_а_з_о_в_ы_й сегмент команд.  При этом не  про-
           исходит _л_и_ш_н_и_х переключений, например, если вызы-
           вающая и вызываемая  функции  находятся  в  одном
           сегменте, и т. п.

           Для создания оверлейной  программы  и  размещения
           загружаемых модулей по сегментам команд параметры
           для lldd (а также для компиляторов cccc и  ff7777,  если
           редактирование   связей   осуществляется   с   их
           помощью) указываются так:

           lldd <_к_л_ю_ч_и _и _м_о_д_у_л_и _б_а_з_о_в_о_г_о _с_е_г_м_е_н_т_а> \
              --ZZ <_м_о_д_у_л_и _о_в_е_р_л_е_й_н_о_г_о _с_е_г_м_е_н_т_а _1> \
              [--ZZ <_м_о_д_у_л_и _о_в_е_р_л_е_й_н_о_г_о _с_е_г_м_е_н_т_а _2>] \
              ..... _д_о _3_1 _с_е_г_м_е_н_т_а  \
              [--LL <_о_с_т_а_в_ш_и_е_с_я _м_о_д_у_л_и _б_а_з_о_в_о_г_о _с_е_г_м_е_н_т_а
              _и _б_и_б_л_и_о_т_е_к_и, _в_х_о_д_я_щ_и_е _в _б_а_з_о_в_ы_й _м_о_д_у_л_ь>]


                            -3-                      ДЕМОС/P


LD(1)                  ДЕМОС. Команды                  LD(1)


           Стандартная библиотека _l_i_b_c._a существует  в  двух
           вариантах:  без оверлея (ключ --llcc) и для работы с
           оверлеем (ключ --lloovvcc), причем ключи --llcc  и  --lloovvcc
           указываются последними.

       --QQ[_ч_и_с_л_о]
           Есть  возможность  автоматического  распределения
           модулей и библиотек по оверлеям. Модули и библио-
           теки после ключа  --QQ  просматриваются  в  том  же
           порядке, в каком указаны, и разрешаются все внеш-
           ние ссылки. Далее, из всех  библиотек  выбираются
           нужные модули и в дальнейшем рассматриваются, как
           обычные небиблиотечные модули  в  виде  отдельных
           файлов,  и все операции над ними производятся так
           же, как и над обычными.  После этого  все  модули
           распределяются  по оверлеям, при этом минимизиру-
           ется размер оверлейного сегмента (обычно достига-
           ется размер 8192 байт) и число оверлейных сегмен-
           тов, а базовый сегмент команд дополняется до гра-
           ницы  примерно 8К.  Вслед за ключем --QQ можно ука-
           зать _ч_и_с_л_о от 1 до 7. При этом  начальный  размер
           оверлейного   сегмента   будет   равен   величине
           <_ч_и_с_л_о> * 8192.  По умолчанию размер  оверлейного
           сегмента  - 8192 байт (--QQ1).  Если размер какого-
           либо модуля  превышает  размер  оверлейного  сег-
           мента, последний автоматически увеличивается.

           При формировании оверлейных сегментов из  модулей
           и  при  дополнении базового сегмента используется
           алгоритм  _п_е_р_в_о_г_о  _п_о_д_х_о_д_я_щ_е_г_о.   При  заполнении
           оверлейного   сегмента   модули  просматриваются,
           начиная с имеющих больший размер сегмента команд,
           а  при  дополнении базового сегмента модули прос-
           матриваются, начиная  с  имеющих  меньший  размер
           сегмента  команд.   При  использовании  ключа  --QQ
           вызов обычно имеет такой вид:

           lldd <_к_л_ю_ч_и _и _м_о_д_у_л_и _б_а_з_о_в_о_г_о _с_е_г_м_е_н_т_а> \
              --QQ <_м_о_д_у_л_и _и _б_и_б_л_и_о_т_е_к_и, _р_а_с_п_р_е_д_е_л_я_е_м_ы_е
                  _а_в_т_о_м_а_т_и_ч_е_с_к_и> \
              [--ZZ <_м_о_д_у_л_и _и _б_и_б_л_и_о_т_е_к_и, _к_о_т_о_р_ы_е
                   _о_б_я_з_а_т_е_л_ь_н_о _д_о_л_ж_н_ы _б_ы_т_ь _в_м_е_с_т_е
                   _в _о_д_н_о_м _и _т_о_м _ж_е _с_е_г_м_е_н_т_е>]... \
              [--LL <_м_о_д_у_л_и _и _б_и_б_л_и_о_т_е_к_и, _к_о_т_о_р_ы_е
                   _о_б_я_з_а_т_е_л_ь_н_о _д_о_л_ж_н_ы _б_ы_т_ь _в_м_е_с_т_е
                   _в _б_а_з_о_в_о_м _м_о_д_у_л_е>]

           При этом все,  сказанное  про  библиотеку  --lloovvcc,
           относится и к этому случаю.

           Существует также возможность  значительную  часть
           стандартной  C-библиотеки  поместить в оверлеи. В








                            -4-                      ДЕМОС/P


LD(1)                  ДЕМОС. Команды                  LD(1)


           этом случае вызов lldd имеет такой вид:

           lldd <_к_л_ю_ч_и _и _м_о_д_у_л_и _б_а_з_о_в_о_г_о _с_е_г_м_е_н_т_а> \
              --QQ <_м_о_д_у_л_и _о_в_е_р_л_е_й_н_ы_х _с_е_г_м_е_н_т_о_в
                  _и _б_и_б_л_и_о_т_е_к_и> \
              [--ZZ <_м_о_д_у_л_и _о_в_е_р_л_е_й_н_о_г_о _с_е_г_м_е_н_т_а, _к_о_т_о_р_ы_е
                   _о_б_я_з_а_т_е_л_ь_н_о _д_о_л_ж_н_ы _б_ы_т_ь _в _о_д_н_о_м _и
                   _т_о_м _ж_е _с_е_г_м_е_н_т_е>]... \
              [--LL <_о_с_т_а_в_ш_и_е_с_я _м_о_д_у_л_и _б_а_з_о_в_о_г_о _с_е_г_м_е_н_т_а
                   _и _б_и_б_л_и_о_т_е_к_и, _к_о_т_о_р_ы_е _о_б_я_з_а_т_е_л_ь_н_о
                   _д_о_л_ж_н_ы _б_ы_т_ь _в _б_а_з_о_в_о_м _м_о_д_у_л_е>] \
              --QQ --llsspplliittcc \
              --LL --lloovvbbaasseecc

           Здесь --llsspplliittcc  -  часть  стандартной  оверлейной
           C-библиотеки,  которая может работать в оверлеях,
           а --lloovvbbaasseecc - часть, которая  обязятельно  должна
           находиться  в базовом сегменте. Стандартная овер-
           лейная C-библиотека - это псевдоархив вида:

           ##&&
           ## _П_с_е_в_д_о_а_р_х_и_в _с_т_а_н_д_а_р_т_н_о_й
           ## _о_в_е_р_л_е_й_н_о_й _C-_б_и_б_л_и_о_т_е_к_и.
           --llsspplliittcc  --lloovvbbaasseecc

           При создании оверлейной программы lldd создает  для
           каждой  функции,  входящей  в оверлейный сегмент,
           _в_и_д_и_м_у_ю  точку  входа  через  базовый  сегмент  -
           небольшую подпрограмму (8 байт), которая устанав-
           ливает приписку на нужный оверлейный сегмент. При
           этом  в  полученном  модуле _в_н_е_ш_н_е_е имя функции в
           таблице имен ссылается на  вход  в  эту  подпрог-
           рамму,  а _л_о_к_а_л_ь_н_о_е имя (начинающееся с '~~') ссы-
           лается на истинный адрес функции в памяти.

           При создании оверлейных программ с помощью cccc или
           ff7777 правила аналогичны.

       --LL  Окончание оверлейных сегментов. Остальные  модули
           и   библиотеки   загружаются  в  базовый  сегмент
           команд.

РРААССППРРЕЕДДЕЕЛЛЕЕННИИЕЕ ППААММЯЯТТИИ ВВ ООВВЕЕРРЛЛЕЕЯЯХХ
       В оверлейных программах память распределена следующим
       образом:

       1. Базовый сегмент команд
             В базовый сегмент попадают  командные  сегменты
             модулей,  которые были при загрузке перечислены
             до первого ключа --ZZ или после ключа --LL.   Длина
             базового   сегмента  округляется  до  значения,
             кратного 8192 байта (020000 байт).

       2. Оверлейные сегменты
             Все оверлейные сегменты размещаются с одного  и
             того   же   адреса  оперативной  памяти.  Длина
             области, отводимой под  оверлей,  равна  длинае
             самого   длинного   оверлея,   округленной   до


                            -5-                      ДЕМОС/P


LD(1)                  ДЕМОС. Команды                  LD(1)


             кратного 8192 (8 Кбайт) значения.

       3. Данные
             Если указан ключ --nn, данные (инициализированные
             и  неинициализированные)  размещаются  вслед за
             областью оверлея и не  могут  превышать  адреса
             0160000  (56 Кбайт).   Если  указан ключ --ii (на
             ЭВМ с раздельной адресацией команд  и  данных),
             то  область команд не должна превышать 64 Кбайт
             (0200000 байт), а данные размещаются с адреса 0
             и не могут занимать больше, чем 0160000 байт (-
             56 Кбайт).  Остаток памяти занимает стек  прог-
             раммы, в котором размешаются локальные перемен-
             ные и другая информация.

       При создании оверлейных программ необходимо принимать
       некоторые   меры   предосторожности.  Не  допускается
       использование ссылок на  локальные  (ssttaattiicc)  функции
       между оверлейными сегментами, размешение неизменяемых
       переменных в области команд (как и в режиме --ii), сме-
       шивание  в одной программе модулей, оттранслированных
       с ключом --VV и без него (это ограничение, как и  необ-
       ходимость  держать  отдельные  варианты библиотек для
       оверлея, в будущем предполагается убрать).

ФФААЙЙЛЛЫЫ
       /_l_i_b/_l_i_b*._a      библиотеки
       /_u_s_r/_l_i_b/_l_i_b*._a  дополнительные библиотеки
       _a._o_u_t            выходной файл

ДДООППООЛЛННИИТТЕЕЛЛЬЬННЫЫЕЕ ССССЫЫЛЛККИИ
       _a_d_b(1), _a_r(1), _a_s(1), _c_c(1),  _f_i_l_e(1),  _f_7_7(1),  _r_a_n_-
       _l_i_b(1), _s_i_z_e(1), _a._o_u_t(5)



























                            -6-                      ДЕМОС/P

