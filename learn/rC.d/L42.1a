#print
Напишите функцию
	inprod(a,b,n)
вычисляющую скалярное произведение двух целых векторов
a и b каждый из которых имеет длину n. Назовите файл "inprod.c";
скомпилируйте и проверьте функцию, после чего наберите "готов".
Вы можете руководствоваться тем, что результат и промежуточные
значения умещаются в 16-ти битовом целом, что вообще говоря не
всегда верно.
#once #create tzaqc.c
main()
{
int x[100], y[100];
int k;
for(k=0; k<100; k++)
   {
	 x[k] = k%10;
     y[k] = (k*k)%3;
   }
if (inprod(x,y,100) != xprod(x,y,100)) return(1);
return(0);
}
xprod(x,y,n)
  int *x, *y;
{
int k, sum;
for(sum=k=0; k<n; k++)
   sum=+ *x++ * *y++;
return(sum);
}
#user
cc tzaqc.c inprod.o
a.out
#succeed
/* Наш способ */
inprod(a, b, n)
int *a, *b;
{
	int s;

	s = 0;
	while (n--)
		s += *a++ * *b++;

/* ни один из пробелов в верхней строке не нужен, но согласитесь,
   что прочесть и разобраться в такой строке как приведенная ниже
      s+=*a++**b++;
   значительно труднее. Еще более прозрачный, но медленный, способ таков:
     for(i=0; i<n; i++)
      s += a[i]*b[i];
*/

	return(s);
}
#log
#next
43.1a 10
