
A.OUT(5)           ДЕМОС. Форматы данных            A.OUT(5)


ИИММЯЯ
        aa..oouutt - формат объектного файла.

ФФООРРММААТТ
        #iinncclluuddee <_a._o_u_t._h>

ООППИИССААННИИЕЕ
        Объектный файл (по умолчанию он получает имя  _a._o_u_t)
        является   результатом  работы  ассемблера  _a_s(1)  и
        редактора  связей  _l_d(1).   Обе   программы   делают
        объектный  файл  выполняемым,  если не было ошибок и
        неразрешенных  внешних  ссылок.   Формат  объектного
        файла     для     ЭВМ    типа    СМ-4    описан    в
        /_u_s_r/_i_n_c_l_u_d_e/_a._o_u_t._h:

        /* Макс. число оверлейных сегментов */
        #ddeeffiinnee NNOOVVLL    7
        /* Макс. число ов. сегментов (расширение) */
        #ddeeffiinnee NNXXOOVVLL   31

        /* Типы файлов */
        #ddeeffiinnee AA__MMAAGGIICC11 0407 /* обычный (nosepid) */
        #ddeeffiinnee AA__MMAAGGIICC22 0410 /* реентерабельный */
        #ddeeffiinnee AA__MMAAGGIICC33 0411 /* разделенные пространства
                                 команд и данных (sepid)*/
        #ddeeffiinnee AA__MMAAGGIICC44 0405 /* подгружаемый */
        #ddeeffiinnee AA__MMAAGGIICC55 0430 /* оверлейный (nosepid) */
        #ddeeffiinnee AA__MMAAGGIICC66 0431 /* оверлейный (sepid) */
        #ddeeffiinnee AA__MMAAGGIICC77 0444 /* оверлейный (nosepid),
                                 расширенный */

        ssttrruucctt  eexxeecc {
            iinntt      aa__mmaaggiicc; /* тип файла */
                            /* Размеры сегментов */
            uunnssiiggnneedd aa__tteexxtt;  /* команд */
            uunnssiiggnneedd aa__ddaattaa;  /* данных */
            uunnssiiggnneedd aa__bbssss;   /* неинициализированных
                                   данных */
            uunnssiiggnneedd aa__ssyymmss;  /* размер таблицы имен */
            uunnssiiggnneedd aa__eennttrryy; /* адрес входа */
            uunnssiiggnneedd aa__uunnuusseedd;/* не используется */
            uunnssiiggnneedd aa__ffllaagg;  /* таблица размещения
                                 удалена */
        };

        /* Описание простых оверлейных сегментов */
        ssttrruucctt  oovvllhhddrr {
            iinntt      mmaaxx__oovvll;   /* максимальный размер */
            uunnssiiggnneedd oovv__ssiizz[NNOOVVLL];/* размеры сегментов */
        };
        /* Описание оверлейных сегментов (расширение) */
        ssttrruucctt  xxoovvllhhddrr {
            iinntt      xxmmaaxx__oovvll;    /* максимальный размер */
            uunnssiiggnneedd xxoovv__ssiizz[NNXXOOVVLL];/* размеры сегментов */
        };

        /* Структура элемента таблицы имен */
        ssttrruucctt  nnlliisstt {


                            -1-                      ДЕМОС/P


A.OUT(5)           ДЕМОС. Форматы данных            A.OUT(5)


            cchhaarr     nn__nnaammee[8]; /* имя */
            iinntt      nn__ttyyppee;    /* тип имени */
            uunnssiiggnneedd nn__vvaalluuee;   /* размещение */
        };

        /* Типы имен */
        #ddeeffiinnee NN__UUNNDDFF  0    /* неопределено */
        #ddeeffiinnee NN__AABBSS   01   /* абсолютное */
        #ddeeffiinnee NN__TTEEXXTT  02   /* текст */
        #ddeeffiinnee NN__DDAATTAA  03   /* данные */
        #ddeeffiinnee NN__BBSSSS   04   /* неинициализируемые данные */
        #ddeeffiinnee NN__TTYYPPEE  037  /* маска для типа */
        #ddeeffiinnee NN__RREEGG   024  /* имя регистра */
        #ddeeffiinnee NN__FFNN    037  /* имя файла */
        #ddeeffiinnee NN__EEXXTT   040  /* признак внешнего,
                                складывается с типом */

        Файл состоит из четырех разделов:  заголовка,  прог-
        раммы  и  данных, таблицы размещений и таблицы имен.
        Последние два раздела могут отсутствовать, если файл
        был сформирован редактором связей lldd с ключом --ss или
        обработан командой _s_t_r_i_p(1).

        В заголовке размеры каждого раздела задаются в  бай-
        тах,  но всегда имеют четные значения.  Размер заго-
        ловка не входит в  размер  ни  одного  из  сегментов
        программы.

        При загрузке программы из объектного файла в память,
        сегмент команд располагается с логического адреса 0.
        Остальные сегменты размещаются в зависимости от типа
        файла:

        0407    Сегмент команд не закрывается по записи и не
                будет  разделятся  между процессами, поэтому
                данные идут непосредственно за текстом.

        0410    Сегмент данных начинается с первого кратного
                8К  байтам  адресу,  следующему за командным
                сегментом. Последний закрывается на запись и
                будет   использоваться   всеми   процессами,
                выполняющими данную программу.

        0411    Сегмент команд закрыт по записи  и  разделя-
                ется  между  процессами, но данные и команды
                располагаются в разных адресных  пространст-
                вах,  оба  начиная  с  логического адреса 0.
                (Только  на  машинах  типа   Электроника-79,
                СМ-1425, PDP-11/70, PDP-11/73).

        0405    Текстовый сегмент замещает текстовый сегмент
                текущего  процесса (для файлов типа 0411 или
                0405), но текущий  сегмент  данных  сохраня-
                ется.

        0430    Базовый сегмент текста закрывается на запись
                и  разделяется,  вслед  за  ним  размещается
                оверлейный сегмент.  Может быть  максимум  7


                            -2-                      ДЕМОС/P


A.OUT(5)           ДЕМОС. Форматы данных            A.OUT(5)


                оверлеев, все они закрыты на запись и разде-
                ляются.   Базовый  сегмент   размещается   в
                пространстве  от  0 до ttxxttssiizz.  Со следующей
                границы, кратной 8К, располагается  оверлей-
                ный сегмент, размер его совпадает с размером
                самой большой оверлейной области.  Во  время
                выполнения  программы  в  каждый  конкретный
                момент этот сегмент отображается на один  из
                7 оверлеев.  Со следующей 8К-границы начина-
                ется сегмент данных.

        0431    Сегменты команд  и  данных  располагаются  в
                разных   адресных  пространствах  начиная  с
                адреса 0. В остальном совпадает с  загрузкой
                файлов типа 0430.

        0444    Все, сказанное для типа 0430  справедливо  и
                для  0444,  кроме  максимального числа овер-
                леев: возможен 31 оверлей.

        В  случае  авто-оверлейных  программ  между  обычным
        заголовком  _a._o_u_t и началом текстового сегмента рас-
        полагается еще один заголовок (oovvllhhddrr) - в нем  ука-
        зываются  максимальный размер области оверлея и раз-
        мер каждого из 7 сегментов в случае 0430  или  0431,
        или  каждого  из  31  сегмента в случае 0444.  Образ
        оверлейных  сегментов  следует  в  объектном   файле
        непосредственно  за образом сегмента команд, инициа-
        лизированные данные располагаются за оверлеями.

        Сегмент стека размещается в самом конце  логического
        пространства  процесса  -  с адреса 0177776 и далее.
        Если необходимо, сегмент стека автоматически  расши-
        ряется.   Сегмент данных изменяется только с помощью
        системного вызова _b_r_k(2).

        Если имя имеет тип  _н_е_о_п_р_е_д_е_л_е_н_н_ы_й  _в_н_е_ш_н_и_й  и  поле
        nn__vvaalluuee  ненулевое,  оно  воспринимается  редактором
        связей, как имя common-области (общей области), раз-
        мер которой определяется значением nn__vvaalluuee.

        Значение слова в  образе  текста  или  данных  (если
        только  это не ссылка неопределенный внешний объект)
        соответствует значению при загрузке файла в  память.
        Если  в  таблице размещений для этого слова указано,
        что оно является внешней неопределенной ссылкой,  то
        значение  nn__vvaalluuee  рассматривается как сдвиг от ука-
        занного внешнего имени.  Если  при  обработке  файла
        редактором  связей неопределенный символ обнаружива-
        ется в другом модуле,  его  значение  добавляется  к
        этому слову.

        Если информация о размещениях не уничтожена, то зна-
        чения nn__vvaalluuee полностью соответствуют адресам объек-
        тов в памяти.  Если таблица размещения удалена, зна-
        чение  aa__ffllaagg  не равно нулю.  Файлы с авто-оверлеем
        (0430, 0431, 0444) не могут содержать  информации  о
        размещении.


                            -3-                      ДЕМОС/P


A.OUT(5)           ДЕМОС. Форматы данных            A.OUT(5)


        Биты 3-1 nn__vvaalluuee указывают сегмент, к которому отно-
        сится соответствующее слово текста или данных:

        000     абсолютное значение

        002     сегмент текста

        004     инициализированные данные

        006     неинициализированные данные

        010     неопределенное внешнее

        Бит 0 поля nn__vvaalluuee, равный 1, указывает на адресацию
        относительно  счетчика  команд  (например  ccllrr _x), в
        противном  случае  адресация  абсолютная   (например
        ccllrr *$_x).

        Остаток слова размещения (биты 15-4) в случае  внеш-
        ней  ссылки содержит номер символа, в противном слу-
        чае не используется.  Первый символ имеет  номер  0,
        второй - 1 и т.д.

ДДООППООЛЛННИИТТЕЕЛЛЬЬННЫЫЕЕ ССССЫЫЛЛККИИ
        _a_s(1), _l_d(1), _n_m(1)



































                            -4-                      ДЕМОС/P

