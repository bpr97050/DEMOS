
            дддд   ееееее   м     м    oooo     сссс
           д   д   е        мм   мм   o    o   с    с
          д    д   е        м м м м   o    o   с    с
          д    д   еееее    м  м  м   o    o   с
          д    д   е        м     м   o    o   с
          д    д   е        м     м   o    o   с    с
         дддддддд  ееееее   м     м    oooo     сссс



          демосдемосдемосдемосдемосдемосдемосдемосде
          емосдемосдемосдемосдемосдемосдемосдемосдем
          мо                                      мо
          ос                                      ос
          сд        ОПЕРАЦИОННАЯ СИСТЕМА          сд
          де                                      де
          ем               ДЕМОС                  ем
          мо                                      мо
          ос                                      ос
          сд                                      сд
          де             Версия 1.0               де
          ем                                      ем
          мо                                      мо
          сдемосдемосдемосдемосдемосдемосдемосдемосд
          демосдемосдемосдемосдемосдемосдемосдемосде







                    РЕДАКТОР ТЕКСТОВ ED







                Бардин Валерий Владимирович












                       МОСКВА - 1985









                                                           1



   Документ содержит описание редактора текстов ed, предназ-
наченного  для  создания  и  корректировки  исходных текстов
программ, и обработки текстовых файлов произвольного  содер-
жания.



























































2


     ВВЕДЕНИЕ


   Редактор текстов ed является  диалоговой  (интерактивной)
программой, которая позволяет добавлять, перемещать, удалять
текст и извлекать его из других файлов. Имеется  возможность
замены  слова или части слова в тексте как для одной указан-
ной строки, так и для части файла  или  всего  файла.  Кроме
того,  можно просмотреть текстовый файл, напечатать его час-
тично или целиком, напечатать строки, содержащие  определен-
ное слово и т.д.

   ED работает с копией обрабатываемого файла, которая  соз-
дается  в буфере редактора и хранится там в течение всей об-
работки. Это предохраняет исходный файл от возможных  разру-
шений  при совершении грубых ошибок. Сделанные в копии изме-
нения не влияют на исходный файл до тех пор, пока  не  будет
выдана команда записи.

   Редактор запоминает имя обрабатываемого  файла  (первона-
чально - имя исходного загруженного файла). По желанию поль-
зователя это имя можно изменять для получения новых  вариан-
тов файла.

   Если размер файла превышает размер буфера редактора, файл
приходится делить на части с помощью команды split, редакти-
ровать его по частям, а затем снова об'единять с помощью ко-
манды cat.

   Пользователь  сообщает  редактору,  что  делать   с   его
текстом, посредством введения определенных инструкций, назы-
ваемых "командами". Команды редактора имеют простую структу-
ру,  и  в большинстве случаев состоят из одной буквы. Каждая
команда печатается на отдельной строке. Иногда перед  коман-
дой  указывается  информация  о том, какая строка или строки
должны подвергаться действию  команды.  ED  не  отвечает  на
большинство команд, не печатает подсказки или сообщения типа
"готово".

   Все вводимые командные строки должны заканчиваться симво-
лом <cr> ("конец строки").






















                                                           3




                     1. ВЫЗОВ РЕДАКТОРА


   Формат команды:

 ed [file]

где "file" - имя файла.

   Если файл с указанным именем существует,  в  ответ  будет
выдано  число  символов в файле. В противном случае редактор
выдает строку "?file".


   1.1. ДОЗАПИСЬ ТЕКСТА


   Если создан пустой файл и необходимо записать в него  не-
который текст, следует установить режим дозаписи командой:

a    в ответ система переведет курсор на новую строку.

   Для отмены режима дозаписи вводится команда "." (точка) в
первой  позиции  строки,  за  которой  следует символ "конец
строки"<cr>.

   Символ "." в любой другой позиции, не является  командой,
ввоспринимается  как  часть вводимого текста и не приводит к
выходу из режима дозаписи.
































4




                    2. ЗАПИСЬ ФАЙЛА (w)


   Во время работы ed текст находится  во  временном  буфере
редактора  и чтобы сохранить его по концу редактирования не-
обходимо записать содержимое буфера в файл.  Для  этой  цели
используется команда записи:

   Формат команды:

 w[file]

где "file" -  имя  файла,  в  который  требуется  произвести
запись.

   Если имя файла опущено, запись  производиться  в  текущий
файл.  В  результате  работы команды содержимое буфера будет
скопировано в файл  (предыдущая  информация  в  файле  будет
уничтожена)  и  выдано  на  терминал  количество  символов в
файле. Если в ответ на попытку записи  появляется  сообщение
"?имя_файла",  это  означает,  что  запись в данный файл или
справочник закрыта.

   При записи файла создается копия текста - содержимое  бу-
фера  не  изменяется, так что можно продолжать работу. Реко-
мендуется время от времени записывать содержимое буфера, так
как  в  случае сбоя системы или совершения оператором какой-
либо ошибки весь находящийся в буфере текст может быть поте-
рян.
































                                                           5




                 3. ВЫХОД ИЗ РЕДАКТОРА (q)


   Данная команда используется для завершения редактирования
текста и выхода из редактора.

   Формат команды:

 q <cr>

   Так как буфер редактора при выполнении команды "q"  унич-
тожается,  для  сохранения  результатов редактирования буфер
должен быть предварительно скопирован командой записи "w".

   Если после изменения информации не была выполнена команда
записи, в ответ на первую команду "q" выдается подсказка "?"
и никаких действий не производится. При повторном наборе ко-
манды  осуществляется выход с уничтожением накопленной в бу-
фере информации.










































6




                      4. ЧТЕНИЕ ФАЙЛА



   4.1. Команда редактирования файла (e)


   Формат команды:

 e file

   По данной команде файл с именем "file" копируется в буфер
редактора. Предыдущее содержимое буфера при этом теряется.

   Редактор сохраняет имя скопированного в буфер файла, бла-
годаря  чему после завершения редактирования файла нет необ-
ходимости задавать его имя в команде записи "w". Команда "w"
произведет запись именно в этот файл.

   Команда языка SHELL:

ed file

эквивалентна командам

 ed

 e file

по завершению  чтения  файла  печатается  размер  считанного
файла (в байтах).


   4.2. Команда чтения файла (r)


   Формат команды:

 [n]r [file]

где n - номер строки  в  буфере,  после  которой  помещается
файл.

   Команда "r" читает содержимое файла  с  именем  "file"  в
буфер редактора, причем содержимое файла добавляется к тому,
что уже хранится в буфере.

   Если "n" отсутствует, то читаемая информация дописывается
после  последней  строки,  хранящейся  в буфере, в противном
случае, считываемый файл помещается после строки  с  номером
"n".

   Если имя файла  отсутствует  в  команде,  то  считывается
файл, имя которого является текущим.

   По завершению чтения редактор печатает размер  считанного
файла (в байтах).




                                                           7




                      5. ПЕЧАТЬ ТЕКСТА



   5.1. Команда печати (p)


   По данной команде производится выдача строк файла,  нахо-
дящегося в буфере редактора.

   Формат команды:

 [n[,k]]p

где n,k - номера начальной и конечной печатаемых строк.

   Команде "p" может  предшествовать  один  или  два  номера
строки.  Если  номер  не задан, то редактор печатает текущую
строку.

   Если задан  номер  только  одной  строки  (с  последующей
буквой  "p" или без нее), то печатается одна заданная строка
(и она становится текущей).

   Если задано два номера строки, то печатаются все строки в
указанном  интервале  (текущей  строкой становится последняя
выданная строка). При  задании  номеров  двух  строк  первый
номер не может быть больше второго.

   ПРИМЕРЫ:

 1,2p
     печать первых двух строк буфера;

 1,$p
     печать всех строк буфера; символ "$"  используется  для
     обозначения последней строки буфера;

 $-1,$p
     печать двух последних строк буфера;

 .-3,-1p
     печать трех предыдущих строк.

   В сущности, команде "p" могут предшествовать 0, 1  или  2
номеров  строк. Если номера строк не указаны, печатается те-
кущая строка. Если указан один номер строки  (с  буквой  "p"
или  без нее), печатается эта строка (и она становится теку-
щей). Если указаны два номера строки, печатаются все  строки
из  указанного диапазона, а текущей становится последняя на-
печатанная строка. Если заданы два номера строк,  первый  из
них  не  может  быть больше, чем второй. Однократное нажатие
клавиши <cr> вызывает печать следующей строки:  оно  эквива-
лентно  команде  ".+1p".  Команда  "-"  эквивалентна команде
".-1p".






8

   5.2. Команда печати (l)


   Команда "l"  аналогична  команде  "p",  но  предоставляет
больше  информации.   Ее  главным свойством является то, что
она печатает управляющие символы, такие как символы  табуля-
ции (tab) и возврата на позицию (backspace). Кроме того, ко-
манда "l" переносит строки при печати. Например, любая стро-
ка,  длина  которой превышает 72 символа, печатается на нес-
кольких строках. Чтобы указать, что строка была перенесена и
где  она  была  перенесена, в конце каждой части переносимой
строки вставляется обратная дробная черта (\).

   Некоторые управляющие символы:

-    символ табуляции - печатается как ">";

-    код возврата на позицию - печатается как "<";

-    код перехода на новый лист - печатается как "\14";

-    код вертикальной табуляции - печатается как "\13";

-    "звуковой сигнал" - печатается как "\07";

-    код "новая строка" - печатается как "\n".






































                                                           9




                     6. ПРОСМОТР ФАЙЛА


   Редактор запоминает последнюю строку, с которой  произво-
дились какие-либо действия, так что она может использоваться
без явного указания номера строки. Ссылка на эту строку про-
изводится с помощью символа ".".

   Точка обозначает номер текущей строки. Ее можно использо-
вать различными способами. В частности, можно ввести:

 .,$p

это приведет к распечатке всех строк от  текущей  строки  до
конца буфера включительно.

   Точка наиболее полезна при  использовании  в  комбинациях
следующего вида:

 .+1 (или,что то же самое, .+1p)

это означает "напечатать следующую  строку"  и  представляет
собой  удобный  способ  медленного  просмотра  буфера. Можно
также ввести команду:

 .-1 (или .-1p)

что означает "распечатать строку перед текущей строкой". Это
позволяет, при желании, двигаться назад.

   Еще одной полезной командой является команда вида:

 .-3,.-1p

которая распечатывает три предшествующие строки.

   Необходимо помнить о том, что обе команды  печати  "p"  и
"l"  изменяют  номер текущей строки. Можно в любое время уз-
нать ее значение, введя:

 .=

редактор ed ответит печатью значения  номера текущей строки.


















10




               7. КОМАНДА УДАЛЕНИЯ СТРОК (d)


   Данная команда предназначена для удаления одной или груп-
пы строк в буфере редактора.

   Формат команды:

 [n[,k]]d

где n,k - номера начальной и конечной удаляемых строк.

   Команде "d" может  предшествовать  один  или  два  номера
строки.

   Если задан только один номер строки, то удаляется указан-
ная  строка, текущей становится строка, следующая за удален-
ной.

   Если задано два номера, то производится удаление строк  с
номерами  от  "n" до "k" включительно. Текущей всегда стано-
вится строка, следующая за последней удаленной строкой, кро-
ме  случая,  когда удаляется последняя строка буфера. В этом
случае текущей станет новая последняя строка буфера.

   Если номер не задан, редактор удаляет текущую строку.

   ПРИМЕР:

 4,$d

удаление из буфера строк с 4-ой по последнюю включительно. В
буфере  после  выполнения команды останется 3 первых строки.
Текущей строкой станет третья строка буфера.



























                                                          11




               8. КОМАНДА ОТМЕНЫ РЕДАКЦИИ (u)


   В некоторых случаях обнаруживается, что внесенные измене-
ния  не были необходимы или оказались неверными. Команда от-
мены редакции может быть использована для приведения  только
что измененной строки в ее исходное состояние:

 u <cr>




















































12




            9. КОМАНДА ЗАМЕНЫ ВНУТРИ СТРОКИ (s)


   Команда замены "s" предназначена для изменения  отдельных
слов или символов в пределах одной строки или группы строк.

   Формат команды:

 [n[,k]]s/x/y/

где:

x   -
     группа символов или слов в строке, которые  надо  заме-
     нить (старый текст);

y   -
     группа символов или слов, которые заменят старое значе-
     ние, указанное как "x" (новый текст);

n,k -
     номера начальной и конечной строк  буфера,  в  пределах
     которых осуществляется замена.

   Если номера строк не указаны, замена осуществляется в те-
кущей строке.

   Если указан номер только одной строки, то замена произво-
дится только в одной строке.

   Для реализации замены в группе строк надо указать  номера
начальной  (n) и конечной (k) строк, в пределах которых надо
произвести замену.

   При  выполнении  данной  команды  редактор  просматривает
строки,  начиная  с номера "n", и кончая номером "k" включи-
тельно. При обнаружении в какой-либо из них  искомой  группы
"x" редактор заменяет ее на "y".

   Редактор не печатает результат замены автоматически,  по-
этому  для  контроля  рекомендуется вместе с командой замены
задавать команду печати.

   Если в командной строке указаны "n", "k" и команда  печа-
ти, то печатается только последняя измененная строка.

   Текущей строкой после выполнения команды замены  остается
последняя строка, в которой произведена замена части текста.

   ПРИМЕР:

1,$s/a/a2/p
     замена символа "a" на "a2"  производится  в  строках  с
     1-ой по последнюю. Текущей станет последняя строка, она
     будет распечатана.

   Используя команду "s", можно удалить группу символов (или
один  символ) в строке. Для этого команда замены должна быть
задана следующим образом:


                                                          13

 s/x//

что фактически означает: заменить группу символов в  текущей
строке  на  "пусто", т.е. просто удалить заданные символы из
строки.

   Команда "s" заменяет лишь первую найденную искомую группу
символов  в строке. Если же надо заменить все случаи появле-
ния заданной комбинации символов в строке, используется  ко-
манда "g":

 s/x/y/g

   ПРИМЕРЫ:

s/c/d/gp
     все появления символа "c"  в  текущей  строке  заменить
     символом "d" и распечатать строку;

1,$s/c/d/gp
     замена всех символов "c" на символ "d" во всем буфере с
     печатью последней измененной строки.










































14




                10. КОМАНДА ПОИСКА КОНТЕКСТА


   Эта команда предназначена для поиска  строки,  содержащей
заданный символ, группу символов или группу слов.


   10.1. Конструкция /.../


   Формат команды:

/text/

где <text> - искомый текст.

   Редактор просматривает буфер,  начиная  со  строки  ".+1"
(т.е.  следующей  за  текущей),  идет до конца буфера, затем
продолжает поиск с первой строки буфера и до "текущей" стро-
ки  включительно.  При обнаружении строки с заданным текстом
редактор распечатывает ее, и эта строка становится текущей.

   В случае отсутствия в  буфере  искомого  текста  редактор
возвращается к текущей строке и печатает символ "?".

   ПРИМЕР:

/lop/
     найти в буфере  строку,  содержащую  последовательность
     символов "lop".

   Команда поиска в комбинации  с  другими  командами  ("a",
"i",  "s", "t", "m") может успешно использоваться для указа-
ния необходимой строки.

   ПРИМЕРЫ:

/lop/s//loop/p
     найти строку, содержащую слово "lop", и заменить его на
     "loop", затем распечатать эту строку;

/текст/i
     поиск строки, содержащей  указанный  текст,  и  вставка
     перед найденной строкой.

   В команде "s" искомый текст в левой части можно не указы-
вать.


   10.2. Конструкция ?...?


   Редактор производит поиск не только в прямом, но и в  об-
ратном направлении. Для этого в команде поиска вместо симво-
ла "/" используется символ "?":

?текст?




                                                          15

   Это удобно в случае, если при редактировании текста необ-
ходимо вернуться назад.


   10.3. Продолжение поиска


   Если при поиске строки с искомым текстом  оказалось,  что
это не та строка, то для продолжения поиска нужно задать ко-
манду в виде:

//   продолжить поиск в прямом направлении;

??   продолжить поиск в обратном направлении;


















































16




               11. КОМАНДА ВСТАВКИ СТРОК (i)


   Данная команда используется для вставки  в  текст  строк,
вводимых с терминала.

   Формат команды:

 [n]i

где n - номер строки в буфере редактора, перед которой  надо
вставить новые строки.

   Если "n" отсутствует, то строки вставляются перед текущей
строкой.

   Ввод новых строк с терминала завершается символом  "."  в
первой позиции.

   Текущей строкой после выполнения команды  "i"  становится
последняя вставленная строка.

   Пример использования команды "i" для  вставки  3-х  строк
перед 7-ой строкой:

 7i <cr>
 строка 1 <cr>
 строка 2 <cr>
 строка 3 <cr>
 .<cr>































                                                          17




                12. КОМАНДА ЗАМЕНЫ СТРОК (c)


   Команда используется для замены строки или группы строк в
буфере редактора.

   Формат команды:

 [n[,k]]c

где n,k - номера начальной и конечной заменяемых строк.

   По данной команде редактор удаляет строки с  номерами  от
"n"  до  "k" включительно и заменяет их строками вводимыми с
терминала после команды "c".

   Ввод строк завершается "." в первой позиции и <cr>.

   Если в команде указан номер одной строки, заменяется одна
строка.

   Если номер строки не указан, то заменяется текущая  стро-
ка.

   Пример замены строк с ".+1" по последнюю.

 .+1,$c <cr>
 ... строки текста ...
 .<cr>

   Строки, которые  вводятся  между  командами  "c"  и  ".",
займут место исходных строк между начальной строкой и конеч-
ной строкой. Это наиболее удобно при замене строки (или нес-
кольких строк), содержащих ошибку.



























18




                   13. РАБОТА СО СТРОКАМИ



   13.1. Разбиение строк


   Редактор обеспечивает  возможность  разбиения  строки  на
несколько  более коротких строк путем вставки символов новой
строки. Например, строка:

 текст xy текст

может быть разбита на две между символами "x" и  "y"  следу-
ющим образом:

 s/xy/x\
 y/

команда

 s/xy/x\
 zzz\
 y/

разоб'ет исходную строку на три, при  этом  будет  добавлена
строка "zzz".


   13.2. Об'единение строк


   Об'единение строк осуществляется с помощью  команды  "j".
Например, если имеются строки:

 текст x
 y текст

то, установив первую строку текущей и задав команду "j", по-
лучим:

 текст xy текст

   Можно об'единять и несколько последовательных строк,  для
этого необходимо указать номера первой и последней строки.

   Например, команда:

 1,$jp

об'единяет все строки в одну большую строку и  распечатывает
ее.









                                                          19

   13.3. Копирование строк


   Для копирования строк текста в буфере редактора использу-
ется команда "t".

   Формат команды:

 [n[,k]]tl

где,

n,k -
     номера начальной и конечной копируемых строк;

t   -
     имя команды копирования;

l   -
     номер  строки,  после  которой  размещаются  копируемые
     строки с номерами от "n" до "k" включительно.

   По данной команде строки с номерами от "n" до "k" включи-
тельно пересылаются на место после строки с номером "l".

   Если в команде задан только один номер строки, то пересы-
лается строка с указанным номером.

   Если номер не задан, то пересылается текущая строка.

   Строки с номерами от "n" до "k" включительно  сохраняются
на своем прежнем месте.

   Команду "t" удобно использовать для  создания  текстов  с
повторяющимися данными.

   ПРИМЕР:

1,7t15
     группу строк с 1-ой по 7-ую поместить после 15-ой стро-
     ки.


   13.4. Перестройка строк


   Предположим, что в начале каждой строки файла стоят имена
вида:

     Иванов П.К.
     Петров С.Б.

и т.д., требуется переделать текст таким образом, чтобы ини-
циалы стояли перед фамилиями, т.е.

     П.К. Иванов
     С.Б. Петров

   Такой  результат  можно  получить  с  помощью  нескольких
команд  редактирования, что однако достаточно сложно и может
привести к целому ряду ошибок.



20

   Альтернативный метод заключается в  том,  чтобы  отметить
элементы  строки  (в  данном  случае  фамилию и инициалы), а
затем переставить эти элементы. Если в левой  части  команды
подстановки "s" какой-либо элемент образца заключен в "\(" и
"\)", то он запоминается и  может  использоваться  в  правой
части команды. В правой части команды обозначение "\1" отно-
сится к тому, что соответствовало первой паре \(...\),  "\2"
- второй паре \(...\) и т.д.

   Следующая команда:

 1,$s/^\([^ ]*\)  *\(.*\)/\2 \1/

выполняет нужную работу, хотя ее и трудно прочитать.  Первая
пара  \(...\)  соответствует  фамилии,  которая представляет
собой любую строку символов  вплоть  до  пробела;  в  правой
части команды на нее выполняется ссылка с помощью "\1". Вто-
рая пара \(...\) обозначает то, что стоит  после  запятой  и
любого  количества  пробелов,  а ссылка на нее выполняется с
помощью "\2".


   13.5. Маркеры


   Редактор ed позволяет пометить строку  некоторым  именем,
чтобывпоследствии обращаться к ней по этому имени независимо
от фактического номера строки. Это  удобно  при  перемещении
строк  и отслеживании их по мере перемещения. Для маркировки
используется команда назначения имени. Если  ввести  команду
"kx",  то  текущая  строка  будет отмечена маркером с именем
"x". Если перед "k" указывается номер строки, будет отмечена
соответствующая  строка. (Имя должно представлять собой одну
строчную букву латинского алфавита). После этого можно  ссы-
латься на отмеченную строку с помощью адреса "'x".

   ПРИМЕР:

   Пусть после создания файла были выполнены  следующие  ко-
манды:

 a
 Первая строка вводимого текста
 Вторая строка
 Третья строка
 Последняя строка
 .
 -3
 ka
 2
 kb
 $
 'a,'bm.

в результате  будет  получена  следующая  последовательность
строк:

 Третья строка
 Последняя строка
 Первая строка вводимого текста
 Вторая строка



                                                          21

   13.6. Адресация строк в редакторе



   13.6.1. Адресная арифметика


   Рассмотрим использование указателей строк вида ".",  "$",
"/.../"  и  "?...?" в сочетании с действиями "+" и "-". Так,
команда:

 $-1

выдает предпоследнюю строку текущего файла.

   Команда:

 $-5,$p

распечатывает последние шесть строк. Если в файле нет  шести
строк, будет выдано сообщение об ошибке ("?").

   Команда:

 .-3,.+3p

распечатывает 7 строк, из них три строки  до  и  три  строки
после текущей строки. Знак "+" может быть опущен. Команда:

 .-3,.3p

означает абсолютно то же самое.

   Знак "-" (минус) сам по себе представляет  собой  команду
для возврата на одну строку в файле.

   Команда:

 ---(три знака минус)

вызывает возврат на три строки, как и  команда  "-3".  Таким
образом, команда:

 .-3,.+3p

идентична примерам, приведенным выше.

   Поскольку "-"  короче,  чем  ".-1",  удобно  использовать
конструкции типа:

 -,.s/bad/good/

в данном случае "bad" заменяется на "good" в текущей и пред-
шествующей ей строках.

   Знаки "+" и "-" могут использоваться при поиске с помощью
"/.../", "?...?" и с "$". По команде:

 /текст/--

разыскивается строка, содержащая "текст", после чего текущей
строкой становится строка вторая перед найденной строкой.


22

   13.6.2. Номера строк и указатель текущей строки


   Разрешается оределять диапозон "n,m" (от строки с номером
"n"  до  строки  с  номером  "m"), где "n" - номер начальной
строки, а "m" - номер конечной строки. Весь файл  целиком  с
первой  до  последней строки задается диапазоном "1,$". Так,
команда:

 1,$p

вызывает выдачу всех строк файла.

   Если известны номера строк, можно получить результат  вы-
полнения команды в любой части файла.

   Пример:

    Команда:

 5p

устанавливает указатель текущей записи на пятую строку.

   В любой момент времени можно  определить,  каков  текущей
номер строки. Это делается с помощью команды ".=".

   Использование этой команды полезно после внесения  много-
численных изменений в файл.

   Можно указать несколько строк, задав диапазон  "от,  до".
Указатель текущей строки "." можно использовать на месте на-
чальной или конечной строки диапазона. Так, команда:

 .,$p

печатает все строки от текущей до конца файла.


   13.6.3. Изменение указателя текущей строки


   Прииспользовании команд поиска просмотр всегда начинается
с  текущей  строки и продолжается в прямом или обратном нап-
равлении до тех пор, пока не будет обнаружена строка с иско-
мым текстом. Например, если буфер содержит строки:

     .
     АБ
     .
     .
     БВ
     .

и, если текущая строка - первая, то команда:

 /А/, /Б/p

не распечатает строки, расположенные в промежутке от  строки
"АБ" до строки "БВ", так как при использовании запятой в ка-
честве разделителя указателей строк, номер текущей строки не
изменяется  после обработки каждого адреса; каждый поиск на-


                                                          23

чинается от текущей строки. В результате  будет  распечатана
одна строка "АБ".

   При указании диапазона адресов вместо запятой использует-
ся  точка  с  запятой.  Символ  ";"  вызывает установку в то
место, которое определяется при  вычислении  номеров  строк.
Фактически  редактор  "перемещает" указатель текущей строки.
Команда:

 /А/; /Б/p

распечатывает строки в диапазоне от "АБ" до  "БВ",  так  как
после  нахождения строки с "А" эта строка становится текущей
и поиск "Б" начинается после этой строки.


   13.6.4. Прерывание работы редактора


   Если во время выполнения команды была нажата клавиша пре-
рывания,  будет восстановлено состояние, максимально прибли-
жающееся к тому, которое было перед началом  выполнения  ко-
манды. Естественно, некоторые изменения являются бесповорот-
ными: если в этом момент читался или записывался в файл, вы-
полнялась подстановка или удаление строки, эти команды будут
остановлены в некотором промежуточном (непредсказуемом) сос-
тоянии; указатель текущей строки изменится.

   Более определенно прерывается команда  печати.  Положение
указателя  текущей  строки  не  изменяется  до тех пор, пока
печать не завершится. Таким образом, если  запущена  команда
печати  и  она  еще не напечатала нужную строку, при нажатии
клавиши прерывания текущей строкой останется та строка,  ко-
торая была в момент запуска команды "p".


   13.7. Глобальные команды


   Глобальные команды используются для поиска и редактирова-
ния  тех  строк в буфере редактора, которые содержат или на-
оборот не содержат заданный образец.

   Глобальная команда в строке  должна  быть  первой,  затем
идет образец и команды редактора. Допускается написание нес-
кольких команд редактора, но в этом  случае  каждая  команда
должна  располагаться  на отдельной строке, и каждая строка,
за исключением последней, должна заканчиваться символом "\".


   13.7.1. Команда g


   Используется для выполнения одной или  нескольких  команд
редактора  над всеми строками, которые содержат заданный об-
разец.

   Общий вид командной строки (строк) с  использованием  ко-
манды "g" следующий:


    g/образец/ команда или перечень команд.


24


   Примеры:

g/abcd/p
     печать всех строк буфера, содержащих последовательность
     "abcd";

g/abcd/s//efjc/gp
     замена и печать всех строк буфера,  в  которых  найдена
     последовательность "abcd";

1,$s/abcd/efjc/gp
     замена во всех  строках  последовательности  "abcd"  на
     "efjc" и печать последней заменяемой строки.

      g/xxx/.-1s/abc/def/\
      .+2s/ghi/jkl/\
      .-2,.p замена в строках до и после каждой строки,  со-
     держащей "xxx", и печать всех трех строк.


   13.7.2. Команда v


   Команда "v" аналогична команде "g" за  исключением  того,
что она работает с теми строками, которые не содержат задан-
ный образец.

   Общий вид командной строки (строк) при использовании  ко-
манды "v":

v/образец/ команда или перечень команд.

   ПРИМЕР:

v/xxx/s/aaa/bbb/
     заменить во всех строках файла последовательность "aaa"
     на  "bbb" кроме строк, в которых имеется последователь-
     ность "xxx".

























                                                          25




                    14. РАБОТА С ФАЙЛАМИ



   14.1. Команда указания имени файла (f)


   Данная команда предназначена для  запроса  или  изменения
сохраняемого редактором имени файла (текущего имени).

   Формат команды:

 f [file]

   В ответ на команду "f" без аргумента редактор  напечатает
сохраненное им ранее имя файла (текущее).

   Это имя запоминается редактором  при  вызове  по  команде
SHELL:

 ed file

или по команде редактора:

 e file

   Например, в результате выполнения команды:

 f file1

   имя файла, хранимое редактором, будет заменено  на  новое
имя "file1", и оно станет текущим.

   Команда записи "w" без аргументов копирует буфер редакто-
ра в файл с текущим именем.

   Пример создания двух вариантов файла "file1":

 ed file1
 f file2
   ...
 w
 w file3
 q


   14.2. Об'единение файлов


   Предположим, что в  файл  "file1"  сразу  же  после  слов
<текст...> требуется вставить файл "file2".

   Для этого необходимо вызвать редактор для файла  "file1",
найти  символы  "текст..."  и  добавить  в  это  место  файл
"file2".

 ed file1
 /текст.../
 текст... (ответ редактора)


26

 .r file2

   Команда "r"  без  адресов  добавляет  читаемые  строки  в
конец, т.е. работает аналогично "$r".


   14.3. Разбиение файла


   Предположим, что нужно выделить в отдельный файл  некото-
рую  таблицу,  чтобы  ее можно было отдельно форматировать и
проверять.

  .TS
  .../содержимое/
  .TE

   Для выделения этой таблицы  в  отдельный  файл  с  именем
"table"  в  первую  очередь  нужно найти начало этой таблицы
(строку "TS"), а затем записать соответствующий  фрагмент  в
файл:

 /^\.TS/
 .TS (редактор печатает найденную строку)
 .,/^\.TE/w table

   В результате этого поставленная  цель  будет  достигнута.
Можно выполнить все это и в одной команде:

 /^\.ts/;/^\.te/w table

   Дело в том, что команда "w"  может  выполнять  запись  не
всего файла, а некоторой группы строк. При желании можно за-
писать даже одну строку, для этого надо  задать  один  номер
строки вместо двух.


   14.4. Перекомпановка файла



   14.4.1. Перемещение строк


   Данная команда предназначена для перемещения строк в  бу-
фере редактора.

   Формат команды:

 [n[,k]]ml

   где:

n,k -
     номера начальной и конечной перемещаемых строк;

m   -
     команда перемещения;

l   -
     номер строки, после которой надо поместить строки с но-
     мерами от "n" до "k" включительно.


                                                          27


   По данной команде строки с номерами от "n" до "k" включи-
тельно  помещаются  после  строки  с номером "l", причем, на
прежнем месте эти строки не сохраняются.




























































28


   ПРИМЕР:

1,3w$
     группу строк с 1-ой по 3-ю  поместить  после  последней
     строки в буфере редактора.

   Если указан один номер строки, то перемещается только эта
строка.

   Если номер отсутствует, то перемещается текущая строка.

   Данная команда может успешно использоваться вместе с  ко-
мандой поиска.

   Например, имеется следующий текст:

 ПЕРВЫЙ ПАРАГРАФ
 <текст>
 КОНЕЦ ПЕРВОГО ПАРАГРАФА
 ВТОРОЙ ПАРАГРАФ
 <текст>
 КОНЕЦ ВТОРОГО ПАРАГРАФА

   Если необходимо переставить  параграфы  местами,  то  это
можно выполнить с помощью команды:

 /ВТОРОЙ/,/КОНЕЦ ВТОРОГО/m/ПЕРВЫЙ/-1

   Строки, начиная от строки, содержащей слово "ВТОРОЙ",  до
строки, содержащей слова "КОНЕЦ ВТОРОГО" включительно, поме-
щаются перед строкой, содержащей слово "ПЕРВЫЙ".

   По завершении операции перемещения текущей строкой стано-
вится  последняя  перемещенная строка (в последнем примере -
это строка со словами "КОНЕЦ ВТОРОГО").




























                                                          29




                  15. СПЕЦИАЛЬНЫЕ СИМВОЛЫ


   Некоторые символы имеют для редактора особое значение.  К
ним относятся:

 . \ $ ^ * [ ] &

Эти символы обычно называются метасимволами.


   15.1. Метасимвол .(точка)


   В зависимости от контекста  символ  "."  имеет  несколько
значений.

   В левой части команды подстановки и при поиске с  помощью
конструкции  "/.../"  символ  "."  означает  любой одиночный
символ. Таким образом, в результате поиска

 /x.y/

будут найдены строки текста, содержащие символы "x"  и  "y",
между которыми находится любой символ, например:

 x+y
 x-y
 x y

   Символ ".", используемый для указания номера строки обоз-
начает текущую строку.

   ПРИМЕРЫ:

.+1s/a/,/
     замена символа "a" на символ "," в строке, следующей за
     текущей.  Символ  "." записанный в правой части команды
     замены "s", не имеет специального значения.

1,5s/,/./
     замена символа "," на символ "." в строках  с  1-ой  по
     5-ую включительно.

   Команда:

 .s/././

иллюстрирует все значения символа ".". Первая "." в  команде
- это номер текущей строки, вторая "." - это метасимвол, ко-
торый соответствует любому  одному  символу  данной  строки,
третья "." - это настоящая точка в команде замены.

   Такая команда, примененная, например, к строке:

 ошибка чтения.

дает результат:



30

 .ошибка чтения.


   15.2. Метасимвол  (обратный слэш)


   Обратная дробная черта (или обратный слэш) отменяет  спе-
циальное  значение,  которое  может  иметь  следующий за ней
символ; в  частности,  "\."  означает  точку,  а  не  "любой
символ".

   ПРИМЕРЫ:

 s/\./?/
замена символа "." на символ "?";

 /\.рр/
поиск строк, содержащих ".рр";

 /\/
поиск символа "\";

 /\//
поиск символа "/";

 s/\\\.//
удаление в текущей строке последовательности символов ".".

   Для разделения полей в команде "s"  может  использоваться
любой  символ,  а  не  только дробная черта (однако для кон-
текстного поиска требуется использовать дробную черту). Нап-
ример,  если  строка  уже  содержит  много  символов дробной
черты, как в строке:

 //exec//sys.fort.go //etc ...

То можно использовать  в  качестве  разделителя  символ  ":"
(двоеточие).  Удалить  все символы дробной черты можно с по-
мощью команды:

 s:/::g

если для стирания символов  и  удаления  строк  используются
клавиши  "#" и "@", их нужно вводить в виде "\#" и "\@" (это
относится не только к работе с ed).

   Если текст вводится с помощью одной из команд:  "a",  "i"
или "c", то символ обратной дробной черты не является специ-
альным, и требуется нажимать эту клавишу только один раз для
каждой обратной дробной черты.


   15.3. Метасимвол $ (денежный знак)


   В зависимости от того,  как  используется  знак  денежной
единицы ($), он может обозначать конец файла или конец стро-
ки. Когда указывается диапазон (от строки 1 до строки  "$"),
совершенно ясно, что речь идет о конце файла. "1,$p" вызовет
распечатку всего файла. Но запись "s/$/./p"  указывает,  что
точка будет помещена в конце текущей строки.



                                                          31

   В команде:

 $s/$/$

первый символ "$" означает последнюю строку файла, второй  -
означает  конец этой строки, а третий действительно является
символом денежной единицы, который добавляется  к  указанной
строке.


   15.4. Метасимвол ^ (отрицание)


   Метасимвол "^" применяется так же, как метасимвол "$", за
исключением  того,  что  он  указывает  начало  строки, а не
конец.

   ПРИМЕРЫ:

/^время/
     поиск строки, начинающейся со слова "время";

s/^/ /
     поместить пробел в начало текущей строки.

   Метасимволы можно об'единять. Напрмер,  для  того,  чтобы
найти строку, содержащую только символы:

 .PP

Можно использовать команду:

 /^.pp$/


   15.5. Метасимвол * (звездочка)


   Метасимвол "*" означает, что символ, за которым он следу-
ет может повторяться произвольное число раз.

   Если в тексте имеется  большое  количество  пробелов,  их
можно сжать, например:

 Московское         время 18 часов

   В результате выполнения команды:

 s/e *время 1/e время 1/p

получим:

 Московское время 18 часов











32

   15.6. Метасимволы [] (квадратные скобки)


   Метасимволы "[]" позволяют определить подмножество симво-
лов, которые необходимо распознавать при выполнении операции
поиска или подстановки. Запись группы символов,  заключенных
в  квадратные  скобки, означает - "любой одиночный символ из
указанных".  Например,  если  записать  "[0123456789]",  это
будет  означать  -  "любая цифра". Можно записать и короче -
"[0-9]". Запись двух символов, разделенных знаком минус, оз-
начает задание интервала в лексикографической последователь-
ности символов. Так, запись "[А-Я]"  означает  -  "прописная
русская буква", а запись "[a-z] [a-z0-9]*" означает - после-
довательность латинских букв и цифр, начинающаяся с буквы.

   Указание в начале класса символа "^" означает "ни один из
следующих символов". Например:

 [^ 0-9]

обозначает "любой символ, за исключением цифры.

        Поиск символов.

   ПРИМЕРЫ:

1,$s/^[0-9]*//
     удаление всех цифр в начале каждой строки;

/^[^<пробел><табуляция>]/
     поиск первой строки, не начинающейся  символом  пробела
     или табуляции.

   Внутри класса символов могут присутствовать любые символы
и,  чтобы  избежать  путаницы,  в квадратных скобках символы
принципиально не имеют специального значения. Например, что-
бы найти специальные символы, можно использовать команду:

 /[.[]/

внутри "[...]" символ "["  не  является  специальным.  Чтобы
включить  символ  "]"  в  класс  символов, нужно указать его
первым.


   15.7. Метасимвол & (амперсенд)


   Символ "&" используется в первую очередь  для  сокращения
вводимого текста.

   Предположим, имеется строка:

 В ЭТО ВРЕМЯ

и требуется преобразовать ее в строку:

 В ЭТО ВРЕМЯ СУТОК

конечно, для этого можно воспользоваться командой

 s/ВРЕМЯ/ВРЕМЯ СУТОК/


                                                          33


однако требование повторно указывать слово  "ВРЕМЯ"  кажется
неразумным.  Для  того, чтобы избежать этого повторения, ис-
пользуется символ "&". В правой  части  команды  подстановки
амперсенд  означает  "найденный текст", так что можно ввести
команду:

 s/ВРЕМЯ/& СУТОК/

где "&" будет означать "время". Конечно,  в  данном  примере
экономия будет незначительной, однако если количество симво-
лов велико или представляет собой нечто вроде ".*", которому
соответсвует большой кусок текста, экономится много вводимых
символов. Снижается также вероятность совершения ошибки  при
вводе  заменяющего  текста. Например, для того, чтобы заклю-
чить в скобки строку, независимо от ее длины, можно  исполь-
зовать команду:

 s/.*/(&)/

   Амперсенд может встречаться в правой части  команды  нес-
колько раз. Команда:

 s/ВРЕМЯ/& СУТОК И & ГОДА /

построит строку:

 ВРЕМЯ СУТОК И ВРЕМЯ ГОДА

а команда:

 s/В ЭТО ВРЕМЯ/&? &!!!/

преобразует исходную строку в:

 В ЭТО ВРЕМЯ?  В ЭТО ВРЕМЯ!!!

   Чтобы получить настоящий символ "&", используется  обрат-
ная  дробная  черта  для  отмены  его специального значения.
Команда:

 s/амперсенд/\&/

заменит слово "амперсенд" на символ "&".  Обратите  внимание
на  то,  что символ "&" является специальным только в правой
части команды, в левой части он не имеет специального значе-
ния.

















34




               16. ДОПОЛНИТЕЛЬНЫЕ ВОЗМОЖНОСТИ



   16.1. Временный выход из редактора


   Иногда бывает удобно на некоторое время выйти из редакто-
ра, для выполнения какой-либо другой команды, не покидая ре-
дактор. Это можно сделать с помощью команды временного выхо-
да "!".

   Если ввести:

 !команда_системы_ДЕМОС

   процесс редактирования приостанавливается  и  выполняется
указанная  команда.  Редактор сообщает о завершении этой ко-
манды, печатая еще один восклицательный знак "!", после это-
го можно снова возобновлять редактирование.


   16.2. Командные файлы редактора


   Если достаточно  сложный  набор  операций  редактирования
должен  быть  выполнен  над многими файлами, это проще всего
сделать путем создания командного файла редактора,  содержа-
щего  нужные  операции,  и последующего применения этого ко-
мандного файла поочередно ко всем файлам.

   Предположим, например, что нужно  заменить  каждое  слово
"версия1"  на  "версия2"  и  каждое слово "1985" на "1986" в
большом количестве файлов. Поместим в файл "list"  следующие
строки:

 g/версия1/s//версия2/g
 g/1985/s//1986/g
 w
 q

после этого можно воспользоваться командами:

 ed file1 < list
 ed file2 < list
 ...

Это приведет к тому, что редактор ed будет получать  команды
из  ранее  приготовленного  файла.  В этом случае вся работа
должна планироваться заранее.

   С помощью интерпретатора команд системы можно  более  или
менее легко просмотреть набор файлов циклически.








                                                          35

   16.3. Режим шифрования


   При обработке зашифрованных файлов, редактор вызывается с
параметром "-x":

 ed -x имя_файла

В этом случае перед началом копирования файла  запрашивается
ключ  по  которому производится шифрование и расшифровка ин-
формации при всех обменах с файлом.

   Переход в режим шифрования возможен и в процессе  сеанса.
С  этой  целью  пользователь может установить текущий ключ с
помощью команды:

 x

После чего будет выдана подсказка:

 Entering encrypting mode!
 Key:

и пользователь набирает ключ (при этом символы не  отобража-
ются  на  экране терминала). Признаком окончания ввода ключа
является код <cr>. Ввод ключа нулевой длины  отменяет  режим
шифрования.


   16.4. Программа grep


   Иногда требуется найти все случаи употребления некоторого
слова или образца в ряде файлов для того, чтобы отредактиро-
вать их или просто проверить наличие или  отсутствие.  Можно
отредактировать  каждый  файл  в  отдельности и отыскать там
представляющий интерес образец, однако, если  файлов  много,
это  может  оказаться  достаточно утомительным, а если файлы
очень велики, то просто невозможным из-за ограничений редак-
тора ed.

   Программа "grep" языка управления заданиями предназначена
для  печати  всех  строк соответствующих указанному образцу.
Так, команда:

 grep "нечто" файл1 файл2 файл3 ...

Находит "нечто" везде, где оно встречается  в  файлах  "фай-
л1","файл2"  и  т.д.  Команда "grep" указывает также файл, в
котором была найдена каждая строка и  (если  задан  параметр
"-n") номер строки.

   Образец, обозначенный "нечто", может быть любым образцом,
который  вы  используете  в редакторе, так как grep и ed ис-
пользуют один и тот же механизм поиска образцов. Если  обра-
зец  содержит какие-либо неалфивитные символы, его целесооб-
разно всегда заключать в апострофы '...',  поскольку  многие
такие  символы имеют специальное значение для интерпретатора
команд sh (или csh). Если не поместить их в  апострофы,  ин-
терпретатор  команд  попытается обработать их перед тем, как
они будут переданы команде grep.



36

   Существует также возможность находить строки, которые  не
содержат указанного образца. Команда:

 grep -v "нечто" файл1 файл2 ...

Находит все строки, которые не содержат "нечто".  Ключ  "-v"
должен  находиться  в  указанной  позиции.  С помощью команд
"grep" и "grep -v" можно выбирать строки, содержащие некото-
рую комбинацию образцов. Например, для получения всех строк,
содержащих "x", но не содержащих "y", можно использовать ко-
манду языка SHELL:

 grep x файл ... | grep -v y

(символ "|" означает, что результат работы первой команды  и
используется в качестве входа второй команды).
















































                                                          37




                  17. СООБЩЕНИЯ РЕДАКТОРА


   Диагностические сообщения, выдаваемые редактором  в  про-
цессе работы крайне лаконичны, это:

WRITE ERROR
     ошибка при записи, связанная либо с  отсутствием  места
     на устройстве, либо со сбоем аппаратуры;

Entering encrypting mode!
     свидетельствует о влючении режимa шифрования;

MEM? выдается в режиме дозаписи в буфер редактора при дости-
     жении предельного размера буфера;

?<file>
     при начале работы или после команд "e", "r", "f"  озна-
     чает,  что указанный файл (file) отсутствует; после ко-
     манды "w", означает что запись в файл запрещена.

   Если при вводе команды зарегистрированна какая-либо  дру-
гая ошибка редактор сообщит об этом, выдав символ "?".






































38

                                                 ПРИЛОЖЕНИЕ 


                  1. КРАТКИЙ ОБЗОР КОМАНД


   В общем случае команды редактора ed состоят из имени  ко-
манды,  которому  могут  предшествовать  один или два номера
строк, и после которого для команд "e",  "r"  и  "w",  может
указываться  имя файла. В строке может присутствовать только
одна команда, однако команда "p" может следовать после любой
другой команды кроме "e", "r", "w" и "q".

a -  Дописать строки в буфер редактора после текущей строки,
     (если  не  задана другая строка). Дозапись продолжается
     до тех пор, пока не будет введена команда ".".  Текущей
     становится  последняя дописанная строка. В этой команде
     допускается адрес "0", при этом текст помещается в  на-
     чало буфера.

c -  Заменить  указанные  строки  новым  текстом,  следующим
     после  команды  "c".  Ввод новых строк завершается ".",
     как и в команде "a". Если номера  строк  в  команде  не
     указаны,  заменяется текущая строка. Текущей становится
     на последняя замененная строка или (если  строк  замены
     не было) строка предществующая удаленным строкам.

d -  Удалить указанные строки. Если номера строк не заданны,
     удаляется текущая строка. Текущей становится первая не-
     удаленная строка, кроме случая, когда удаляется послед-
     няя строка буфера, в этом случае текущей становится но-
     вая последняя строка буфера.

e -  Редактирование нового файла. Предшествующее  содержимое
     буфера  теряется, так что предварительно полезно ввести
     команду "w". Текущей становится последняя строка  буфе-
     ра.

E -  Команда выполняет те же действия, что и "e", за  исклю-
     чением того, что не выдается сообщение, если после пос-
     леднего изменения буфера не была выдана команда  записи
     (w).

f -  Выдать текущее имя файла. Если после команды "f" указы-
     вается имя файла, текущее имя файла будет заменено этим
     именем.

g -  Конструкция "g/re/команды" выполняет указанные  "коман-
     ды"  над  теми  строками, которые соответствуют образцу
     "re".

i -  Вставить строки перед указанной строкой  (или  строкой,
     определяемой   точкой).  Вставка  завершается  командой
     ".<cr>". Точка устанавливается на последнюю вставленную
     строку.

j -  Об'единить указанные строки в одну строку. Если  строки
     не  указаны,  об'единяются  текущая  и следующая за ней
     строки.





                                                          39

k -  Отметить строку (указанную или текущую) маркером, зада-
     ваемым  после  "k".  В  качестве  маркеров используются
     строчные латинские буквы.

l -  Распечатать строки. Команда  "l"  эквивалентна  команде
     "p",  однако  она распечатывает графически не отобража-
     емые символы и "сворачивает" длинные строки.

m -  Поместить указанные  строки  после  строки,  задаваемой
     после  "m".  Точка устанавливается на последнюю переме-
     щенную строку.

p -  Выдать указанные строки. Если строки не указаны, распе-
     чатывается текущая строка. Отдельный номер строки экви-
     валентен  команде  "<номер-строки>p".  Простое  нажатие
     клавиши "ввод" распечатывает следующую строку (.+1).

q -  Выход из редактора. Если при этой операции теряется ин-
     формация  (например,  копия исходного файла изменялась,
     но не была выдана команда записи "w"), после первой ко-
     манды  "q" выдается подсказка "?" и никаких действий не
     производится. Выдача подряд двух команд "q" без предва-
     рительной  команды  "w"  приводит  к  стиранию буфера и
     окончанию работы с редактором.

Q -  Работает также как команда "q" за исключением того, что
     выход  производится немедленно (без какой-либо диагнос-
     тики о возможной потере информации).

r -  Прочитать файл  в буфер (в конец буфера, если не указа-
     но  по-другому). Текущей становится последняя считанная
     строка.

s -  Команда s/xxx/yyy/ подставляет  вместо  символов  "xxx"
     символы  "yyy" в указанных строках. Если строки не ука-
     заны, подстановка выполняется в текущей строке. Текущей
     становится   последняя   строка,  в  которой  произошла
     подстановка, это приводит к сохранению исходного  поло-
     жения,  если  не  была  выполнена  ни одна подстановка.
     Команда "s" заменяет только первое  вхождение  "xxx"  в
     строке.  Для  замены  всех  вхождений после завершающей
     дробной черты указывается символ "g".

t -  Скопировать указанные строки после  строки,  задаваемой
     после  "t".  Текущей становится последняя скопированная
     строка.

u -  Аннулировать изменение, выполненное предшествующей  ко-
     мандой.

v -  Конструкция "v/re/команды" выполняет указанные  "коман-
     ды"  над теми строками, которые не соответствут образцу
     "re".

w -  Записать буфер в файл. Значение указателя текущей стро-
     ки не изменяется.

W -  Аналогична команде "w", за исключеним того что  указан-
     ные строки дописываются к файлу.





40

x -  Работа в режиме шифрации. Запрашивается ключ, используя
     который последующие команды "r", "e" и "w" будут зашиф-
     ровывать и расшифровывать текст. Пустой  ключ  отменяет
     режим шифрации.

.= - Выдать текущий номер строки (один символ  "="  печатает
     номер последней строки).

!  -  Конструкция  "!командная_строка"  вызывает  выполнение
     "командной_строки" интерпретаром команд.

/re/ Контекстный поиск. Поиск следующей строки, которая  со-
     держит данную последовательность символов, и ее выдача.
     Текущей становится  строка,  соответствующая  заданному
     образцу  "re".  Поиск  начинается со строки ".+1 до $",
     после последней строки переходит к строке 1 и, при  не-
     обходимости, продолжается до текущей строки.

?re? Контекстный поиск в обратном направлении. Поиск начина-
     ется со строки 1 и продолжается до последней строки.

. (точка)
     Обозначение текущей строки.

$ -  Обозначение последней строки.

'x - Обозначение строки, ранее отмеченной маркером "x"





































                                                          41



                           СОДЕРЖАНИЕ



ВВЕДЕНИЕ...............................................    3

1.  ВЫЗОВ РЕДАКТОРА....................................    4
    1.1. ДОЗАПИСЬ ТЕКСТА...............................    4

2.  ЗАПИСЬ ФАЙЛА (w)...................................    5

3.  ВЫХОД ИЗ РЕДАКТОРА (q).............................    6

4.  ЧТЕНИЕ ФАЙЛА.......................................    7
    4.1. Команда редактирования файла (e)..............    7
    4.2. Команда чтения файла (r)......................    7

5.  ПЕЧАТЬ ТЕКСТА......................................    8
    5.1. Команда печати (p)............................    8
    5.2. Команда печати (l)............................    9

6.  ПРОСМОТР ФАЙЛА.....................................   10

7.  КОМАНДА УДАЛЕНИЯ СТРОК (d).........................   11

8.  КОМАНДА ОТМЕНЫ РЕДАКЦИИ (u)........................   12

9.  КОМАНДА ЗАМЕНЫ ВНУТРИ СТРОКИ (s)...................   13

10. КОМАНДА ПОИСКА КОНТЕКСТА...........................   15
    10.1.Конструкция /.../.............................   15
    10.2.Конструкция ?...?.............................   15
    10.3.Продолжение поиска............................   16

11. КОМАНДА ВСТАВКИ СТРОК (i)..........................   17

12. КОМАНДА ЗАМЕНЫ СТРОК (c)...........................   18

13. РАБОТА СО СТРОКАМИ.................................   19
    13.1.Разбиение строк...............................   19
    13.2.Об'единение строк.............................   19
    13.3.Копирование строк.............................   20
    13.4.Перестройка строк.............................   20
    13.5.Маркеры.......................................   21
    13.6.Адресация строк в редакторе...................   22
    13.6.1.Адресная арифметика.........................   22
    13.6.2.Номера строк и указатель текущей строки.....   23
    13.6.3.Изменение указателя текущей строки..........   23
    13.6.4.Прерывание работы редактора.................   24
    13.7.Глобальные команды............................   24
    13.7.1.Команда g...................................   24
    13.7.2.Команда v...................................   25

14. РАБОТА С ФАЙЛАМИ...................................   26
    14.1.Команда указания имени файла (f)..............   26
    14.2.Об'единение файлов............................   26
    14.3.Разбиение файла...............................   27
    14.4.Перекомпановка файла..........................   27
    14.4.1.Перемещение строк...........................   27



42

15. СПЕЦИАЛЬНЫЕ СИМВОЛЫ................................   30
    15.1.Метасимвол .(точка)...........................   30
    15.2.Метасимвол  (обратный слэш)...................   31
    15.3.Метасимвол $ (денежный знак)..................   31
    15.4.Метасимвол ^ (отрицание)......................   32
    15.5.Метасимвол * (звездочка)......................   32
    15.6.Метасимволы [] (квадратные скобки)............   33
    15.7.Метасимвол & (амперсенд)......................   33

16. ДОПОЛНИТЕЛЬНЫЕ ВОЗМОЖНОСТИ.........................   35
    16.1.Временный выход из редактора..................   35
    16.2.Командные файлы редактора.....................   35
    16.3.Режим шифрования..............................   36
    16.4.Программа grep................................   36

17. СООБЩЕНИЯ РЕДАКТОРА................................   38

ПРИЛОЖЕНИЕ 1.  КРАТКИЙ ОБЗОР КОМАНД....................   39














































                                                          43

