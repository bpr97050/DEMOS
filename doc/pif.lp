
            дддд   ееееее   м     м    oooo     сссс
           д   д   е        мм   мм   o    o   с    с
          д    д   е        м м м м   o    o   с    с
          д    д   еееее    м  м  м   o    o   с
          д    д   е        м     м   o    o   с
          д    д   е        м     м   o    o   с    с
         дддддддд  ееееее   м     м    oooo     сссс



          демосдемосдемосдемосдемосдемосдемосдемосде
          емосдемосдемосдемосдемосдемосдемосдемосдем
          мо                                      мо
          ос                                      ос
          сд        ОПЕРАЦИОННАЯ СИСТЕМА          сд
          де                                      де
          ем               ДЕМОС                  ем
          мо                                      мо
          ос                                      ос
          сд                                      сд
          де             Версия 1.0               де
          ем                                      ем
          мо                                      мо
          сдемосдемосдемосдемосдемосдемосдемосдемосд
          демосдемосдемосдемосдемосдемосдемосдемосде







              СИСТЕМА ПОДГОТОВКИ ДОКУМЕНТАЦИИ
                            PIF






                Школьников Юрий Владимирович












                       МОСКВА - 1985









                                                           1













   Данный  документ  содержит  описание  системы   обработки
текстов  pif,  которая предназначена для подготовки докумен-
тов, отчетов и статей.




















































     ВВЕДЕНИЕ


   Кроме традиционных "вычислительных" приложений, в послед-
ние  годы, ЭВМ все чаще используется в качестве средства ав-
томатизации работ "конторского" характера: подготовки  отче-
тов, статей, описаний, деловой переписки и т.д.

   Основной компонентой ОС ДЕМОС для выполнения  этих  задач
является система pif, предназначенная для получения докумен-
та заданного формата. Система обрабатывает  исходный  текст,
снабженный  специальными командами "разметки", которые опре-
деляют формат документа и необходимые  выделения  фрагментов
текста.  Следует  отметить,  что  язык команд pif достаточно
сложен и предназначен скорее для создания макрокоманд  более
высокого уровня, чем для непосредственного описания конкрет-
ных документов.

   Характерной особенностью системы pif является ее ориента-
ция  на  совместное  использование с другими компонентами ОС
ДЕМОС: текстовыми редакторами, программами поиска  и  сорти-
ровки,  средствами  построения  таблиц  и  т.п. То есть, pif
нужно рассматривать не как самостоятельную, замкнутую систе-
му обработки текстов, а как инструмент для обеспечения одно-
го из этапов в данной технологической цепочке создания доку-
мента.




































                                                           3



     1. ВЫЗОВ PIF


   Общая форма для вызова pif имеет следующий формат:

                  pif [параметры] [файлы]

где [параметры] означает любое число возможных параметров, а
[файлы]  определяет  список файлов, содержащих форматируемый
документ. Если имена файлов не заданы или  указан  параметр,
состоящий  из одного знака минус (``-''), то чтение произво-
дится из стандартного файла ввода. Ниже приводятся  парамет-
ры,  которые могут быть заданы в любом порядке перед списком
файлов:

-oсписок Печатать только те страницы,  номера  которых  при-
         сутствуют в "списке", содержащем номера и интервалы
         номеров,  разделенные  запятыми.  Интервал  номеров
         имеет вид N-M и означает: страницы с N по M; если в
         качестве первого параметра указано -N, то это озна-
         чает:  печатать  с  первой по N-ю страницу, а, если
         последний параметр N-, то это означает: печатать  с
         N-й страницы и до конца;

-nN      Присвоить номер N первой сформированной странице;

-sN      Делать остановки через каждые N страниц. Через каж-
         дые N страниц (по умолчанию N=1) pif будет останав-
         ливать работу для того, чтобы дать возможность зап-
         равить или заменить бумагу, и возобновит ее при по-
         лучении символа новой строки;

-mимя    Присоединяет   входныe   файлы   к   файлу    макро
         /usr/lib/tmac.mимя;

-raN     В регистр a (имя из одного  символа)  помещается  N
         (целое число).

-i       после того, как  входные  файлы  прочитаны,  читать
         данные со стандартного устройства ввода;

-q       вызвать режим одновременного ввода/вывода  при  ко-
         манде rd;

-Tимя    Задает имя типа устройства вывода;

-c       Выводит выровненные строки слов с  одинаковыми  ин-
         тервалами  между словами, используя полную разреша-
         ющую способность терминала.













4



     2. ОБЩИЕ СВЕДЕНИЯ


     2.1. Структура входных данных


   Входная информация состоит из строк текста, предназначен-
ного  для  выдачи на печать, среди которых содержатся строки
команд, управляющие последующей обработкой текста. Командные
строки начинаются с управляющего символа (по умолчанию точки
``.'' или апострофа `` ' ''), за которым следует имя из  од-
ного  или  двух  символов, определяющее основную команду или
макрокоманду  пользователя.   Управляющий   символ   `` ' ''
(апостроф)  блокирует функцию прерывания (вынужденное преры-
вание заполнения частично заполненной строки), происходящего
при  выполнении  некоторых  команд. Управляющий символ можно
отделять от имени команды (макрокоманды) пустым  промежутком
с помощью пробелов или символов табуляции. За именами должны
следовать либо символ ``новая строка'' либо пробел, за кото-
рым  следуют  параметры.  Командные строки с нераспознанными
именами игнорируются.

   Используя знак переключения  кода,  обычно  ``\'',  можно
вставить  различные специальные функции в любое место исход-
ного текста. Например, функция \nr вызывает подстановку  со-
держимого числового регистра r на место функции, здесь r имя
регистра, состоящее либо из одного  символа,  например  \nx,
либо,  состоящее  из  двух  символов с левой круглой скобкой
перед ним, например \n(хх.

     2.2. Разрешающая способность устройств и систе-
          мы


   Разрешающая способность системы pif составляет  240  еди-
ниц/дюйм (94,5 единиц/см), что соответствует наименьшему об-
щему множителю разрешающих способностей различных печатающих
устройств. Система pif производит округление вводимых число-
вых параметров (где это требуется  по  смыслу)  до  величины
фактической разрешающей способности конкретного устройства.

     2.3. Ввод числовых параметров


   Система pif может воспринимать числовые  параметры,  ука-
занные  в  различных  единицах измерения. В данном документе
чаще используется дюймовая шкала, потому что большинство пе-
чатающих  устройств  имеет  разрешающую  способность кратную
дюйму или долям дюйма. Но если дюймовая шкала не устраивает,
можно  пользоваться  метрической,  указывая  при  этом соот-
ветствующие единицы измерения согласно следующей таблице,  в
которой V - величина текущей разрядки по вертикали в базовых
единицах, а C - ширина символов в базовых единицах.









                                                           5



-------------------------------------------
| указ.  |     значение      | число баз. |
| шкалы  |                   |   единиц   |
|--------|-------------------|------------|
|   i    | Дюйм              | 240        |
|   c    | Сантиметр         | 240*50/127 |
|   P    | Пика=1/6 дюйма    | 240/6      |
|   n    | En=C баз. единиц  | C          |
|   p    | Пункт=1/72 дюйма  | 240/72     |
|   u    | Баз. единица      | 1          |
|   v    | Верт. разрядка    | V          |
| ничего | По умолч. см. ниже|            |
-------------------------------------------

   Единица En - это, фактически, ширина  печатаемых  знаков,
но  в  системе  pif  встречаются  "сверхширокие"  символьные
конструкции вида ``->'' , ``<-'' или  ``3/4'',  отображаемые
при  печати несколькими символами. По умолчанию, масштаб бе-
рется в единицах En для горизонтально-ориентированных команд
ll,  in, ti, ta, lt, mc и функций \h и \l; в единицах верти-
кальной разрядки (v) для вертикально-ориентированных  команд
pl,  wh,  ch,  dt,  sp,  sv, ne, rt и функций \v, \x и \L; в
пунктах (p) для команды vs и  в  базовых  единицах  (u)  для
команд  nr,  if  и  ie.  При  всех  других командах указание
масштабных коэффициентов игнорируется. Следует заметить, что
при  определении  числового регистра с каким-либо масштабным
коэффициентом значение этого регистра переводится в  базовые
единицы,  и, если этот регистр используется в командах, тре-
бующих численных аргументов,  может  потребоваться  указание
масштабного  коэффициента ``u'' во избежание дополнительного
ошибочного масштабирования по умолчанию.  Допустим,  регистр
был определен командой

                         .nr AA 40n

тогда, если указать

                          .ll \n(AA

то длина строки будет взята из регистра AA (где она хранится
в  базовых  единицах)  и  умножена на коэффициент ``En'' (по
умолчанию). Чтобы избежать ошибки  нужно  указать  следующим
образом

                         .ll \n(AAu


   Число N может указываться в форме  десятичной  дроби,  но
при запоминании оно округляется до целого числа базовых еди-
ниц.

   Для получения расстояния от текущего места до  вертикаль-
ной  или горизонтальной позиции N можно использовать индика-
тор абсолютного положения ``|'', которотый указывается перед
числом.  Для вертикально-ориентированных команд и функций |N
становится расстоянием от текущего места до вертикальной по-
зиции N, а для всех остальных команд и функций |N становится
расстоянием от текущей горизонтальной позиции на строке  вы-
вода до горизонтальной позиции N. Например, в результате вы-
полнения команды


6



                          .sp |3.2c

получится сдвиг на позицию расположенную на  3,2  сантиметра
от верхнего края страницы.

     2.4. Численные выражения


   Везде, где предполагается ввод числовых данных, можно ис-
пользовать выражения, содержащие скобки, арифметические опе-
раторы +, -, /, *, % и логические операторы <, >, <=, >=, =/
или  ==/, &/ и /, :/ или /. Вычисление выражений выполняется
слева направо за исключением выражений, где порядок выполне-
ния операций зависит от наличия скобок. Для некоторых команд
первый символ + или - отделяется  и  интерпритируется  соот-
ветственно как индикатор увеличения или уменьшения.

     2.5. Система обозначений


   Числовые параметры записываются двумя  способами.  Запись
+_N  означает,  что аргумент может иметь вид N, +N, -N и, что
соответствующее действие состоит в задании нужному параметру
значения  N,  увеличении его на N или уменьшении на N, соот-
ветственно. Простая запись N означает, что начальный  алгеб-
раический  знак не является индикатором приращения, а просто
знаком N. Обычно неприемлемые числовые входные  данные  либо
игнорируются,  либо усекаются до приемлемых значений. Напри-
мер, большинство команд предполагают задание параметрам  не-
отрицательных  значений; к исключениям относятся команды sp,
wh, сн, nr и if. Команды ft, vs, ls, ll, in  и  lt  при  от-
сутствии аргумента восстанавливают предыдущее значение пара-
метра.

   Аргументы, содержащие один символ,  обозначаются  в  виде
одной  строчной буквы, а аргументы из одного или двух симво-
лов обозначаются  в  виде  двух  строчных  букв.  Аргументы,
представляющие  собой цепочку символов, обозначают условными
сокращениями из нескольких символов.

   При описании команд  в  колонке  примечаний  используются
следующие обозначения:

B       Команда обычно вызывает прерывание.

D       Режим или соответствующие параметры отностся к теку-
        щему уровню отведения в макро.

E       Соответствующие параметры являются  частью  совокуп-
        ности параметров, определяющих текущее окружение.

O       Должен действовать до логического вывода.

P       Режим должен продолжать действовать или  быть  снова
        подключен во время физического вывода.

v,p,n,u Масштабный указатель по умолчанию. Если он не задан,
        то масштабные указатели игнорируются.




                                                           7



     3. УПРАВЛЕНИЕ СТРАНИЦАМИ


   Поля в верхней и нижней части страницы (верхний и  нижний
титулы)  автоматически  не формируются. Для этого необходимо
определить две макрокоманды и устанавить для них "ловушки" в
вертикальныхпозициях (См. раздел "Ловушки"). Это: 0 (верхний
край страницы) и -N (N от нижнего края).

   Переход от первой псевдостраницы к первой  странице  осу-
ществляется  либо, когда происходит первый обрыв заполнения,
либо, когда происходит обработка первого  не  отведенного  в
макро текста (См. раздел "Отведения").

   Установка прерываний, которые будут происходить при  дос-
тижении  "ловушки"  в  верхнем  поле первой страницы, должна
быть закончена до этого перехода.

   Для управления страницей пользуются следующими командами:

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.pl +_N                66    66     v     |
-------------------------------------------
Длина страницы  устанавливается  равной  +_N.  Текущая  длина
страницы хранится в регистре .р.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.bp +_N                1     -      B,v   |
-------------------------------------------
Начать страницу. Текущая страница выводится и начинается но-
вая  страница.  Если  +_N  задано,  то номером новой страницы
будет +_N.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.pn +_N                1     игн.   -     |
-------------------------------------------
Присвоить странице номер. Следующая страница  если  она  по-
явится,  будет  иметь  номер  +_N. Чтобы можно было присвоить
номер первой странице, команда pn должна встретиться до  на-
чального перехода от псевдо-страницы к странице. Номер теку-
щей страницы находится в регистре %.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.ne N                 -     1V     D,v   |
-------------------------------------------
Требуется место по вертикали. Если расстояние D до следующей
позиции "ловушки" меньше N, то будет пропущено расстояние D,
а затем произойдет  прерывание.  Если  на  оставшейся  части


8



страницы  нет  "ловушек",  то D - расстояние до нижнего края
страницы. Если D<V, то вывод еще одной строки все же  возмо-
жен и вызовет прерывание. Для "отведения" D - это расстояние
до "ловушки" отведенного текста, если  она  вообще  имеется,
либо очень большое число, если "ловушки" нет .

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.mk R                 нет   внут.  D     |
-------------------------------------------
Засылает место текущей вертикальной  позиции  во  внутренний
регистр или, если указан R, то в регистр R.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.rt +_N                нет   внут.  D,v   |
-------------------------------------------
Осуществляет возврат только вверх к помеченной  вертикальной
позиции  в текущем отведенном тексте если параметр +_N, отно-
сящийся к текущей позиции, задан, то эта  позиция  находится
на  расстоянии  +_N от верхнего края страницы или отведенного
текста. Если N отсутствует, происходит возврат к месту,  от-
меченному  предыдущей командой mk. Следует иметь в виду, что
вместо команды .rt в любых случаях может  быть  использована
команда  .sp  (см.  раздел  "Вертикальные размеры") заданием
промежутка до абсолютного места,  запомненного  в  регистре,
явно  указанном в команде .mk, то есть при помощи последова-
тельности

                            .mk R
                           ......
                           ......
                         .sp |\n(Ru

























                                                           9



     4. ФОРМИРОВАНИЕ, ВЫРАВНИВАНИЕ  И  ЦЕНТРИРОВАНИЕ
        ТЕКСТА


     4.1. Формирование и выравнивание


   Обычно слова набираются из строк входного текста и  соби-
раются  в  строку  выходного  текста  до  тех  пор, пока для
какого-то слова не будет хватать места. Тогда  делается  по-
пытка  перенести  слово для того, чтобы поместить в выходной
строке его часть.  Затем  межсловные  интервалы  в  выходной
строке  увеличиваются  для того, чтобы "растянуть" строку до
текущей длины строки без учета текущего отступа. Словом  яв-
ляется  любая цепочка символов, отделенная символами пробела
или признаком начала/конца входной строки. Любые смежные два
слова, которые должны храниться вместе (т.е. не должны пере-
носиться на другую выходную строку и не отдаляться  друг  от
друга  в процессе выравнивания), могут быть соединены вместе
с помощью разделения их символом незаполняемого пробела  ``\
''  (обратная косая черта и пробел). В pif межсловные проме-
жутки не одинаковы из-за маленькой  разрешающей  способности
устройств по ширине символов. Однако использование параметра
-е командной строки дает возможность получить постоянный ин-
тервал  с полной разрешающей способностью устройства вывода.
Формированием, выравниванием  и  переносом  слов  на  другую
строку  можно управлять или вообще отменить их. Длина текста
последней выходной строки хранится в регистре .n, а  позиция
линии  шрифта (основания строки) текста на странице хранится
в регистре nl. Место базисной линии последней строки  текста
на  текущей  странице (самой нижней позиции) находится в ре-
гистре .h.

   Несколько пробелов между словами, обнаруженные в исходном
тексте,   сохраняются   за  исключением  концевых  пробелов.
Начальные пробелы (в начале входной строки) вызывают  преры-
вание  заполнения  выходной строки. Чтобы вызвать прерывание
заполнения после определенного  слова  и  получить  выходную
строку,  растянутую  до текущей длины строки, при заполнении
строки можно вставить в слово или присоединить  к  нему  по-
следовательность \р.

   Строка исходного текста, которая начинается с управляюще-
го символа, не будет рассматриваться как управляющая строка,
если перед ней указать непечатаемый признак заполнения \&.

     4.2. Прерывание текста


   Две строки исходного текста в режиме "незаполнения" можно
"склеить"  в  результирующем  тексте, закончив первую строку
последовательностью \с. Аналогичным  образом,  слова  внутри
"заполняемого" текста можно "склеить", если слово (или стро-
ку)  также  закончить  последовательностью  \с.  Последующий
текст будет воспринят как продолжение текста, оканчивающего-
ся этим словом. Если в тексте (между \c и последующим словом
(или  строкой))  встретились  управляющие строки, вызывающие
прерывание заполнения, то "склеивания" не произойдет, и  на-
копленные строки будут выданы в выходной текст.



10



-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.br                   -     -      B     |
-------------------------------------------
Прервать. Заполнение  формируемой  в  данный  момент  строки
прекращается  и  строка  выводится  без выравнивания. Строки
текста, начинающиеся с  пробелов,  и  пустые  строки  текста
также вызывают прерывание.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.fi                   вкл.  -      B,E   |
-------------------------------------------
Включить режим заполнения. Последующие строки будут  обраба-
тываться  автоматически с выравниванием. Регистр .u содержит
1 если режим заполнения включен и 0 если выключен.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.nf                   вкл.  -      B,E   |
-------------------------------------------
Отменить  режим  заполнения.  Последующие  строки  исходного
текста  не будут обрабатываться и копируются непосредственно
в строки выходного текста без учета текущего значения  длины
строки.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.ad c                 оба   выр.   E     |
-------------------------------------------
Включить выравнивание строк. Если  режим  заполнения  текста
выключен, то выравнивание будет отложено до тех пор, пока он
опять не будет включен. Если присутствует указатель типа  с,
то  тип  выравнивания изменяется в соответствии со следующей
таблицей:
   ------------------------------------
   |  ука-   |                        |
   |  затель |    тип выравнивания    |
   |---------|------------------------|
   |    l    | только по левому краю  |
   |    r    | только по правому краю |
   |    с    | по центру              |
   | b или n | по обоим краям         |
   | отсут-  |                        |
   | ствует  | не изменяется          |
   ------------------------------------








                                                          11



-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.na                   -     -      E     |
-------------------------------------------
Отменить режим с выравниванием. При заполнении строки вырав-
нивание  не делается. Тип выравнивания для команды ad не ме-
няется. Если режим заполнения включен, то заполнение  выход-
ной строки все же происходит.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.ce N                 -     1      E     |
-------------------------------------------
Расположить по центру следующие N строк исходного  текста  в
пределах   текущего   размера  текста  (длина  строки  минус
отступ). Если N=0 счетчик оставшихся для центрирования строк
обнуляется  (выключается  режим центрирования). Если входная
строка является слишком длинной, она будет выровнена слева.








































12



     5. ВЕРТИКАЛЬНЫЕ РАЗМЕРЫ


     5.1. Интервал между строками


   Интервал по вертикали (V) между основаниями всех последу-
ющих  строк  выходного текста можно задать с помощью команды
vs, при этом максимальная разрешающая способность  определя-
ется  типом  устройства вывода. Используемая в данный момент
величина межстрочного интервала V хранится  в  регистре  .v.
Возможно также получение увеличенного (например, удвоенного)
межстрочного интервала путем использования команды ls.

     5.2. Дополнительное межстрочное расстояние

Имеется возможность задать дополнительное временное (на одну
выходную строку) межстрочное расстояние. Для этого использу-
ют функцию \x'N', которая встраивается в  необходимое  слово
или  пристраивается к нему. В данной функции, как и в других
функциях,  параметр  которой   заключен   между   символами-
ограничителями (здесь символ '), могут использоваться произ-
вольные ограничители.

   Если N отрицательно, то будет вертикальный прогон на  ве-
личину N перед строкой. Если N положительно, то вертикальный
прогон на величину N будет после строки. Если несколько сле-
дующих друг за другом указателей дополнительного межстрочно-
го расстояния относятся к одной и той же выходной строке, то
будет использована максимальная величина. Величина использо-
ванного в последний раз дополнительного межстрочного рассто-
яния хранится в регистре .a.

     5.3. Блоки вертикальных промежутков


   Блок пустых строк обычно формируется  с  помощью  команды
sp,  при  этом действует режим "без прогонов", если он вклю-
чен. Если внутри требуемого вертикального пространства  име-
ется  "ловушка",  то  пространство после нее не формируется.
Сплошной блок пустых строк можно сохранить, используя коман-
ду sv.

   Используются следующие команды:

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.vs N                 1/6i. пред.  E,p   |
-------------------------------------------
Установить интервал между строками V (от линии шрифта  одной
строки до линии шрифта другой). Временный дополнительный ин-
тервал по вертикали устанавливается с помощью функции  \х'n'
(см. выше).







                                                          13



-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.ls +_N                N=1   пред.  E     |
-------------------------------------------
Межстрочное расстояние (от низа одной строки до низа другой)
устанавливается в +_N. N-1 дополнительных интервалов длиной V
(пустых строк) добавляется к каждой строке выходного текста.
Дополнительные  пустые строки не добавляются, если текст или
ранее добавленная пустая строка достигает позиции "ловушки".

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.sp N                 -     N=1V   B,v   |
-------------------------------------------
Прогон по вертикали на величину N в любом направлении.  Если
N  отрицательно, происходит движение назад (вверх) и ограни-
чивается расстоянием  до  верха  страницы.  Движение  вперед
(вниз)  ограничивается  расстоянием  до ближайшей "ловушки".
Если действует режим "без прогонов", никаких промежутков  не
появится.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.sv N                 -     N=1V   v     |
-------------------------------------------
Сохранить блок пустых строк размера N.  Если  расстояние  до
следующей "ловушки" больше N, осуществляется прогон на вели-
чину N в выходном тексте. Режим "без прогонов" на эту коман-
ду  не  действует.  Если  расстояние  до следующей "ловушки"
меньше N, то прогон не осуществляется сразу, но N  запомина-
ется  для последующего использования (командой os). При пос-
ледующих командах sv запомненная ранее величина N будет  об-
новляться.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.os                   -     -      -     |
-------------------------------------------
Осуществить прогон, величина которого была запомнена по  ко-
манде .sv. Режим "без прогонов" на эту команду не действует.
Обычно используется для вывода в нужном месте пустого места,
запрошенного в предшествующей команде sv.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.ns                   выкл. -      D     |
-------------------------------------------
Включить режим "без прогонов". При этом игнорируются команды
sp и bp, без номера следующей страницы. Режим "без прогогов"
отменяется при появлении строки вывода или по команде rs.


14



-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.rs                   выкл. -      D     |
-------------------------------------------
Разрешить прогоны. Режим "без прогонов" выключается.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|Пустая строка               -      B     |
-------------------------------------------
Вызывает прерывание заполнения и выводит пустую  строку  так
же, как и команда .sp 1.














































                                                          15



     6. ДЛИНА СТРОК И ОТСТУПЫ


   Максимальнаядлина строки при включенном режиме заполнения
может быть установлена с помощью команды ll. Величина отсту-
па может быть установлена использованием команды in; отступ,
действующий  только  на  следующую  строку выходного текста,
можно установить командой ti. Длина строки включает абзацный
отступ. Длина строки за вычетом отступа является базовой ве-
личиной при центрировании текста по команде .се. При наличии
частично  собранной  строки действие команд ll, in или ti (в
случае вызова их с управляющим символом, не вызывающим обры-
ва) задерживается до тех пор, пока эта строка не будет выве-
дена. В режиме заполнения длина  текста  в  выходной  строке
меньше или равна длине строки минус отступ. Текущие значения
длины строки и отступа хранятся соответственно  в  регистрах
.l и .i. Длина заголовков, состоящих из трех частей, получа-
емыхпри использовании команды tl, устанавливается независимо
с   помощью  команды  lt  (см.  раздел  "Заголовки  из  трех
частей").

   Используются следующие команды установки длины  строки  и
формирования отступа:

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.ll +_N                65n   пред.  E,n   |
-------------------------------------------
Длина строки устанавливается равной +_N.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.in +_N                N=0   пред.  B,E,n |
-------------------------------------------
Отступ устанавливается равным +_N. Отступ предшествует каждой
выходной строке до тех пор, пока не будет изменен.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.ti +_N                -     игн.   B,E,n |
-------------------------------------------
Устанавливается временный отступ. Следующая строка выходного
текста  будет иметь отступ +_N по отношению к текущему отсту-
пу. Получающийся суммарный отступ не может быть  отрицатель-
ным. Текущий отступ не изменяется.











16



     7. МАКРОКОМАНДЫ, ЦЕПОЧКИ, ОТВЕДЕНИЯ И "ЛОВУШКИ"


     7.1. Макрокоманды и цепочки


   Макрокоманда (макро) - это имеющая определенное имя  пос-
ледовательность произвольных строк, которую можно вызвать по
имени или с помощью механизма захвата ("ловушки"). Цепочка -
это имеющая определенное имя последовательность символов, не
включающая символ новой  строки,  которую  с  помощью  имени
можно  вставить  в любое место текста. Имена команд, макро и
цепочек хранятся в одном списке имен. Имена макро и  цепочек
могут  содержать  один  или  два символа и могут совпадать с
именами команд, макро или  цепочек,  определенных  ранее  (в
этом  случае прежний вариант об'екта с этим именем игнориру-
ется). Имена макро или цепочек не  могут  содержать  русские
буквы.  Любой из этих об'ектов может быть переименован с по-
мощью команды .rn или исключен с помощью команды .rm.  Макро
создаются по командам de и di, а для внесения к ним добавле-
ний используются команды am и da. В результате команд  di  и
da  нормальный выходной текст должен быть записан в макроко-
манду. Цепочки создаются по команде ds а  для  добавления  к
ним используется команда as. Макро вызывается таким же обра-
зом, как и команда; управляющая строка, начинающаяся  с  .хх
будет  вставлять  в  текст  содержимое макро хх. Последующая
часть управляющей строки может содержать до девяти  аргумен-
тов.  Цепочки х и хх вставляются в любое нужное место текста
посредством функций \*х и \*(хх  соответственно.  Ссылки  на
цепочки и вызовы макро могут быть вложенными.

     7.2. Интерпретация ввода в режиме копирования


   В процессе определения и расширения цепочек и  макро  (но
не  в  случае отведений) исходный текст считывается в режиме
копирования. Входной текст копируется без  интерпретации  за
исключением следующих случаев, когда:

   - содержимое числовых  регистров  вставляется  с  помощью
     функции \n;

   - вставляются цепочки, указанные функцией \*;

   - вставляются аргументы, указанные функцией \$;

   - исключаются скрытые  символы  новой  строки,  указанные
     функцией \(символ новой строки);

   - исключаются комментарии, указанные функцией \";

   - последовательности \t и \a соответственно интерпретиру-
     ются  как ASCII символы HT (горизонтальная табуляция) и
     SOH (началo заголовка);

   - \\ интерпретируется как \;

   - \. интерпретируется как ".".




                                                          17



   Эти интерпретации можгут быть отменены добавлением  перед
соответствующей  функцией  обратной косой черты \. Например,
так как \\ отображается в \, то \\n будет  копироваться  как
\n,  что  при последующем считывании макро или цепочки будет
интерпретироваться как указатель числового регистра.

     7.3. Аргументы


   Во время вызова макрокоманды по имени предполагается, что
оставшаяся  часть  строки может содержать до девяти аргумен-
тов. Разделителем аргументов является символ пробела и аргу-
менты,  содержащие  символы пробела, должны быть заключены в
двойные кавычки ("). Чтобы ввести в аргумент, заключенный  в
двойные  кавычки, символ двойной кавычки, нужно в этом месте
ввести пару двойных кавычек (""). Если нужные  аргументы  не
помещаются  в строке, то для продолжения записи на следующей
строке  можно  использовать  символ  скрытой  новой   строки
(\(символ новой строки)).

   При вызове макрокоманды уровень ввода заносится в стек  и
любые  аргументы  доступные  на предыдущем уровне становятся
недоступными до тех пор, пока  макрокоманда  не  будет  пол-
ностью выполнена и не будет восстановлен предыдущий уровень.
Собственные аргументы макрокоманды можно  вставить  в  любое
место  внутри  макро с помощью функции \$N, на место которой
вставляется значение N-го аргумента (1<=N<=9). Если  вызван-
ный аргумент не существует, то результатом будет нулевая це-
почка. Например, макрокоманду xx можно определить  следующим
образом;

      .de xx        \"начало определения
      Сегодня \\$1,\\$2.
      ..            \"конец определения

и вызвать таким образом

      .хх Понедельник 14-е

чтобы получить выходной текст

      Сегодня Понедельник,14-е.

Заметим, что аргумент \$ был замаскирован в макро с  помощью
дополнительной  обратной косой черты. Количество имеющихся в
данный момент аргументов находится в регистре .$.  В  данной
реализации  на  верхнем уровне (не макро) никаких аргументов
нет. Так как ссылки на цепочки реализованы в виде макровызо-
ва  нулевого  уровня (уровня ввода), внутри цепочки не может
быть никаких аргументов. Макро, вызываемые по достижении по-
зиции  "ловушки",  также не могут содержать никаких аргумен-
тов.

   Аргументы записываются в режиме копирования в стек, отку-
да они могут быть извлечены. Такой механизм не позволяет ис-
пользовать в аргументах прямые  ссылки  на  длинные  цепочки
(вставленные во время копирования аргумента) и, поэтому, ре-
комендуется скрывать ссылки на цепочки (с  помощью  дополни-
тельного  символа ``\'') для того чтобы отложить подстановку
цепочки до момента ссылки на данный аргумент.


18



     7.4. Отведения


   Обработанный выходной текст можно отвести в макро, напри-
мер для обработки сноски или определения размера по горизон-
тали и вертикали некоторого текста для изменения страниц или
колонок  в соответствии с определенными условиями. В отведе-
нии можно установить единственную  ловушку  по  определенной
вертикальной позиции. В числовых регистрах dn и dl содержат-
ся соответственно вертикальный и горизонтальный размеры пос-
леднего  отведения.  При  последующем считывании отведенного
текста в режиме "без заполнения" вертикальный размер  каждой
из  его  строк  сохраняется, независимо от текущего значения
интервала между строками (V). Текст, при отведении  которого
была установлена постоянная разрядка, или текст с выделенны-
ми символами, может быть правильно считан только в том  слу-
чае, если эти режимы будут снова задействованы во время пос-
ледующего считывания. Одним  из  способов  достижения  этого
является   встраивание  в  текст  отведения  соответствующих
команд с помощью "механизма прозрачного вывода" (см. в  раз-
деле "Прозрачный" вывод).

   Отведенные в макро тексты могут быть вложены друг в  дру-
га, и некоторые параметры и регистры связаны с текущим уров-
нем отведения (верхний, не относящийся к отведению,  уровень
можно  считать нулевым уровнем отведения). К ним (параметрам
и регистрам)  относятся:  "ловушка"  по  отведению  и  соот-
ветствующее  ей  макро, режим "без прогонов", сохраняемая во
внутреннем регистре отмеченная вертикальная позиция (см. ко-
манды  mk  и rt), текущая вертикальная позиция (регистр .d),
самая нижняя линия шрифта на текущей странице (регистр .h) и
имя текущего отведения (регистр .z).

     7.5. "Ловушки"


   Существует три типа "ловушек": ловушки по месту на  стра-
нице,  ловушки по месту в отведении и ловушки по числу вход-
ных строк. Ловушки для вызова макрокоманды можно  поместить,
используя  команду  wh,  в  любую  позицию страницы, включая
верхний край. Позицию такой ловушки можно изменить с помощью
запроса  ch. Ловушки, позиции которых расположены на основа-
нии страницы или ниже, не действуют до тех пор, пока они  не
будут  смещены  внутрь страницы или не будет увеличен размер
страницы. Две  ловушки  могут  оказаться  на  одной  позиции
только  в  результате  первоначального помещения их в разные
позиции и последующего перемещения одной из них;  первая  из
двух ловушек, помещенных в одну и ту же позицию будет "скры-
вать" вторую, до тех пор, пока  она  не  переместится.  Если
первая  ловушка  возвращается  обратно, она снова "скрывает"
вторую ловушку. Макрокоманда, связанная с ловушкой по  месту
на  странице,  вызывается автоматически как только выводимая
строка текста перекрывает какую-нибудь ловушку (то есть  по-
зиция  ловушки  попадает в очередной вертикальный интервал).
При достижении основания (низа) страницы происходит переклю-
чение  на  ловушку  по началу (верхней части) страницы, если
вообще существует такая ловушка. Расстояние до позиции  сле-
дующей  ловушки  хранится  в регистре .t. Если между текущей
позицией и основанием страницы ловушек  нет,  то  содержимое
регистра .t равно расстоянию до основания страницы.


                                                          19




   Макровызов по ловушке, действующей в  текущем  отведении,
можно  установить с помощью команды dt. Регистр .t также ис-
пользуется в случае отведения текста в макро. Если не имеет-
ся  последующих  ловушек, то в регистр засылается достаточно
большое число. Описание ловушки по количеству входных  строк
приводится ниже в пояснениях к команде it.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.de xx yy             -     .yy=.. -     |
-------------------------------------------
Определить или переопределить макро xx. Текст макро  начина-
ется  со  следующей  строки входного текста. Строки входного
текста записывются в рабочий файл в  режиме  копирования  до
тех  пор, пока в определении макро не встретится строка, на-
чинающаяся с .yy, которая вызывает макро yy.  Если  аргумент
yy отсутствует, определение макро заканчивается строкой, на-
чинающейся с "..". Макро может содержать  вложенные  команды
de при условии, что имена макрокоманд, завершающих определе-
ние, различны или признак конца определения  является  неяв-
ным. Признак конца ".." можно замаскировать с помощью допол-
нительных символов ``\'' - \\.., которые при записи внешнего
макроопределения будут преобразованы в \.. и при последующем
считывании в "..".

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.am xx yy             -     .yy=.. -     |
-------------------------------------------
Добавить к макрокоманде (версия команды  de  для  добавления
текста в макро).

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.ds xx цепочка        -     игн.   -     |
-------------------------------------------
Определить цепочку xx, содержащую "цепочку". Цепочка опреде-
лена  от  первого непробельного символа после указания имени
цепочки до конца строки  (или  начала  комментария).  Символ
двойной  кавычки  (  "  ) перед "цепочкой" не записывается и
служит для разрешения начальных пробелов в "цепочке"

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.as xx цепочка        -     игн.   -     |
-------------------------------------------
Добавить "цепочку" к цепочке xx (версия команды ds  для  до-
бавления к цепочке).





20



-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.rm xx                -     игн.   -     |
-------------------------------------------
Удалить команду, макро или  цепочку.  Имя  xx  удаляется  из
списка  имен  и любая, связанная с ним область памяти, осво-
бождается. Последующие ссылки на это имя не  будут  вызывать
никаких действий.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.rn xx yy             -     игн.   -     |
-------------------------------------------
Переименовать команду, макро или цепочку xx в  yy.  Если  yy
уже существует, предыдущая версия yy удаляется.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.di xx                -     конец  D     |
-------------------------------------------
Отвести выходной текст в макро xx. В процессе отведения про-
исходит нормальная обработка текста за исключением того, что
не считаются страницы. Обработка текста в макро заканчивает-
ся, когда встречаются команды di или  da без аргумента. Чуж-
дые команды этого типа не должны появляться, при использова-
нии вложенных отведений.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.da xx                -     конец  D     |
-------------------------------------------
Отводить текст, добавляя  его в макро xx (версия команды  di
для добавления текста).

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.wh N xx              -     -      v     |
-------------------------------------------
Установить ловушку для вызова макро xx на  позицию  страницы
N,  отрицательное  значение  N  будет интерпретироваться как
расстояние от основания (низа) страницы. Если на  позицию  N
ранее  была  установлена ловушка с другим макро, то теперь с
позицией N будет связано макро xx. Нулевое значение N  отно-
сится  к  верхнему краю страницы. В случае отсутствия xx ло-
вушка, найденная в позиции N, удаляется.







                                                          21



-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.ch xx N              -     -      v     |
-------------------------------------------
Изменить позицию ловушки для макро xx на  N.  В  случае  от-
сутствия N ловушка, если она была установлена, удаляется.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.dt N xx              -     выкл.  D,v   |
-------------------------------------------
Установить ловушку в позицию N текущего отведения для вызова
макро xx. Еще одна команда .dt переопределит ловушку отведе-
ния. Если аргументы не заданы, ловушка удаляется.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.it N xx              -     выкл.  E     |
-------------------------------------------
Установить ловушку для вызова макро xx после чтения N  строк
исходного текста (управляющие строки и строки команд не учи-
тываются). Учитывается текст, считанный из  исходного  файла
или текст, вставляемый макрокомандами, содержащимися в стро-
ке исходного файла или вызванными при обнаружении "ловушек".

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.em xx                нет   нет    -     |
-------------------------------------------
Макро xx будет вызвана после окончания всего ввода.  Резуль-
тат  будет  таким же, как если бы содержимое xx находилось в
конце последнего обрабатываемого файла.






















22



     8. ЧИСЛОВЫЕ РЕГИСТРЫ


   Пользователю доступны множество  различных,  определенных
системой  (системных)  именованных числовых регистров. Кроме
того пользователь может определить собственные числовые  ре-
гистры.  Имена  регистров  содержат  один  или два символа и
могут совпадать с именами команд, макро или  цепочек.  Имена
регистров также не могут содержать русских букв. За исключе-
нием некоторых системных регистров,  предназначенных  только
для  чтения, числовые регистры допускают чтение, запись, ав-
томатическое увеличение или уменьшение содержимого и вставку
их содержимого в вводимый текст в различных форматах. Обычно
пользователи используют эти регистры для автоматической  ну-
мерации разделов, параграфов, строк и т.д. Числовые регистры
можно использовать всегда, когда требуется цифровой ввод,  а
также в числовых выражениях.

   Числовые регистры создаются и изменяются с помощью коман-
ды nr, которая задает имя, численное значение и величину ав-
томатического приращения. Регистры  также  изменяются,  если
они  используются  в последовательности операций, содержащих
автоприращения. Если регистры x и xx содержат N и шаг  авто-
матического приращения равен M, то их использование в следу-
ющих последовательностях приводит к  результатам,  представ-
ленным в таблице:
 ------------------------------------------
 |последова-|    состояние    |вставляемоe|
 |тельность |    регистра     |значение   |
 |----------|-----------------|-----------|
 |  \nx     | не меняется     |     N     |
 |  \n(xx   | не меняется     |     N     |
 |  \n+х    | х увелич. на M  |    N+M    |
 |  \n-х    | х уменьш. на M  |    N-M    |
 |  \n+(xx  | xx увелич. на M |    N+M    |
 |  \n-(xx  | xx уменьш. на M |    N-M    |
 ------------------------------------------

   Когдачисловой регистр вставляется в текст, его содержимое
преобразуетсяв десятичную форму (по умолчанию), в десятичную
форму с ведущими нулями, в маленькие римские цифры,  большие
римские  цифры, в последовательность маленьких букв алфавита
или последовательность заглавных букв алфавита в зависимости
от формата, заданного в команде af.

   Для создания и изменения регистров используются следующие
команды:

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.nr R +_N M            -     -      u     |
-------------------------------------------
Числовому регистру R присваивается значение +_N по  отношению
к  предыдущему  значению, если оно было. Шаг автоматического
приращения устанавливается равным M.





                                                          23



-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.af R c               араб. -      -     |
-------------------------------------------
Задает формат c для содержимого регистра R. Могут  быть  ис-
пользованы следующие форматы:

        -------------------------------------------
        | формат | последовательность нумерации   |
        |--------|--------------------------------|
        |   1    | 0,1,2,3,4,5,........           |
        |  001   | 000,001,002,003,004,005,...... |
        |   i    | 0,i,ii,iii,iv,v,.......        |
        |   I    | 0,I,II,III,IV,V,.......        |
        |   a    | 0,a,b,c,..,z,aa,ab,..zz,aaa,.. |
        |   A    | 0,A,B,C,..,Z,AA,AB,..ZZ,AAA,.. |
        -------------------------------------------


-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.rr R                 -     игн.   -     |
-------------------------------------------
Удалить регистр R. Если динамически создается большое  коли-
чество регистров, может возникнуть необходимость удалить не-
используемые больше регистры для того, чтобы освободить  об-
ласть внутренней памяти для вновь создаваемых регистров.































24



     9. ТАБУЛЯЦИИ, ЛИДЕРЫ И ПОЛЯ


     9.1. Табуляции и лидеры


   ASCII-символы горизонтальной табуляции (HT) и начала  за-
логовка  (SOH), который далее будет назывться лидером, могут
использоваться либо для генерации  горизонтальных  подвижек,
либо  для формирования цепочки повторяющихся символов. Длина
горизонтальной подвижки или цепочки регулируется внутренними
табуляционными  остановами  (табуляциями), устнавливаемыми с
помощью команды ta. Различие состоит в том, что, по  умолча-
нию,  символ  tab генерирует подвижку, а лидер формирует це-
почку точек; с помощью команд lc и tc можно изменить,  соот-
ветственно,  символы  лидеров  или  подвижек. Существует три
типа внутренних табуляционных остановов: для выравнивания по
левому  краю табуляции, для выравнивания по правому краю та-
буляции и по центру табуляции. В таблице, приведенной  ниже,
D  -  расстояние  от текущей позиции входной строки (где был
обнаружен символ tab или лидер) до следующей табуляции; "це-
почка" состоит из входных символов, содержащихся за символом
tab (лидером) до следующего символа  tab  (или  лидера)  или
конца строки; W - ширина "цепочки".

-------------------------------------------
|тип табу-|длина подвижки  |расположение  |
|ляции    |или повтор. сим-|  "цепочки"   |
|         |     волов      |              |
|---------+----------------+--------------|
| Левый   |       D        |после пропуска|
|         |                |расстояния D  |
|         |                |              |
| Правый  |     D - W      |выравнена по  |
|         |                |правому краю  |
|         |                |в пределах D  |
|         |                |              |
| Центр.  |    D - W/2     |центрирована  |
|         |                |относительно  |
|         |                |правого края  |
|         |                |интервала D   |
-------------------------------------------

   Длина горизонтальной подвижки может  быть  отрицательной,
но  длина  цепочки повторяющихся символов отрицательной быть
не может.  Цепочки  повторяющихся  символов  содержат  целое
число  символов.  Символы  tab  и лидеры, обнаруженные после
последней табуляции, игнорируются, но могут быть использова-
ны в качестве признаков конца "цепочки".

   Символы табуляции и ведущие символы не интерпретируются в
режиме  копирования.  Функции \t и \a всегда порождают неин-
терпретируемые символы табуляции и лидеров,  соответственно,
и в режиме копирования эквивалентны фактическим символам та-
буляции и ведущим символам.







                                                          25



     9.2. Поля


   Поле заключено между парой символов-разграничителей полей
и  состоит  из  подцепочек, разделенных символами индикатора
заполнения. Длина поля равна расстоянию  от  позиции  начала
поля  во  входной  строке и до следующей табуляции. Разность
между длиной поля и суммарной длиной всех подцепочек опреде-
ляет   пространство   горизонтального   заполнения,  которое
распределяется между соответствуюшими областями  заполнения.
Величина  заполнямого пространства может быть отрицательной.
Например, если ограничителем поля является символ #, а  ука-
зателем заполнения ^, то #^xxx^right# обозначает выровненную
по правому краю цепочку, с цепочкой xxx,  отцентрованной  на
оставшемся пространстве.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.ta Nt ....           0.8i  отс.   E,n   |
-------------------------------------------
Устанавливает табуляции и их типы. t=R соответствует  вырав-
ниванию  справа;  t=C  соответствует  центрированию; при от-
сутствии t подразумевается выравнивание слева. По  умолчанию
установлены табуляцци на каждые 0.8 дюйма (или 8n). Значения
аргументов разделяются пробелами;  значение,  перед  которым
стоит  знак  плюс  (``+''), рассматривается как приращение к
значению предыдущей табуляции.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.tc c                 отс.  отс.   E     |
-------------------------------------------
Символом,  заполняющим  табуляционные  подвижки   становится
символ  c, или (если c отсутствует) удаляется, обозначая тем
самым подвижки.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.lc c                 -     отс.   E     |
-------------------------------------------
Символом, заполняющим лидеры, становится символ c, или (если
c отсутствует) удаляется, обозначая тем самым подвижки.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.fc a b               выкл. выкл.  -     |
-------------------------------------------
Символ ограничителя поля устанавливается  в a; индикатор за-
полнения  устанавливается  в  b, а в случае отсутствия b - в
пробел. Если аргументы отсутствуют, механизм управления  по-
лями выключается.



26



     10. СОГЛАШЕНИЯ О ВВОДЕ/ВЫВОДЕ И  ПРЕОБРАЗОВАНИЯ
         СИМВОЛОВ


     10.1. Преобразования входных символов


   Pif  воспринимает  некоторые  управляющие  символы   кода
ASCII. В соответствующих разделах изложены способы ввода не-
которых управляющих символов, таких как символ  горизонталь-
ной  табуляции  (HT),  символ начала заголовка (SOH), символ
возврата на шаг (BS). Символ новой строки (NL) (или LF)  ис-
пользуется  в  качестве  разграничителя входных строк. Кроме
того, воспринимаются служебные символы начала текста  (STX),
конца текста (ETX), опроса (ENQ), опознания (ACK) и "звонок"
(BEL), которые могут использоваться в качестве разграничите-
лей. Все прочие символы игнорируются.

   Символ переключения ``\'' указывает,  что  за  ним  будет
следовать  символ,  который  обозначает  другой определенный
символ или некоторую функцию. Полный перечень этих  последо-
вательностей приведен в "Таблице переключательных последова-
тельностей". Символ ``\'' не следует путать с  символом  пе-
реключения  кода  (ESC)  кода ASCII. Чтобы в выходном тексте
появился символ ``\'', нужно воспользоваться  последователь-
ностью  ``\\''  во входном тексте. Символ переключения можно
изменить с помощью команды ec. Для распечатки действующего в
данный  момент  символа  переключения  можно воспользоваться
функцией \e. При желании или необходимости механизм переклю-
чения кода может быть отключен и восстановлен при помощи ко-
манды eo.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.ec c                 \     \      -     |
-------------------------------------------
Установить символ переключения в c, а при его отстутствии  в
\.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.eo                   вкл.  -      -     |
-------------------------------------------
Изменить состояние механизма переключения.

     10.2. Возврат и подчеркивание.


   Если выключен режим копирования, то  символ  возврата  на
шаг (BS) кода ASCII обычно заменяется на горизонтальную под-
вижку в обратном  направлении  на  ширину  символа  пробела.
Функция  подчеркивания,  как  одна из форм построения линий,
описана в подразделе "Рисование линий". В системе  pif  под-
черкивание  производится  автоматически при помощи включения
курсива (командой ft или функцией \f) или при помощи команды
ul.  Следует  отметить, что подчеркиваются не все символы, а


                                                          27



только буквы и цифры; знаки и пробелы остаются  неподчеркну-
тыми.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.ul N                 выкл. N=1    E     |
-------------------------------------------
Подчеркнуть текст, содержащийся в следующих N строках  вход-
ного  текста, при этом режим "без заполнения" не включается.
Выход, сгенерированный командой tl,  попадает  под  действие
команды  ul, но при этом N не уменьшается. Если N>1, то име-
ется опасность того, что  интерполированное  "захватыванием"
макро   может   выдать  строки  текста  в  пределах  данного
пространства. Чтобы избежать этого можно соответствующим об-
разом  изменять  окружение (см. раздел "Переключение окруже-
ния").

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.ft F                 обыч. пред.  E     |
-------------------------------------------
Заменяет текущий шрифт на F.  Чтобы  последующий  текст  был
подчеркнут,  нужно  указать  F=I. Чтобы вернуться к обычному
шрифту (без подчеркивания) надо указать F=R. Аналогичный ре-
зультат  получится, если воспользоваться функцией прерключе-
ния шрифта \fN, где N - тип шрифта.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.cu N                 выкл. N=1    E     |
-------------------------------------------
Разновидность команды ul, при которой подчеркивается  каждый
символ.

     10.3. Управляющие символы


   Kак управляющий символ ".", так и управляющий символ,  не
вызывающий  прерываний  " ' ",  при  желании можно изменить.
Разумеется, такое изменение должно согласовываться с постро-
ением  любых макроопределений, встречающихся в пределах дей-
ствия этого изменения, и, особенно, всех макрокоманд,  вызы-
ваемых по "ловушке".

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.cc c                 .     .      E     |
-------------------------------------------
Основной управляющий символ устанавливается в "c" или,  если
c отсутствует, устанавливается в "."




28



-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.c2 c                 '     '      E     |
-------------------------------------------
Управляющий символ, не вызывающий прерывания заполнения, ус-
танавливается в "c" или, если c отсутствует, устанавливается
в " ' " (апостроф).

     10.4. "Прозрачный" вывод


   Входная строка, начинающаяся с последовательности \! счи-
тывается  в  режиме  копирования и выводится "в чистом виде"
(без начального символа \!), иными словами,  эти  строки  не
поступают на обработку. Этот механизм можно использовать для
передачи какому-либо постпроцессору  управляющей  информации
или  помещения  управляющих  строк в макрокоманду, созданную
при отведениях.

     10.5. Комментарии и скрытые символы новой стро-
           ки


   Слишком длинные входные строки, которые должны оставаться
одной  строкой (например, определение цепочки или незаполня-
емый текст), можно разбить на  несколько  физических  строк,
каждая  из  которых,  кроме  последней, должна заканчиваться
знаком переключения \.  Последовательность  "\(символ  новой
строки)"  всегда игнорируется, если только она не появляется
в комментариях. Комментарий можно  вставить  в  конец  любой
строки,  написав  перед ним \". Символ новой строки, находя-
щийся в конце комментария, не может  быть  скрытым.  Строка,
начинающаяся  с \", будет восприниматься как пустая строка и
обрабатываться как команда .sp 1.  Комментарий  может  также
занимать целую строку если она начинается с ``.\"''

























                                                          29



     11. ЛОКАЛЬНЫЕ  ВЕРТИКАЛЬНЫЕ  И   ГОРИЗОНТАЛЬНЫЕ
         ПЕРЕМЕЩЕНИЯ И ФУНКЦИЯ ШИРИНЫ


     11.1. Локальные перемещения


   Функции \v'N' и \h'N' можно  использовать  для  локальных
перемещений  по  вертикали  и  горизонтали,  соответственно.
Расстояние N может быть отрицательным. Перемещениями в поло-
жительных  направлениях считаются перемещения вправо и вниз.
Локальным перемещением является любое перемещение в пределах
одной строки. Чтобы избежать неожиданных вертикальных смеще-
ний, необходимо следить за тем, чтобы общее  перемещение  по
вертикали,  в пределах слова в заполненном тексте и в преде-
лах строки в остальных случаях, равнялось  нулю.  Последова-
тельности  переключения,  обеспечивающие различные подвижки,
указаны в следующей таблице.
-------------------------------------------
Iвертик. | действие  Iгориз.  | действие  I
Iподвижки|           Iподвижки|           I
I--------+-----------+--------+-----------I
I \v'N'  |подвинуть  I  \h'N' |подвинуть  I
I        |на расст. NI        |на расст. NI
I  \u    |1/2 строки I\(проб.)|незаполн.  I
I        |    вверх  I        |пробел     I
I  \d    |1/2 строки I  \0    |пробел рав-I
I        |    вниз   I        |ный ширине I
I  \r    |1 строку   I        |цифры      I
I        |   вверх   I        |           I
-------------------------------------------

     11.2. Функция ширины


   Функция ширины \w'цепочка' вычисляет ширину "цепочки"  (в
базовых  единицах).  Изменения  типа  шрифта можно безопасно
вставлять в цепочку, при этом текущие условия форматирования
не  изменяются. Например, команду .ti -\w'1.'u можно было бы
использовать для формирования временного отступа слева  рав-
ного размеру цепочки "1."

     11.3. Отметка горизонтального положения


   Переключающая последовательность \kx вызовет  запоминание
в регистре x текущей горизонтальной позиции во входной стро-
ке.

   Переключающая последовательность \jx вызовет  запоминание
в регистре x текущей горизонтальной позиции в выходной стро-
ке.

   Например, конструкция

     \jxслово \h'|\nx+2u'слово

будет выделять "слово", посредством возврата к его началу  и
повторной  его  печати,  в  результате чего будет напечатано
жирным шрифтом "слово". При использовании  этой  конструкции


30



следует  иметь в виду, что занесение значения в регистр про-
изойдет после того, как будет сформировано слово, и в  такой
конструкции

     \jxслово\h'|\nx+2u'слово

содержимое регистра x будет равно нулю  (если  этот  регистр
ранее небыл определен).






















































                                                          31



     12. НЕКОТОРЫЕ СПЕЦИАЛЬНЫЕ ПРИЕМЫ ПЕЧАТИ


     12.1. Печать с наложением на одной позиции


   Функция печати с наложением в одной  позиции  \o'цепочка'
обеспечивает  автоматически  центрированную  печать на одной
позиции до девяти  символов.  Символы  "цепочки"  печатаются
один поверх другого с выравниванием по центру каждого симво-
ла. Общая ширина будет равнa ширине самого широкого символа.
Цепочка не должна содержать локальных вертикальных перемеще-
ний. Например, последовательность \o'+_' даст +_.

     12.2. Символы нулевой ширины


   Функция \zc будет выводить символ c, не оставляя  за  ним
интервала,и может быть использована для получения комбинации
символов посредством печати на одном месте  с  выравниванием
по левому краю. Например, последовательность \zO/ напечатает
перечеркнутое O, а последовательность \z|_ напечатает |_.

     12.3. Рисование линий


   При использованиии функции \l'Nc' будет формироваться це-
почка  повторяющихся  символов  'c'  слева направо длиной N.
Если 'c' можно понять как продолжение выражения  N,  то  его
можно  отделить от N символом \&. Если 'c' не задано, то ис-
пользуется символ подчеркивания  '_'.  При  отрицательном  N
перед  "рисованием" цепочки выполняется горизонтальное пере-
мещение в обратном направлении на расстояние N. Если отноше-
ние N/(ширина 'c') имеет остаток, то интервал, равный значе-
нию остатка, помещается в начале (с левого края) цепочки.  В
тех  случаях,  когда  символы должны быть напечатаны слитно,
например,  линейка  подчеркивания,  оставшееся  пространство
закрывается с помощью наложения. Если N меньше ширины симво-
ла 'c', то печатается один символ 'c', и его середина  нахо-
дится  на  расстоянии  N. Например, можно написать следующую
макрокоманду для подчеркивания цепочки:

 .de us
 \\$1\\l'-\\w%\\$1%u_'
 ..

Таким образом, вызвав макро

 .us "Подчеркнутые слова"

получим П_о_д_ч_е_р_к_н_у_т_ы_е__с_л_о_в_а_

   Функция \L'Nc' будет  "вычерчивать"  вертикальную  линию,
состоящуюиз символов c, расположенных в столбец с интервалом
в одну строку; если "c" не указано, то,  по  умолчанию,  ис-
пользуется символ "|" (вертикальная черта). Линия начинается
без какого-либо начального смещения  относительно  основания
текущей  строки. Положительное N определяет линию, проведен-
ную вниз, а отрицательное N  определяет  линию,  проведенную
вверх. После вычерчивания линии никаких компенсирующих пере-


32



мещений не выполняется и текущее положение точки будет нахо-
диться в конце линии.

   Используя совместно функции вычерчивания горизонтальных и
вертикальных  линеек,  можно,  например, заключить некоторый
блок текста в рамку и др.
























































                                                          33



     13. ПЕРЕНОС СЛОВ


   Механизм автоматического переноса слов можно отключить  и
включить.   Символ  указателя  переноса  (последовательность
\%)можно вставить в слово для указания желаемых позиций  пе-
реноса  или написать перед словом для отмены переноса только
этого слова.

   Для автоматического переноса подходят только  слова,  со-
держащие  внутри цепочку алфавитных символов, окруженную це-
почками неалфавитных символов. Слова исходного  текста,  со-
держащие  дефисы (минусы), например, такие как из-за, темно-
серо-фиолетовый или Семенов-Тянь-Шаньский переносятся  после
этих  символов  независимо  от того, действует или нет режим
автоматического переноса.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.nh                   да    -      E     |
-------------------------------------------
Отключить режим автоматического переноса слов.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.hy N                 N=1   N=1    E     |
-------------------------------------------
Включить автоматический перенос слов при N>=1 или  отключить
при N=0.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.hc c                              E     |
-------------------------------------------
Символ указателя переноса устанавливается в c или по умолча-
нию \%. Указатель переноса при печати не выводится.




















34



     14. ЗАГОЛОВКИ ИЗ ТРЕХ ЧАСТЕЙ


   Команда формирования заголовка tl обеспечивает  автомати-
ческое  размещение в трех полях строки: левом, центральном и
правом. Длина заголовка определяется командой lt. Команду tl
можно  использовать  где угодно и она не зависит от процесса
обработки обычного текста. Как правило, эта команда  исполь-
зуется в макрокомандах обработки начала и конца страницы.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.tl 'лев.'центр.'прав.'     -      -     |
-------------------------------------------
Цепочки "лев.", "центр." и "прав." выравниваются  по  левому
краю,  центрируются  и  выравниваются по правому краю, соот-
ветственно, в пределах текущей длины заголовка. Любая из це-
почек может быть пустой и допускается перекрытие. В качестве
разграничителя цепочек можно использовать любой символ. Если
в  любом  из полей встречается символ номера страницы (изна-
чально %), то он заменяется на текущий номер сраницы, в фор-
мате,  который  установлен для регистра %, содержащего номер
страницы.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.pc c                 %     выкл.  -     |
-------------------------------------------
Символ номера страниц устанавливается в c или (если аргумент
отсутствует) символ ликвидируется. Регистром номера страницы
остается %.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.lt +_N                65n   пред.  Е,n   |
-------------------------------------------
Длина заголовка из трех частей устанавливается в  +_N.  Длина
строки и длина заголовка являются независимыми величинами. В
заголовках отступы не делаются.

















                                                          35



     15. НУМЕРАЦИЯ СТРОК ВЫХОДНОГО ТЕКСТА


       С помощью команды nm можно подключить механизм  авто-
    матической  последовательной  нумерации  строк выходного
    текста. При задании этого режима перед  каждой  выходной
  4 строкой  печатается  трехзначный  номер  строки  в  виде
    арабских цифр, за которым следует пробел. Таким образом,
    строки смещаются на четыре позиции, но длина строки сох-
    раняется. Для того чтобы обеспечить  совпадение  правого
  8 края  с  имевшимся ранее, может потребоваться уменьшение
    длины строк. Пустые строки и прочие промежутки, а  также
    строки,  сгенерированные  по  команде tl, не нумеруются.
    Нумерацию можно временно отменить с помощью команды  nn;
 12 ее также можно отменить, используя команду .nm без пара-
    метров, за которой позднее  для восстановления нумерации
    с последнего номера последует .nm +0. Кроме того, в поле
    номера строки можно задать отступ I для номера строки  и
 16 количество пробелов S, отделяющих текст от номера. Далее
    можно попробовать, чтобы  печатались  только  те  номера
    строк,  которые кратны некоторому числу M (при этом поле
    нумерации у других строк остается незаполненным).

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.nm +_N M S I                выкл.  E     |
-------------------------------------------
Включить режим нумерации строк. Если +_N  задано,  включается
нумерация строк и следующей строке присваивается номер +_N по
отношению к последней пронумерованной строке. Значениями  по
умолчанию  являются  M=1, S=1 и I=0. Параметры, соответству-
ющие пропущенным аргументам, не меняются;  нецифровой  аргу-
мент считается отсутствующим. При отсутствии всех аргументов
режим нумерации отменяется. Номер следующей строки  сохраня-
ется для возможного дальнейшего использования в числовом ре-
гистре ln;

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.nn N                 -     N=1    E     |
-------------------------------------------
Следующие N строк выходного текста не нумеруются.

 20    В качестве примера,  текст данного раздела был прону-
    мерован  при помощи команды .nm 1 4, которая расположена
    в начале раздела. В конце первого абзаца стояло  .nm,  а
    перед  этим абзацем нумерация была восстановлена при по-
 24 мощи команды .nm +0, и в конце раздела стоит снова  .nm.
    Длина   строк  была  также  изменена  в  соответствующих
    местах.  Другим  примером   может  служить  запись  вида
    .nm +5 5 x 3,  которая   включает  режим  нумерации, при
 28 этом номер очередной строки текста будет на 5 больше но-
    мера последней пронумерованной строки; М=5 означает, что
    номер ставится пред каждой пятой строкой; интервал между
    текстом  и номером не изменяется и отступ I устанавлива-
 32 ется равным 3.


36



     16. УСЛОВНЫЙ ВВОД ТЕКСТА


   Ниже, везде, через "c" обозначено односимвольное встроен-
ное  имя  условия, "!" обозначает отрицание, "N" - численное
выражение; "цеп1" и "цеп2" являются цепочками,  разделенными
любым  символом,  не  встречающимся в цепочках и отличным от
пробела и цифры; "что-либо" - то, что вводится по условию.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.if c что-либо        -     -      -     |
-------------------------------------------
Если условие c истинно, ввести "что-либо"; в  случае,  когда
вводимый  текст занимает несколько строк, используйте \{что-
либо\}.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.if !c что-либо       -     -      -     |
-------------------------------------------
Если условие с ложно, то ввести "что-либо".

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.if N что-либо        -     -      u     |
-------------------------------------------
Если выражение N > 0, то ввести "что-либо".

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.if !N что-либо       -     -      u     |
-------------------------------------------
Если выражение N <= 0, то ввести "что-либо".

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.if 'цеп1'цеп2' что-либо    -      -     |
-------------------------------------------
Если "цеп1" совпадает с "цеп2", то ввести "что-либо".

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.if !'цеп1'цеп2' что-либо   -      -     |
-------------------------------------------
Если "цеп1" не совпадает с "цеп2", то ввести "что-либо".




                                                          37



-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.ie c что-либо        -     -      u     |
-------------------------------------------
Часть "if" конструкции if-else; все перечисленные выше формы
справедливы и для этой команды (аналогичной if).

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.el c что-либо        -     -      u     |
-------------------------------------------
Часть "else" конструкции if-else. Имена  встроенных  условий
перечислены в следующей таблице:

        -------------------------------------------
        |  имя  |  имеет значение "истина", если  |
        |условия|                                 |
        |-------|---------------------------------|
        |   o   | номер текущей страницы -нечетный|
        |   e   | номер текущей страницы - четный |
        -------------------------------------------


   Если условие c истинно, или если число N больше нуля, или
если  цепочки  тождественно  совпадают (включая перемещения,
размер символов и шрифт), то вводится "что-либо". Если усло-
вию, числу или сравниваемым цепочкам предшествует знак !, то
смысл условия меняется на противоположный.

   Пробелы между условием  и  текстом,  предназначенным  для
ввода ("что-либо"), игнорируются. "Что-либо" может содержать
либо одну строку исходного текста (обычного текста, макроко-
манды  или чего-нибудь еще), либо несколько входных строк. В
случае нескольких строк первая строка  должна  начинаться  с
левого ограничителя \{. Последняя строка должна заканчивать-
ся правым ограничителем \}.

   Команда ie (if-else) идентична команде if за  исключением
того,  что  запоминается условие ввода. Последующая дополня-
ющая команда el (else) будет использовать обратное  значение
этого условия. Блоки ie-el могут быть вложенными.

   Приведем несколько примеров:

 .if e .tl'Четная страница' %'''

эта команда выводит заголовок, если номер  текущей  страницы
четный. В следующем примере:

  .ie \n%>1 \{\
  'sp 3v
  .tl 'страница %'''
  'sp  |7v \}\
  .el .sp |15v

первая страница обрабатывается не так, как остальные.


38



     17. ПЕРЕКЛЮЧЕНИЯ ОКРУЖЕНИЯ


   Некоторые параметры, которые управляют обработкой  текста
собираются вместе в "окружение", которое может переключаться
пользователем. Параметры "окружения" это те параметры, в ко-
лонке  примечаний к описанию которых указано E; добавим, что
частично собранные строки и слова тоже попадают в "окружени-
ие".  Все другие параметры  глобальны и не зависят от "окру-
жения", например, странично-ориентированные параметры, пара-
метры отведений, числовые регистры и определения макро и це-
почек. При начальном включениии  какого-либо  окружения  все
параметры принимают значения по умолчанию.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.ev N                 N=0   пред.  -     |
-------------------------------------------
Текущее окружение переключается на  окружение  N  (0<=N<=2).
Переключение производится как-бы "упрятыванием" текущего ок-
ружения, и, поэтому, востановление ("извлечение") предыдуще-
го окружения должно обязательно производиться при помощи ко-
манды .ev, а не какой-либо определенной ссылки.





































                                                          39



     18. ВСТАВКИ ИЗ СТАНДАРТНОГО ВВОДА


   Ввод может быть временно переключен на  устройство  стан-
дартного  ввода при помощи команды rd. Обратное переключение
происходит при обнаружении двух подряд пустых строк  (допол-
нительная пустая строка не используется). Этот механизм поз-
воляет вносить исправления и дополнения, например,  в  доку-
ментацию типа писем. В системе ДЕМОС стандартными средствами
ввода могут быть клавиатура пользователя, линия передачи или
файл.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.rd подсказка         -     BEL    -     |
-------------------------------------------
Читать вставку с устройства стандартного ввода до  тех  пор,
пока  не  будут  найдены подряд два знака новой строки. Если
стандартным устройством ввода является клавиатура  пользова-
теля,  на терминал пользователя выводится "подсказка". С ко-
мандой rd можно обращаться как с  макрокомандой  и  помещать
после "подсказки" аргументы.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.ex                   -     -      -     |
-------------------------------------------
По этой команде осуществляется выход из системы  pif.  Обра-
ботка  текста  прекращается,  как  в случае завершения всего
ввода.

   Еслиизменения должны быть введены с клавиатуры терминала,
в  то  время как выходной текст выводится на терминал, пара-
метр командной строки - q будет отменять отображение на тер-
минале  вводимой  с  клавиатуры  информации  и подсказки, за
исключением сигнала "звонок" (BEL).

   Регулярный ввод и ввод вставок не может производиться од-
новременно с устройства стандартного ввода.

   Например, многочисленные копии типового письма можно под-
готовить,  записывая  изменения  ко всем копиям в один файл,
используемый в  качестве  стандартного  ввода,  и  заставляя
файл,  содержащий  письмо,  неоднократно вызывать себя с по-
мощью команды nx (см. раздел "Преключение входного и  выход-
ного  файла").  Процесс в конце концов закончится по команде
ех в файле исправлений.











40



     19. ПЕРЕКЛЮЧЕНИЕ ВХОДНОГО И ВЫХОДНОГО ФАЙЛА



-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.so имяфайла          -     -      -     |
-------------------------------------------
Переключить исходный файл.  Верхний  уровень  ввода  (чтение
файла) переключается на файл "имяфайла". Команда so, обнару-
женная в макрокоманде не действует до тех пор, пока  уровень
ввода  не  возвращается к уровню ввода из файла. Когда новый
файл исчерпан,  ввод  опять  происходит  из  первоначального
файла. Команды so могут быть вложенными.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.nx имяфайла          -     конец  -     |
-------------------------------------------
Текущий файл считается законченным и ввод переключается  не-
медленно на файл "имяфайла".

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.pi программа         -     -      -     |
-------------------------------------------
Передать результат "программе". Эта команда должна появиться
раньше любых операторов печати. Никакие аргументы в програм-
му не передаются.



























                                                          41



     20. ПРОЧИЕ КОМАНДЫ



-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.mc c N               -     выкл.  E,n   |
-------------------------------------------
Указывает, какой символ должен располагаться на расстоянии N |
после  каждой  непустой строки (исключая строки, формируемые |
командой tl). Если строка выходного текста является  слишком |
длинной  (например,  в  случае работы в режиме "без заполне- |
ния"), то признак будет добавлен к строке. Если N не задано, |
используется  предыдущее  значение  N;  начальное значение N |
равно 2n. В качестве примера использования команды mc данный |
абзац подготовлен с использованием команды ".mc | 1n".       |

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.tm цепочка           -     NL     -     |
-------------------------------------------
После пропуска начальных пробелов "цепочка" (остаток  строки
команды)  считывается  в  режиме  копирования и выводится на
терминал пользователя.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.ig yy                -     ..     -     |
-------------------------------------------
Игнорировать  строки  исходного  текста.  Команда  действует
точно так же, как команда de (см. раздел "Макроопределения")
за исключением того, что ввод не происходит. Исходный  текст
считывается  в режиме копирования и все автоматически увели-
чиваемые регистры будут изменяться.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.pm t                 -     все    -     |
-------------------------------------------
Печатать макрокоманды. На терминале пользователя  печатаются
имена и размеры всех определенных макрокоманд и цепочек; ес-
ли t задано, то печатается информация только об общем разме-
ре. Единицей измерения является блок из 128 символов.

-------------------------------------------
|Форма                 Нач.  Нет    Прим. |
|вызова                знач. арг.         |
|-----------------------------------------|
|.fl                   -     -      B     |
-------------------------------------------
Сбросить буфер вывода. Используется для вынужденного  вывода
при отладке в диалоговом режиме.


42



     21. ВЫХОДНЫЕ СООБЩЕНИЯ И СООБЩЕНИЯ ОБ ОШИБКАХ


   Выходные результаты работы команд tm,  pm  и  "подсказка"
команды  rd,  так же как и сообщения об ошибках, выдаются на
стандартное устройство  выдачи  сообщений  (STDERR)  системы
ДЕМОС.  Это устройство отличается от устройства стандартного
вывода, в который pif пересылает отформатированный текст. По
умолчанию  и те и другие выводятся на терминал пользователя,
но их выводом можно управлять независимо.

   В процессе работы pif могут возникнуть различные  ошибоч-
ные  ситуации.  Некоторые не очень серьезные ошибки, имеющие
лишь локальное значение, не вызывают  прекращения  обработки
текста.  Примерами  таких  ошибок могут являться, во-первых,
переполнение буфера слов, которое возникает из-за  невозмож-
ности поместить туда слишком длинное слово (при формировании
в режиме заполнния), и переполнение строки, которое возника-
ет  при  чрезмерном  увеличении длины строки, не позволяющем
поместить ее в буфер строки. В обоих случаях печатается  со-
общение, лишняя часть слова или строки отбрасывается и изме-
ненное слово или измененная строка в точке усечения  помеча-
ется  в  pif звездочкой *. Смысл этих действий заключается в
том, чтобы продолжить обработку текста, если  это  возможно,
так как полученный вывод может быть полезен для отладки. При
возникновении серьезных ошибок обработка прекращается и  пе-
чатается соответствующее сообщение. Например ошибки, не поз-
воляющие создать, считать или записать файлы, ошибки, приво-
дящие  к превышению некоторых внутренних возможностей систе-
мы, т.е. такие ошибки, которые делают нецелесообразным даль-
нейший вывод.































                                                          43



     ТАБЛИЦА КОМАНД

стр. Команда     Краткое описание

  8  .pl +_N      Установить длину страницы
  8  .bp +_N      Начать новую сраницу
  8  .pn +_N      Присвоить номер следующей странице
  8  .ne N       Требуется место по вертикали
  9  .mk R       Запомнить вертикальную позицию
  9  .rt +_N      Вернуться к вертикальной позиции
 11  .br         Прекратить заполнение строки
 11  .fi         Включить режим заполнения
 11  .nf         Выключить режим заполнения
 11  .ad c       Установить тип выравнивания
 12  .na         Отключить выравнивание строк
 12  .ce N       Отцентровать следующие N входных строк
 13  .vs N       Установить интервал между строками
 14  .ls +_N      Установить межстрочное расстояние
 14  .sp N       Прогон по вертикали на величину N
 14  .sv N       Сохранить вертикальный промежуток
 14  .os         Вывести сохраненный вертикальный промежуток
 14  .ns         Включить режим "без прогонов"
 15  .rs         Выключить режим "без прогонов"
 15  Пустая строка
                 То же самое, что и .sp 1
 16  .ll +_N      Установить длину строки
 16  .in +_N      Установить постоянный отступ
 16  .ti +_N      Установить временный отступ
 20  .de xx yy   Определить или переопределить  макроопреде-
                 ление
 20  .am xx yy   Добавить к макрокоманде
 20  .ds xx цепочка
                 Определить цепочку
 20  .as xx цепочка
                 Добавить к цепочке
 21  .rm xx      Удалить команду, макро или цепочку
 21  .rn xx yy   Переименовать команду, макро или цепочку
 21  .di xx      Отвести выходной текст
 21  .da xx      Добавить выходной текст к отведенному
 21  .wh N xx    Установить ловушку по позиции на странице
 22  .ch xx N    Изменить позицию ловушки
 22  .dt N xx    Установить ловушку по позиции в отведении
 22  .it N xx    Установить ловушку по количеству  введенных
                 строк
 22  .em xx      Конечное макроопределение
 23  .nr R +_N M  Определить и установить числовой регистр
 24  .af R c     Определить формат числового регистра
 24  .rr R       Удалить числовой регистр
 26  .ta Nt .... Установить табуляции
 26  .tc c       Установить символ заполнения табуляций
 26  .lc c       Установить символ заполнения лидеров
 26  .fc a b     Установить символы ограничителя и  заполни-
                 теля поля
 27  .ec c       Установить символ переключения
 27  .eo         Изменить состояние механизма переключения
 28  .ul N       Подчеркивать следующие  N  строк  исходного
                 текста
 28  .ft F       Изменить текущий шрифт
 28  .cu N       Подчеркивать следующие N строк
 28  .cc c       Установить основной управляющий символ


44



 29  .c2 c       Установить управляющий символ без  прерыва-
                 ния
 34  .nh         Отключить режим автоматического переноса
 34  .hy N       Включить режим автоматического переноса
 34  .hc c       Установить символ указателя переноса
 35  .tl 'лев.'центр.'прав.'
                 Заголовок из трех частей
 35  .pc c       Установить символ номера страницы
 35  .lt +_N      Установить длину заголвка из трех частей
 36  .nm +_N M S I
                 Включить режим нумерации выходных строк
 36  .nn N       Не нумеровать следующие N строк
 37  .if c что-либо
                 Если условие  c  истинно,  выполнить  "что-
                 либо"
 37  .if !c что-либо
                 Если условие c ложно, выполнить "что-либо"
 37  .if N что-либо
                 Если выражение N>0, выполнить "что-либо"
 37  .if !N что-либо
                 Если выражение N<=0, выполнить "что-либо"
 37  .if 'цеп1'цеп2' что-либо
                 Если "цеп1" совпадает с  "цеп2",  выполнить
                 "что-либо"
 37  .if !'цеп1'цеп2' что-либо
                 Если "цеп1" не совпадает с  "цеп2",  выпол-
                 нить "что-либо"
 38  .ie c что-либо
                 Часть if конструкции if-else
 38  .el c что-либо
                 Часть else конструкции if-else
 39  .ev N       Переключить окружение
 40  .rd подсказка
                 Читать вставку со стандартного ввода
 40  .ex         Выход из системы pif
 41  .so имяфайла
                 Переключить исходный файл
 41  .nx имяфайла
                 Начать чтение другого файла
 41  .pi программа
                 Передать результат программе
 42  .mc c N     Указать граничный символ
 42  .tm цепочка Выдать на терминал "цепочку"
 42  .ig yy      Игнорировать строки исходного текста
 42  .pm t       Напечатать список макрокоманд
 42  .fl         Сбросить накопленный вывод
















                                                          45



     ТАБЛИЦА ПЕРЕКЛЮЧАТЕЛЬНЫХ ПОСЛЕДОВАТЕЛЬНОСТЕЙ


   В системе  pif  используются  следующие  переключательные
последовательности:

послед.    Значение

\\         \ (для предотвращения или задержки  интерпретации
           \);
\e         печатаемая текущая версия символа переключения;
\.         точка;
\(пробел)  символ незаполняемого пробела;
\&         непечатаемый символ нулевой ширины;
\!         указатель "прозрачной" строки;
\"         начало комментария;
\$N        рассматривать как аргумент (1<=N<=9);
\%         по умолчанию символ переноса;
\*x,\*(xx  вставить цепочку х или хх;
\a         неинтерпретируемый лидер-символ;
\c         прерывание обработки текста;
\d         вертикальное смещение вперед (вниз) на 1/2  стро-
           ки;
\h'N'      локальное перемещение в горизонтальном  направле-
           нии; переместить вправо на N (при отрицательном N
           - налево);
\jx        поместить метку горизонтальной позиции  выходного
           текста в регистр х;
\kx        поместить метку горизонтальной позиции  исходного
           текста в регистр х;
\l'Nc'     функция вычерчивания горизонтальных линий;
\L'Nc'     функция проведения вертикальных линий;
\nx,\n(xx  вставить значение числового регистра x или xx;
\o'abc...' печатать на одном месте символы a,b,c...;
\p         вызывает прерывание и растягивает выходную  стро-
           ку;
\r         обратное перемещение в  вертикальном  направлении
           на 1 строку;
\t         неинтерпретируемый символ горизонтальной  табуля-
           ции;
\u         вертикальное перемещение в  обратном  направлении
           на 1/2 строки;
\v'N'      локальное перемещение в вертикальном направлении.
           Переместить вниз на расстояние N (при отрицатель-
           ном N-вверх);
\w'цепоч.' подставляется значение ширины "цепоч.";
\x'N'      функция добавления  дополнительных  пустых  строк
           (при  отрицательном аргументе перед текущей стро-
           кой, при положительном - после нее);
\zc        печатать символ "c" с нулевой шириной (без после-
           дующего движения);
\{         начать условный ввод;
\}         закончить условный ввод;
\(newline) скрытый символ новой строки (игнорируемый);
\X         X, любой символ, не перечисленный выше.

   Переключательные последовательности \\, \., \",  \$,  \*,
\a,  \n, \t и \(newline) интерпретируются в режиме копирова-
ния.



46



     ЧИСЛОВЫЕ РЕГИСТРЫ


   Pif использует следующие числовые регистры:

регистр описание

%       номер текущей страницы;
dl      ширина (максимальная) последнего завершенного  отве-
        дения;
dn      высота (вертикальный размер) последнего завершенного
        отведения;
dw      текущий день недели (1-7);
dy      текущий день месяца (1-31);
hp      текущая горизонтальная позиция во входной строке;
ln      номер строки выходного текста;
mo      текущий месяц (1-12);
nl      позиция по вертикали линии шрифта последней  напеча-
        танной строки текста;
yr      последние две цифры текущего года;
.$      число аргументов доступных на текущем уровне макро;
.H      максимальная разрешающая способность по  горизонтали
        в базовых единицах;
.V      имеющаяся разрешающая способность по вертикали в ос-
        новных единицах;
.а      послестрочный дополнительный  интервал,  примененный
        последний раз с помощью х'n';
.c      количество строк, прочитанных  с  текущего  входного
        файла;
.d      текущая позиция по вертикали  в  текущем  отведении;
        равна nl в случае отсутствия отведения;
.i      текущий отступ;
.l      текущая длина строки;
.n      длина части текста из предыдущей выходной строки;
.p      текущая длина страницы;
.t      расстояние до следующей "ловушки";
.u      равно 1 при обработке текста в режиме заполнения и 0
        в противоположном;
.v      текущий интервал между строками;
.w      ширина предыдущего символа;
.x      резервный регистр, зависящий от версии;
.y      резервный регистр, зависящий от версии;
.z      имя текущего отведения.



















                                                          47



                       Содержание



ВВЕДЕНИЕ...............................................   3

1.  ВЫЗОВ PIF..........................................   4

2.  ОБЩИЕ СВЕДЕНИЯ.....................................   5
    2.1.  Структура входных данных.....................   5
    2.2.  Разрешающая способность  устройств  и  систе-
          мы...........................................   5
    2.3.  Ввод числовых параметров.....................   5
    2.4.  Численные выражения..........................   7
    2.5.  Система обозначений..........................   7

3.  УПРАВЛЕНИЕ СТРАНИЦАМИ..............................   8

4.  ФОРМИРОВАНИЕ,    ВЫРАВНИВАНИЕ    И    ЦЕНТРИРОВАНИЕ
    ТЕКСТА.............................................  10
    4.1.  Формирование и выравнивание..................  10
    4.2.  Прерывание текста............................  10

5.  ВЕРТИКАЛЬНЫЕ РАЗМЕРЫ...............................  13
    5.1.  Интервал между строками......................  13
    5.2.  Дополнительное межстрочное расстояние........  13
    5.3.  Блоки вертикальных промежутков...............  13

6.  ДЛИНА СТРОК И ОТСТУПЫ..............................  16

7.  МАКРОКОМАНДЫ, ЦЕПОЧКИ, ОТВЕДЕНИЯ И "ЛОВУШКИ".......  17
    7.1.  Макрокоманды и цепочки.......................  17
    7.2.  Интерпретация ввода в режиме копирования.....  17
    7.3.  Аргументы....................................  18
    7.4.  Отведения....................................  19
    7.5.  "Ловушки"....................................  19

8.  ЧИСЛОВЫЕ РЕГИСТРЫ..................................  23

9.  ТАБУЛЯЦИИ, ЛИДЕРЫ И ПОЛЯ...........................  25
    9.1.  Табуляции и лидеры...........................  25
    9.2.  Поля.........................................  26

10. СОГЛАШЕНИЯ   О   ВВОДЕ/ВЫВОДЕ   И    ПРЕОБРАЗОВАНИЯ
    СИМВОЛОВ...........................................  27
    10.1. Преобразования входных символов..............  27
    10.2. Возврат и подчеркивание......................  27
    10.3. Управляющие символы..........................  28
    10.4. "Прозрачный" вывод...........................  29
    10.5. Комментарии и  скрытые  символы  новой  стро-
          ки...........................................  29

11. ЛОКАЛЬНЫЕ ВЕРТИКАЛЬНЫЕ И ГОРИЗОНТАЛЬНЫЕ ПЕРЕМЕЩЕНИЯ
    И ФУНКЦИЯ ШИРИНЫ...................................  30
    11.1. Локальные перемещения........................  30
    11.2. Функция ширины...............................  30
    11.3. Отметка горизонтального положения............  30

12. НЕКОТОРЫЕ СПЕЦИАЛЬНЫЕ ПРИЕМЫ ПЕЧАТИ................  32
    12.1. Печать с наложением на одной позиции.........  32


48



    12.2. Символы нулевой ширины.......................  32
    12.3. Рисование линий..............................  32

13. ПЕРЕНОС СЛОВ.......................................  34

14. ЗАГОЛОВКИ ИЗ ТРЕХ ЧАСТЕЙ...........................  35

15. НУМЕРАЦИЯ СТРОК ВЫХОДНОГО ТЕКСТА...................  36

16. УСЛОВНЫЙ ВВОД ТЕКСТА...............................  37

17. ПЕРЕКЛЮЧЕНИЯ ОКРУЖЕНИЯ.............................  39

18. ВСТАВКИ ИЗ СТАНДАРТНОГО ВВОДА......................  40

19. ПЕРЕКЛЮЧЕНИЕ ВХОДНОГО И ВЫХОДНОГО ФАЙЛА............  41

20. ПРОЧИЕ КОМАНДЫ.....................................  42

21. ВЫХОДНЫЕ СООБЩЕНИЯ И СООБЩЕНИЯ ОБ ОШИБКАХ..........  43

ТАБЛИЦА КОМАНД.........................................  44

ТАБЛИЦА ПЕРЕКЛЮЧАТЕЛЬНЫХ ПОСЛЕДОВАТЕЛЬНОСТЕЙ...........  46

ЧИСЛОВЫЕ РЕГИСТРЫ......................................  47




































                                                          49



                       Содержание



ВВЕДЕНИЕ...............................................   3

1.  ВЫЗОВ PIF..........................................   4

2.  ОБЩИЕ СВЕДЕНИЯ.....................................   5
    2.1.  Структура входных данных.....................   5
    2.2.  Разрешающая способность  устройств  и  систе-
          мы...........................................   5
    2.3.  Ввод числовых параметров.....................   5
    2.4.  Численные выражения..........................   7
    2.5.  Система обозначений..........................   7

3.  УПРАВЛЕНИЕ СТРАНИЦАМИ..............................   8

4.  ФОРМИРОВАНИЕ,    ВЫРАВНИВАНИЕ    И    ЦЕНТРИРОВАНИЕ
    ТЕКСТА.............................................  10
    4.1.  Формирование и выравнивание..................  10
    4.2.  Прерывание текста............................  10

5.  ВЕРТИКАЛЬНЫЕ РАЗМЕРЫ...............................  13
    5.1.  Интервал между строками......................  13
    5.2.  Дополнительное межстрочное расстояние........  13
    5.3.  Блоки вертикальных промежутков...............  13

6.  ДЛИНА СТРОК И ОТСТУПЫ..............................  16

7.  МАКРОКОМАНДЫ, ЦЕПОЧКИ, ОТВЕДЕНИЯ И "ЛОВУШКИ".......  17
    7.1.  Макрокоманды и цепочки.......................  17
    7.2.  Интерпретация ввода в режиме копирования.....  17
    7.3.  Аргументы....................................  18
    7.4.  Отведения....................................  19
    7.5.  "Ловушки"....................................  19

8.  ЧИСЛОВЫЕ РЕГИСТРЫ..................................  23

9.  ТАБУЛЯЦИИ, ЛИДЕРЫ И ПОЛЯ...........................  25
    9.1.  Табуляции и лидеры...........................  25
    9.2.  Поля.........................................  26

10. СОГЛАШЕНИЯ   О   ВВОДЕ/ВЫВОДЕ   И    ПРЕОБРАЗОВАНИЯ
    СИМВОЛОВ...........................................  27
    10.1. Преобразования входных символов..............  27
    10.2. Возврат и подчеркивание......................  27
    10.3. Управляющие символы..........................  28
    10.4. "Прозрачный" вывод...........................  29
    10.5. Комментарии и  скрытые  символы  новой  стро-
          ки...........................................  29

11. ЛОКАЛЬНЫЕ ВЕРТИКАЛЬНЫЕ И ГОРИЗОНТАЛЬНЫЕ ПЕРЕМЕЩЕНИЯ
    И ФУНКЦИЯ ШИРИНЫ...................................  30
    11.1. Локальные перемещения........................  30
    11.2. Функция ширины...............................  30
    11.3. Отметка горизонтального положения............  30

12. НЕКОТОРЫЕ СПЕЦИАЛЬНЫЕ ПРИЕМЫ ПЕЧАТИ................  32
    12.1. Печать с наложением на одной позиции.........  32


50



    12.2. Символы нулевой ширины.......................  32
    12.3. Рисование линий..............................  32

13. ПЕРЕНОС СЛОВ.......................................  34

14. ЗАГОЛОВКИ ИЗ ТРЕХ ЧАСТЕЙ...........................  35

15. НУМЕРАЦИЯ СТРОК ВЫХОДНОГО ТЕКСТА...................  36

16. УСЛОВНЫЙ ВВОД ТЕКСТА...............................  37

17. ПЕРЕКЛЮЧЕНИЯ ОКРУЖЕНИЯ.............................  39

18. ВСТАВКИ ИЗ СТАНДАРТНОГО ВВОДА......................  40

19. ПЕРЕКЛЮЧЕНИЕ ВХОДНОГО И ВЫХОДНОГО ФАЙЛА............  41

20. ПРОЧИЕ КОМАНДЫ.....................................  42

21. ВЫХОДНЫЕ СООБЩЕНИЯ И СООБЩЕНИЯ ОБ ОШИБКАХ..........  43

ТАБЛИЦА КОМАНД.........................................  44

ТАБЛИЦА ПЕРЕКЛЮЧАТЕЛЬНЫХ ПОСЛЕДОВАТЕЛЬНОСТЕЙ...........  46

ЧИСЛОВЫЕ РЕГИСТРЫ......................................  47




































                                                          51



