
CO(1)                  ДЕМОС. Команды                  CO(1)


ИИММЯЯ
       ccoo - чтение версии из архивного файла RCS.

ФФООРРММААТТ
       ccoo [_к_л_ю_ч_и] _ф_а_й_л...

ООППИИССААННИИЕЕ
       Команда ccoo  осуществляет  поиск  указанных  версий  в
       архивном  файле  RRCCSS  и  перепись содержимого в соот-
       ветствующие рабочие файлы.

       Каждое имя файла, оканчивающееся на `,_v' рассматрива-
       ется  как  имя RRCCSS-файла, предполагается, что файлы с
       другими именами являются рабочими.

       При задании файлов возможны три случая:

       1) Заданы как архивный,  так  и  рабочий  файлы.  Имя
       архивного  файла  RRCCSS  имеет вид: _p_a_t_h_1/_w_o_r_k_f_i_l_e,_v, а
       имя рабочего файла задано в форме _p_a_t_h_2/_w_o_r_k_f_i_l_e, где
       _p_a_t_h_1/  и  _p_a_t_h_2/  являются  (возможно различными или
       пустыми) полными именами, а _w_o_r_k_f_i_l_e является  именем
       файла.

       2) Задан только архивный файл RRCCSS.  Тогда,  предпола-
       гается,  что  рабочий  файл находится в текущем ката-
       логе, а его имя получается из имени  архивного  файла
       удалением _p_a_t_h_1/ и суффикса `,_v'.

       3) Задан только рабочий  файл.   В  этом  случае  имя
       архивного  файла  получается  из имени рабочего файла
       удалением _p_a_t_h_2/ и добавлением суффикса `,_v'.

       Если полное имя архивного файла не задано, или приве-
       дено только базовое имя (т.е. не указано точное поло-
       жение файла в  файловой  системе),  команда  пытается
       найти  архивный  файл в каталоге, заданном макропере-
       менной RRCCSS, или (если переменная  не  определена),  в
       каталоге ./_R_C_S и, если такой подкаталог отсутствует в
       текущем каталоге, или искомый файл в  нем  не  содер-
       жится, поиск осуществляется в текущем каталоге.

       При чтении версии из архивного файла можно установить
       режим  блокировки.  В этом случае система резервирует
       очередной номер  версии  за  данным  пользователем  и
       игнорирует  попытки других пользователей записать или
       открыть для модификации соответствующую версию файла.
       Этот механизм используется для предотвращения попыток
       одновременного редактирования одного и того же архив-
       ного файла.  Версии файла, читаемые из архива с целью
       печати или  какой-либо  другой  обработки  (например,
       компиляции)  не  требуют  задания  режима блокировки.
       Т.е. режим блокировки является обязательным при  чте-
       нии версии с целью ее модификации.  При необходимости
       блокировку можно снять с помощью команды rrccss(1).  Для
       выполнении  команды ccoo в режиме блокировки необходимо
       чтобы имя пользователя было занесено в список доступа
       данного    файла.    Это   требование   не   является


                            -1-                     ДЕМОС/PV


CO(1)                  ДЕМОС. Команды                  CO(1)


       обязательным, если список доступа пуст (контроль дос-
       тупа   не  производится)  или  пользователь  является
       суперпользователем либо хозяином файла.

       Выбор версии может производится  по  номеру,  времени
       создания,  автору или статусу.  При отсутствии указа-
       ний о том, какую  версию  файла  требуется  получить,
       выдается  последняя  версия  основного  ствола.  Если
       задано несколько условий поиска,  выбирается  старшая
       из   множества  подходящих  версий.   Указание  даты,
       автора или статуса может  использоваться  при  поиске
       необходимой версии какой-либо ветви дерева.  При этом
       берется либо указанная ветвь,  либо,  если  ветвь  не
       задана,  самая  старшая ветвь ствола дерева.  Имя или
       номер искомой версии можно указывать при задании клю-
       чей: --ll, --pp, --qq и --rr.

       Команда ccoo, параметром которой является пустой архив-
       ный файл, создает рабочий файл нулевой длины.

       Далее приводится полный список ключей команды ccoo.

       --ll[_r_e_v]    Зарезервировать право  модификации  данной
                  версии  только за данным пользователем. По
                  умолчанию резервирование не  производится.
                  Правила  задания  номера  или имени версии
                  приведены при описании ключа --rr.

       --pp[_r_e_v]    Выдавать найденную  версию  в  стандартный
                  файл  вывода.   Рабочий файл не создается.
                  Этот режим наиболее полезен при  использо-
                  вании  команды  ccoo  в  качестве компоненты
                  межпроцессного канала.

       --qq[_r_e_v]    Неинтерактивный   режим.   Диагностическиe
                  сообщения не выдаются.

       --dd_d_a_t_e     Выдать версию заданной ветви, дата  созда-
                  ния  которой соответствует дате, указанной
                  в параметре. Если искомая версия  отсутст-
                  вует,  выдается  старшая  версия  ветви из
                  созданных до указанной  даты.   Дата  (под
                  датой  понимается  дата  и время создания)
                  может  задаваться  в  свободном   формате.
                  Можно  указывать зональное время.  Примеры
                  задания даты (_d_a_t_e):

                  30-April-1989, 17:20
                  Jul 21 Fri, 23:17
                  April 16 15:52:25 EST 1989

                  Большая часть полей (но не все)  в  записи
                  даты   и   времени   может  быть  опущена.
                  Команда ccoo дополняет отсутствующие поля по
                  умолчанию.   Например,  запись "20, 10:30"
                  будет соответствовать  20  числу  текущего
                  месяца, текущего года, 10 часам 30 минутам
                  00 сек.  Если в записи  даты  присутствуют


                            -2-                     ДЕМОС/PV


CO(1)                  ДЕМОС. Команды                  CO(1)


                  пробелы, она должна браться в кавычки.

       --rr[_r_e_v]    Получить версию с номером _r_e_v. Если  такая
                  отсутствует, выдается старшая из множества
                  версий с меньшими  номерами.   Если  номер
                  указывает   на  ветвь  дерева,  выбирается
                  старшая версия данной ветви. Номер  версии
                  состоит  из последовательности полей, раз-
                  деленных символом `..' (точка). Каждое поле
                  содержит  либо номер, либо символьное имя,
                  которое может присваиваться  пользователем
                  с помощью ключа --nn в команде ccii или rrccss.

       --ss_s_t_a_t_e    Выдать  старшую  версию  указанной  ветви,
                  имеющую статус _s_t_a_t_e.

       --ww[_l_o_g_i_n]  Выдать  старшую  версию  указанной  ветви,
                  записанную  пользователем  с именем _l_o_g_i_n.
                  Если имя пользователя опущено, поиск  осу-
                  ществляется  среди версий, записанных дан-
                  ным пользователем.

       --jj_j_o_i_n_l_i_s_t Создать новую версию файла  путем  слияния
                  версий,  перечисленных  в списке _j_o_i_n_l_i_s_t.
                  Номера (или имена)  версий  разделяются  с
                  помощью  символа `::'.  В качестве исходной
                  рассматривается версия, задаваемая ключами
                  --ll, --rr, ..., --ww. Слияние редакций произво-
                  дится последовательно, в порядке появления
                  номеров  версий  в  списке.  Т.е.  версия,
                  полученная в результате объединения преды-
                  дущей  пары, становится исходной для слия-
                  ния со следующей версией.  Для каждой пары
                  версий команда ccoo объединяет _r_e_v_1 и _r_e_v_3 с
                  учетом версии _r_e_v_2.  Это означает, что все
                  редакции,  необходимые  для получения _r_e_v_2
                  из _r_e_v_1 применяются к копии  версии  _r_e_v_3.
                  Это  свойство  бывает  полезно  в случаях,
                  когда _r_e_v_1 и _r_e_v_3 являются старшими верси-
                  ями  разных  ветвей и имеют общую исходную
                  версию.

                  Если версии имеют следующий порядок  стар-
                  шинства:  _r_e_v_1 < _r_e_v_2 < _r_e_v_3 и принадлежат
                  к одной ветви,  в  результате  объединения
                  будет  получена  версия, подобная _r_e_v_3, но
                  имеющая все строки, исключенные при  пере-
                  ходе от версии _r_e_v_1 к _r_e_v_2.

                  Если редакции для получения _r_e_v_2 из  _r_e_v_1,
                  затрагивают строки, изменяющиеся при пере-
                  ходе от _r_e_v_2 к _r_e_v_3, выдается  предупреди-
                  тельное сообщение, в соответствующие места
                  результирующего  файла  записываются   два
                  варианта  текста.  Такие места пересечений
                  обрамляются специальными строками:

                         <<<<<<<<<<<<<<_r_e_v_1


                            -3-                     ДЕМОС/PV


CO(1)                  ДЕМОС. Команды                  CO(1)


                             (текст из _r_e_v_1)
                         ==============
                             (текст из _r_e_v_3)
                         >>>>>>>>>>>>>>_r_e_v_3

                  Для первой пары версий указание _r_e_v_2 может
                  быть  опущено.   В  этом случае в качестве
                  _r_e_v_2  используется   общая   версия-предок
                  объединяемых  версий.   Если какой-либо из
                  аргументов указывает на  ветвь  (а  не  на
                  версию),  используется старшая версия дан-
                  ной ветви. При наличии ключа --ll резервиру-
                  ется начальная версия (_r_e_v_1).

ППООДДССТТААННООВВККАА ККЛЛЮЮЧЧЕЕВВЫЫХХ ППААРРААММЕЕТТРРООВВ
       При работе с многочисленными рабочими файлами,  полу-
       ченными из архивных файлов RRCCSS, часто требуется опре-
       делить с какой версией ведется  работа,  имя  автора,
       дату  создания  и  т.п.   Наиболее естественным путем
       решения этих проблем представляется включение  данной
       информации  непосредственно в рабочий файл.  Для этой
       цели в системе предусмотрен механизм  ключевых  пара-
       метров,  позволяющий пользователю указать тип записы-
       ваемых сообщений и места в  файле,  куда  они  должны
       помещаться.   Ключевые  параметры  представляют собой
       последовательности  символов   вида   $$_k_e_y_w_o_r_d$$   или
       $$_k_e_y_w_o_r_d::...$$.  При создании рабочего файла все вхож-
       дения   параметров    заменяются    на    конструкции
       $$_k_e_y_w_o_r_d:: _v_a_l_u_e$$.  В качестве ключевых слов (_k_e_y_w_o_r_d)
       могут задаваться следующие символьные  последователь-
       ности:  AAuutthhoorr, HHeeaaddeerr, LLoocckkeerr, LLoogg, RReevviissiioonn, SSoouurrccee
       и SSttaattee.  Ключевые параметры, как  правило,  размеща-
       ются  пользователем  в комментарных строках или лите-
       ральных константах.

       Ключевые параметры  дополняются  следующей  служебной
       информацией:

       $$AAuutthhoorr$$     Идентификатор пользователя,  записавшего
                    данную версию.

       $$DDaattee$$       Дата и время записи версии.

       $$HHeeaaddeerr$$     Стандартный  заголовок,  содержащий  имя
                    архивного  файла RRCCSS, номер версии, дату
                    записи,  идентификатор  пользователя   и
                    статус версии.

       $$LLoocckkeerr$$     Идентификатор пользователя, зарезервиро-
                    вавшего  за собой право записи модифици-
                    рованной версии (если версия не зарезер-
                    вирована,    выдается   строка   нулевой
                    длины).

       $$LLoogg$$        Коментарий, записанный пользователем при
                    занесении  версии в архивный файл. Перед
                    комментарием помещается строка, содержа-
                    щая:  имя  исходного  файла  RRCCSS,  номер


                            -4-                     ДЕМОС/PV


CO(1)                  ДЕМОС. Команды                  CO(1)


                    версии,  идентификатор  пользователя   и
                    дату   записи.    Служебная  информация,
                    записанная ранее в файл  (например,  при
                    чтении  из архивного файла), при занесе-
                    нии в архив  подавляется  и  порождается
                    заново  при  следующей выборке. Это пра-
                    вило выполняется для всех ключевых пара-
                    метров,  за исключением $$LLoogg$$.  В данном
                    случае, предыдущие расширения не уничто-
                    жаются,  а новая информация дописывается
                    к более ранним расширениям.  Это  позво-
                    ляет  получать в рабочем файле всю исто-
                    рию развития данной версии.

       $$RReevviissiioonn$$   Номер версии.

       $$SSoouurrccee$$     Полное имя исходного архивного файла.

       $$SSttaattee$$      Статус  версии,   присвоенный   командой
                    rrccss --ss (или ccii --ss).

ДДИИААГГННООССТТИИККАА
       В процессе работы команд выдаются  имена  рабочего  и
       архивного файла, а также номер выбранной версии.

       Код возврата всегда относится к последней  записывае-
       мой  версии:  0  -  операция  прошла  успешно,  1 - в
       остальных случаях.

ППРРИИММЕЕРРЫЫ
       Предположим, в текущем  каталоге  имеется  подкаталог
       _R_C_S, содержащий архивный файл _i_o._c,_v.  В этом случае,
       каждая из следующих команд находит в  архивном  файле
       последнюю версию и записывает ее в файл _i_o._c.

              ccoo  _i_o._c
              ccoo  _R_C_S/_i_o._c,_v
              ccoo  _i_o._c,_v
              ccoo  _i_o._c _R_C_S/_i_o._c,_v
              ccoo  _i_o._c  _i_o._c,_v
              ccoo  _R_C_S/_i_o._c,_v _i_o._c
              ccoo  _i_o._c,_v _i_o._c

РРЕЕЖЖИИММЫЫ ДДООССТТУУППАА КК ФФААЙЙЛЛААММ
       Рабочий  файл,  создаваемый  командой  ccoo,  наследует
       режимы  доступа  (по  чтению  и выполнению) архивного
       файла.   Если   выполняется   резервирование   версии
       (ccoo --ll), дополнительно устанавливается режим разреше-
       ния записи.

       Если при порождении рабочего файла  оказывается,  что
       уже существует файл с таким именем и установлено раз-
       решение  записи,  команда  ccoo  либо  прекращает  свою
       работу  (при ключе --qq), либо запрашивает пользователя
       о целесообразности продолжения работы.  При  отсутст-
       вии  разрешения записи, существующий файл с совпадаю-
       щим  именем  уничтожается  перед  созданием  рабочего
       файла.


                            -5-                     ДЕМОС/PV


CO(1)                  ДЕМОС. Команды                  CO(1)


ФФААЙЙЛЛЫЫ
       Пользователь, вызывающий команду записи версии,  дол-
       жен  иметь право записи в рабочий каталог, право чте-
       ния архивного файла RRCCSS  и  разрешения  чтения/записи
       (при  резервировании  версии)  или  только  чтения (в
       остальных  случаях)  каталога,  содержащего  архивный
       файл.

       В процессе работы команды создаются несколько времен-
       ных  файлов.   В  частности,  в  каталоге, содержащем
       архивный файл, создается специальный файл-семафор для
       блокировки  попыток  одновременного обновления архив-
       ного файла.

ДДООППООЛЛННИИТТЕЕЛЛЬЬННЫЫЕЕ ССССЫЫЛЛККИИ
       _c_i(1),  _i_d_e_n_t(1),  _r_c_s(1),  _r_c_s_d_i_f_f(1),  _r_c_s_i_n_t_r_o(1),
       _r_c_s_m_e_r_g_e(1), _r_l_o_g(1), _r_c_s_f_i_l_e(5)

ЗЗААММЕЕЧЧААННИИЯЯ
       Ключевые  параметры  расширяются  в   любом   случае,
       существует  единственный  способ отмены подстановки -
       изменение ключа. Так, чтобы избежать искажения исход-
       ного  текста  этого  документа  при хранении в архиве
       RRCCSS, в соответствующие места вставлен "пустой" символ
       системы подготовки документов nnrrooffff(1) `\\&&'.

       Команда ccoo --jj не работает с  файлами,  которые  имеют
       строки,  содержащие  в качестве единственного символа
       точку.































                            -6-                     ДЕМОС/PV

