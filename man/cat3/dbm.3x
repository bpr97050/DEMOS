
DBM(3X)         ДЕМОС. Библиотечные функции          DBM(3X)


ИИММЯЯ
       ddbbmmiinniitt, ffeettcchh, ssttoorree, ddeelleettee,  ffiirrssttkkeeyy,  nneexxttkkeeyy  -
       подпрограммы для работы с базой данных.

ФФООРРММААТТ
       ttyyppeeddeeff ssttrruucctt {
         cchhaarr *_d_p_t_r;
         iinntt   _d_s_i_z_e;
       } _d_a_t_u_m;

       ddbbmmiinniitt(_f_i_l_e)
       cchhaarr *_f_i_l_e;

       _d_a_t_u_m ffeettcchh(_k_e_y)
       _d_a_t_u_m _k_e_y;

       ssttoorree(_k_e_y, _c_o_n_t_e_n_t)
       _d_a_t_u_m _k_e_y, _c_o_n_t_e_n_t;

       ddeelleettee(_k_e_y)
       _d_a_t_u_m _k_e_y;

       _d_a_t_u_m ffiirrssttkkeeyy()

       _d_a_t_u_m nneexxttkkeeyy(_k_e_y)
       _d_a_t_u_m _k_e_y;

ООППИИССААННИИЕЕ
       Функции позволяют создавать и использовать базы  дан-
       ных,   объекты   которых   представимы  парами  ключ-
       содержимое.  Эти функции дают возможность работать  с
       очень большими базами данных (миллиард блоков) и поз-
       воляют осуществлять доступ  к  элементам  с  ключами,
       используя один или два типа доступа файловой системы.
       Для подключения библиотеки функций  ddbbmm  используется
       ключ --llddbbmm, который задается загрузчику (см.  _l_d(1)).

       "Ключ" и "содержимое" описываются оператором  опреде-
       ления  типа  ttyyppeeddeeff  _d_a_t_u_m.  _d_a_t_u_m определяет строку
       длиной _d_s_i_z_e байтов, на которую указывает _d_p_t_r.  Раз-
       решены  произвольные двоичные данные, а также обычные
       строки символов КОИ-8. База данных  хранится  в  двух
       файлах.   Один  файл  является  каталогом, содержащим
       битовую карту. Этот файл имеет суффикс "._d_i_r". Второй
       файл  содержит все данные и в качестве суффикса имеет
       "._p_a_g".

       Перед тем, как осуществлять доступ к базе данных,  ее
       нужно  открыть  с  помощью ddbbmmiinniitt.  К моменту вызова
       этой функции должны  существовать  файлы  _f_i_l_e._d_i_r  и
       _f_i_l_e._p_a_g.  (пустая база данных создается путем созда-
       ния файлов "._d_i_r" и "._p_a_g" нулевой длины).

       После открытия можно осуществлять доступ к данным  по
       ключу  с  помощью  ffeettcchh и помещать данные по ключу с
       помощью ssttoorree.   Ключ  и  соответствующее  содержимое
       удаляются  с помощью ddeelleettee.  Линейный проход по всем
       ключам в базе данных  в  произвольном  порядке  можно


                            -1-                     ДЕМОС/PV


DBM(3X)         ДЕМОС. Библиотечные функции          DBM(3X)


       производить  с  помощью  ffiirrssttkkeeyy и nneexxttkkeeyy.  Функция
       ffiirrssttkkeeyy возвращает первый  ключ  базы  данных.  Имея
       некоторый ключ, можно с помощью nneexxttkkeeyy получить сле-
       дующий ключ базы данных. Проход по всей  базе  данных
       можно сделать с помощью следующего оператора:

       ffoorr(_k=ffiirrssttkkeeyy(); _k._d_p_t_r!=NNUULLLL; _k=nneexxttkkeeyy(_k))

ДДИИААГГННООССТТИИККАА
       Все функции, которые возвращают целые  числа,  указы-
       вают на ошибку с помощью отрицательных значений. Если
       возвращается нуль,  то  функция  отработала  успешно.
       Программы,  возвращающие _d_a_t_u_m, указывают на ошибку с
       помощью нулевого значения _d_p_t_r.

ЗЗААММЕЕЧЧААННИИЯЯ
       Файл "._p_a_g" содержит "дырки", в связи с чем его види-
       мый размер примерно в четыре раза превышает фактичес-
       кое содержимое. Эти файлы нельзя  копировать  обычным
       средствами  (ccpp,  ccaatt,  ttpp, ttaarr, aarr), не заполняя эти
       "дырки".

       Указатели _d_p_t_r,  возвращаемые  этими  подпрограммами,
       указывают  на  статическую память, которая изменяется
       при последующих вызовах.

       Сумма размеров ключа и содержимого не  должна  превы-
       шать  размера  блока  (512  байтов).  Кроме того, все
       пары  ключ-содержимое,  которые   сливаются   вместе,
       должны  располагаться  на  одном блоке. Функция ssttoorree
       возвращает ошибку, если дисковый блок заполнен нераз-
       деляемыми данными.

       Функция  ddeelleettee  не  освобождает  физически  файловое
       пространство,  но делает его доступным для повторного
       использования.

       Порядок ключей, получаемый с помощью ffiirrssttkkeeyy и nneexxtt--
       kkeeyy, зависит от применяемой хеш-функции.





















                            -2-                     ДЕМОС/PV

