
XSTR(1)                ДЕМОС. Команды                XSTR(1)


ИИММЯЯ
        xxssttrr - выделение текстовых констант из  программ  на
        языке Си.

ФФООРРММААТТ
        xxssttrr [--vv] [--cc] [--xx]  [--ff]  [--]  [--ww_ч_и_с_л_о]  [--ll_ч_и_с_л_о]
        [_ф_а_й_л]

ООППИИССААННИИЕЕ
        Команда  xxssttrr  предназначена  для  выноса  текстовых
        строк  из программ на Си и сбора их либо в отдельный
        модуль,  либо  во  внешний  файл.  В  первом  режиме
        команда  xxssttrr  ведет файл _s_t_r_i_n_g_s, в котором собраны
        текстовые константы разных частей большой программы.
        Эти  константы  заменяются  в  программе ссылками на
        соответствующую   строку   в   этом    файле    вида
        "&xxssttrr[_н_о_м_е_р]".

        Во втором режиме создается файл _M_e_s_s_a_g_e_s, в  который
        собираются   достаточно  длинные  текстовые  строки.
        Обращения к этим строкам заменяются на  обращения  к
        программе  XXsslliinnee(_а_д_р_е_с)",  которая читает строку по
        указанному адресу в буфер и возвращает адрес считан-
        ной строки.

        Не всегда такая замена строк корректна. Команда xxssttrr
        при  обработке  текста программы воспринимает специ-
        альные комментарии, которые выключают  или  включают
        различные режимы обработки программы.

        Максимальная длина извлекаемых в файл строк по умол-
        чанию  равна  12.   Ее  можно переустановить, указав
        ключ --ll_ч_и_с_л_о. Если указать ключ  --ll  без  _ч_и_с_л_а,  то
        будет выдано текущее значение этого параметра.

        Команда

                xxssttrr --cc _и_м_я

        выделяет из файла _и_м_я, в котором находится  исходный
        текст  программы  на  языке Си, строки и заменяет их
        ссылками  вида  &xxssttrr[_ч_и_с_л_о].  К  файлу  добавляется
        соответствующее  объявление массива xxssttrr.  Результи-
        рующий текст на Си помещается в файл  _x._c  и  должен
        затем быть скомпилирован. Выделенные строки размеща-
        ются в файле _s_t_r_i_n_g_s, если их там до этого не  было.
        Повторяющиеся  строки и строки, представляющие собой
        части существующих строк, не приводят к изменениям в
        файле  ssttrriinnggss (кроме случая с явным указанием ключа
        --ff (см. ниже)).   После  того,  как  все  компоненты
        большой программы скомпилированы, должен быть создан
        файл _x_s._c, инициализирующий массив _x_s_t_r,  с  помощью
        команды вида:

                xxssttrr

        Этот файл _x_s._c должен быть скомпилирован и  загружен
        вместе  с  остальной  программой.  Массив _x_s_t_r можно


                            -1-                     ДЕМОС/PV


XSTR(1)                ДЕМОС. Команды                XSTR(1)


        перевести из сегмента _d_a_t_a в сегмент  _t_e_x_t,  (напри-
        мер, оттранслировав его на язык ассемблера и поменяв
        слово ..ddaattaa на ..tteexxtt в полученном файле).

        xxssttrr может также работать с одним файлом. Команда

                xxssttrr _и_м_я

        создает, как и прежде, файлы _x._c и _x_s._c, не  пользу-
        ясь  при  этом никаким файлом strings в том же ката-
        логе.

        Выполнение xxssttrr  наиболее  эффективно  после  работы
        препроцессора  Си,  если какие-либо макроопределения
        создают строки или если имеется условно  транслируе-
        мые части программы, содержащие строки, которые фак-
        тически могут не понадобиться. Если  задан  аргумент
        --, xxssttrr считывает стандартный файл ввода. Для выпол-
        нения xxssttrr после препроцессора  Си  может  использо-
        ваться следующая последовательность команд:

                cccc --CC --PP _и_м_я._c
                xxssttrr --cc _и_м_я._i
                cccc --cc _x._c
                mmvv xx..oo _и_м_я._o
                rrmm _и_м_я._i

        или:

                cccc --CC --EE _и_м_я._c | xxssttrr --cc --
                cccc --aa --cc _x._c
                mmvv _x._o _и_м_я._o

        Во втором случае при диагностике ошибок  сохраняется
        нумерация строк исходного файла.

        Если не добавляются новые элементы, xxssttrr не изменяет
        файл  _s_t_r_i_n_g_s  (кроме случая с явным указанием ключа
        --ff (см. ниже)); таким образом, можно  избежать  пов-
        торного создания _x_s._o, за исключением случаев, когда
        это действительно необходимо.

        Команда:

                xxssttrr --xx --cc _и_м_я

        собирает строки в файл _M_e_s_a_g_e_s, и переписывает прог-
        рамму  в  файл  _x._c,  заменяя  строки на обращения к
        функции XXsslliinnee(_а_д_р_е_с), где _а_д_р_е_с -  адрес  строки  в
        файле _M_e_s_s_a_g_e_s (не более 65535).  Правила построения
        файла _M_e_s_s_a_g_e_s такие же, как и  для  файла  _s_t_r_i_n_g_s,
        включая  действие  флага --ff (см. ниже).  В программу
        вставляется описание функции XXsslliinnee.  Команда:

                xxssttrr --xx

        создает файл _x_s._c, содержащий текст функции  XXsslliinnee.
        При  трансляции этот файл настраивается на имя файла


                            -2-                     ДЕМОС/PV


XSTR(1)                ДЕМОС. Команды                XSTR(1)


        с  текстами  диагностик  с  помощью  макропеременной
        XXSSFFIILLEE:

                cccc --OO --cc --DDXXSSFFIILLEE=\"_и_м_я__ф_а_й_л_а\" _x_s._c

        В функции XXsslliinnee имеется статический байтовый массив
        (буфер) для строк, читаемых из файла.  Его размер по
        умолчанию 170 байт. Если  этого  мало  (или  много),
        размер  можно  переустановить,  указав  ключ --ww_ч_и_с_л_о
        Ключ --ww без параметра выдает текущее значение  длины
        буфера.

        Для управления обработкой в программе на  Си  служат
        псевдокомментарии:

        //**NNOOXXSSTTRR**//
                блокировка выноса строк в режиме "xxssttrr --cc" в
                тексте за комментарием;

        //**NNOOXXXXSSTTRR**//
                то же самое, но в режиме "xxssttrr --cc --xx";

        //**YYEESSXXSSTTRR**//
                разрешение выноса строк в обоих режимах.

        Естественно, что, если xxssttrr используется после преп-
        роцессора,  должен использоваться флаг --CC команды cccc
        для того, чтобы препроцессор не уничтожал  коммента-
        рии.   При  использовании xxssttrr --cc вынос строк должен
        блокироваться в конструкциях инициализации типа:

                cchhaarr x[]="_с_т_р_о_к_а";

        При выносе строки в файл (режим xxssttrr  --cc  --xx)  обра-
        ботка  должна  блокироваться  во всех инициализациях
        данных, а также везде, где  строка  будет  использо-
        ваться  сколь  нибудь  продолжительно. Это связано с
        тем, что при  запросе  у  функции  XXsslliinnee  следующей
        строки предыдущая стирается.

ЗЗААММЕЕЧЧААННИИЯЯ
        Флаг  --vv  позволяет  получить  некоторую  информацию
        отладочного характера о работе xxssttrr.

        Если строка является  суффиксом  другой  строки,  но
        более короткая строка первой просматривается xxssttrr, в
        файл _s_t_r_i_n_g_s помещаются обе строки, хотя  достаточно
        было бы поместить только более длинную строку.

        Флаг --ff  отменяет процедуру поиска совпадающих строк
        в  файле  вынесенных  строк  (_s_t_r_i_n_g_s или _M_e_s_s_a_g_e_s),
        просто добавляя строки в конец этого файла, несмотря
        на  то, что они уже встречались в нем ранее. В неко-
        торых случаях это сильно убыстряет весь процесс.






                            -3-                     ДЕМОС/PV

