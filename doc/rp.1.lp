
            дддд   ееееее   м     м    oooo     сссс
           д   д   е        мм   мм   o    o   с    с
          д    д   е        м м м м   o    o   с    с
          д    д   еееее    м  м  м   o    o   с
          д    д   е        м     м   o    o   с
          д    д   е        м     м   o    o   с    с
         дддддддд  ееееее   м     м    oooo     сссс



          демосдемосдемосдемосдемосдемосдемосдемосде
          емосдемосдемосдемосдемосдемосдемосдемосдем
          мо                                      мо
          ос                                      ос
          сд        ОПЕРАЦИОННАЯ СИСТЕМА          сд
          де                                      де
          ем               ДЕМОС                  ем
          мо                                      мо
          ос                                      ос
          сд                                      сд
          де             Версия 1.0               де
          ем                                      ем
          мо                                      мо
          сдемосдемосдемосдемосдемосдемосдемосдемосд
          демосдемосдемосдемосдемосдемосдемосдемосде







                  РУКОВОДСТВО ПРОГРАММИСТА
                          ЧАСТЬ 1.
                     ВВЕДЕНИЕ В СИСТЕМУ






                 Долбин Алексей Николаевич











                       МОСКВА - 1985









                                                           1



   Данный документ содержит сведения об условиях применения,
назначении операционной системы ДЕМОС. Приведены характерис-
тики системы, указаны входные и выходные данные,  диагности-
ческие сообщения системы.



























































2




       1. НАЗНАЧЕНИЕ И ФУНКЦИИ, ВЫПОЛНЯЕМЫЕ СИСТЕМОЙ


   ДЕМОС - операционная система, предназначенная для эксплу-
атации  на  ЭВМ,  совместимых  с  СМ-4  (ЭЛЕКТРОНИКА 100/25,
СМ-1600, СМ-1420, ЭЛЕКТРОНИКА 79 и других).

   ОС ДЕМОС включает ядро  операционной  системы,  системные
программы,  интерпретаторы  команд, компиляторы языков прог-
раммирования и различные прикладные программы.

   Система предоставляет пользователю:

   -  возможность работы в режиме разделения времени;

   -  достаточно удобный командный язык;

   -  иерархическую файловую систему;

   -  аппарат управления процессами;

   -  возможность создания программ, независящих от  особен-
      ностей конкретных внешних устройств;

   -  технологические средства для построения больших  прог-
      раммных комплексов;

   -  развитые средства разработки, "отладки" и  сопровожде-
      ния документации.
































                                                           3




          2. ХАРАКТЕРИСТИКИ И ОСОБЕННОСТИ СИСТЕМЫ


   Система включает ядро ОС и различные прикладные и систем-
ные  программы. Ядро ОС обеспечивает функции управления про-
цессами, работу с файлами, базовые функции сбора статистики,
буферизацию  обменов, защиту от несанкционированного доступа
и некоторые другие. Системные программы реализуют  процедуры
регистрации  пользователей,  межмашинного обмена, контроля и
восстановления файловых систем,  сложные  методы  доступа  и
многие другие функции.

   Все возможности ОС ДЕМОС доступны из языка программирова-
ния  Си,  то  есть, при создании практически любой программы
отпадает необходимость использования языка Ассемблера.

   Многие задачи могут быть реализованы пользователем с  по-
мощью  командного  языка SHELL, который выступает и как язык
управления заданиями, и как достаточно мощный язык  програм-
мирования. Поскольку выбор интерпретатора команд для взаимо-
действия с системой, делается каждым пользователем индивиду-
ально и в качестве такого интерпретатора может использовать-
ся любая интерактивная программа, в системе  может  одновре-
менно  сосуществовать  несколько  командных языков. В данной
версии ОС ДЕМОС их два: SHELL - стандартный  командный  язык
для  всех  систем  семейства  UNIX и Си-SHELL - язык который
постепенно завоевывает популярность и к  настоящему  времени
стал  стандартной  компонентой  для наиболее развитых систем
семейства UNIX.

   Многие программные компоненты ОС ДЕМОС достаточно  прими-
тивны  и реализуют очень простые функции. Тем не менее, воз-
можность использования программных каналов  и  создания  ко-
мандных  файлов  позволяет строить необходимые наборы команд
пользователя, практически для любых приложений.

   Общая структура системы, приведена в документах "Описание
применения" (АПК.00109-01 31 01-1) и "Руководство системного
программиста" (АПК.00109-01 32 01-1).


   2.1. Технические средства


   ОС ДЕМОС поддерживает технические средства, перечисленные
ниже и совместимые с ними:

   -  процессоры СМ 2104 (ЭВМ СМ-4), СМ 2420 (ЭВМ СМ  1420),
      СМ 2406 (ЭВМ СМ 1600), ЭЛЕКТРОНИКА 100/25, ЭЛЕКТРОНИКА
      79;

   -  терминалы VIDEOTON-340, ВТА 2000-1,  ВТА  2000-2,  ВТА
      2000-3,   ВТА   2000-15,   ВТА   2000-30,   VDT-52129,
      VDT-52106, ЭЛЕКТРОНИКА 15ИЭ;

   -  касетные диски СМ 5408 емкостью 14 Мбайт;





4

   -  кассетные диски СМ 5400, ИЗОТ-1370 емкостью 2,4 Мбайт;

   -  пакетные диски СМ 5407 емкостью 29 Мбайт на базе меха-
      низма ЕС-5061;

   -  гибкие диски СМ 5603;

   -  магнитные ленты СМ 5300;

   -  печатающие устройства СМ 6302 (DZM-180), СМ 6315 и  СМ
      6900 (DARO-1154);

   -  перфоленточные устройства СМ 6204;

   -  асинхронный  мультиплексор  передачи  данных  СМ  8514
      (МПА-1);

   -  адаптер дистанционной связи СМ 8502 (БС-АДС).

   Минимальная конфигурация, на которой  может  эксплуатиро-
ваться система, должна включать:

   -  процессор, с аппаратурой диспетчера памяти;

   -  оперативное запоминающее устройство об'емом  не  менее
      64 Кслов;

   -  консольный терминал любого из указанных типов;

   -  одно устройство внешней  памяти  на  магнитных  дисках
      об'емом не менее 2,4 Мбайт.


   2.2. Совместимость с другими системами


   В  ОС  ДЕМОС  предусмотренны  средства  позволяющие  осу-
ществлять обмен информацией на магнитных носителях с другими
операционными системами, это команды:

arrt  - работа с дисками в фомате РАФОС, допустимы  операции
        чтения, записи файлов, выдача каталога диска;

ardos - чтение и запись магнитных лент  в  формате  ДОС  СМ,
        (поскольку  данный формат поддерживается стандартным
        программным обеспечением БЭСМ-6 и МВК ЭЛЬБРУС-1  К2,
        он  может  использоваться для обмена информацией и с
        этими машинами);

dd    - используется для работы с лентами ЕС ЭВМ.














                                                           5




                3. ВХОДНЫЕ И ВЫХОДНЫЕ ДАННЫЕ


   В качестве внутреннего кода ОС ДЕМОС  выбран  код  КОИ-8,
обеспечивающий  возможность использования строчных и пропис-
ных букв латинского и русского алфавитов. Это решение харак-
терно  для  ОС  ДЕМОС и несколько отличает данную систему от
большинства ОС, совместимых с UNIX,  которые  ориентированны
на 7-битовый код ASCII.

   Применение кода КОИ-8, порождает ряд трудностей,  связан-
ных  с  тем, что порядок следования букв русского алфавита в
КОИ-8, отличен от общепринятого (не от "А" до "Я", а от  "Ю"
до  "Ч"). Поэтому, например, команда сортировки "sort" опре-
деляется в ОС ДЕМОС не как, сортировка  в  порядке  значений
байтов, а более сложно (коды русских букв сортируются по ал-
фавиту, а остальные символы - по возрастанию кода).

   Поскольку, в настоящее время далеко не все терминалы под-
держивают  полный набор символов, система позволяет работать
с кодом  КОИ-8  и  на  устройствах,  содержащих  сокращенный
набор.  В то же время, использование терминалов с полным на-
бором символов (например, ЭЛЕКТРОНИКА 15ИЭ) упрощает  работу
с системой, в особенности на стадии ее освоения.

   В таблицах 1-5 приводятся обозначения управляющих  симво-
лов и соответствующие им коды.


































6

                                                   Таблица 1

                    Управляющие символы


 ------------------------------------------
 ! обозн. :восьм.код ! обозн. :восьм. код !
 !-------------------!--------------------!
 ! ПУС    :000       ! АР1    :020        !
 ! Н3     :001       ! (су1)  :021        !
 ! НТ     :002       ! (су2)  :022        !
 ! КТ     :003       ! (су3)  :023        !
 ! КП     :004       ! СТП    :024        !
 ! КТМ    :005       ! НЕТ    :025        !
 ! ДА     :006       ! СИН    :026        !
 ! ЗВ     :007       ! КБ     :027        !
 ! ВШ     :010       ! АН     :030        !
 ! ГТ     :011       ! КН     :031        !
 ! ПС     :012       ! ЗМ     :032        !
 ! ВТ     :013       ! АР2    :033        !
 ! ПФ     :014       ! РФ     :034        !
 ! ВК     :015       ! РГ     :035        !
 ! РУС    :016       ! РЗ     :036        !
 ! ЛАТ    :017       ! РЭ     :037        !
 ! АР1    :020       ! ЗБ     :177        !
 ------------------------------------------






































                                                           7

                                                   Таблица 2

                    Графические символы


 ------------------------------------------
 ! знак ! наименование           !   код  !
 ------------------------------------------
 !      ! пробел                 !   040  !
 !  !   ! восклицательный знак   !   041  !
 !  "   ! кавычка двойная        !   042  !
 !  #   ! номер (диез)           !   043  !
 !  $   ! знак денежной единицы  !   044  !
 !  %   ! процент                !   045  !
 !  &   ! амперсенд              !   046  !
 !  '   ! апостроф               !   047  !
 !  (   ! круглая скобка левая   !   050  !
 !  )   ! круглая скобка правая  !   051  !
 !  *   ! звездочка              !   052  !
 !  +   ! плюс                   !   053  !
 !  ,   ! запятая                !   054  !
 !  -   ! минус                  !   055  !
 !  .   ! точка                  !   056  !
 !  /   ! дробная черта (слэш)   !   057  !
 !  :   ! двоеточие              !   072  !
 !  ;   ! точка с запятой        !   073  !
 !  <   ! меньше                 !   074  !
 !  =   ! равно                  !   075  !
 !  >   ! больше                 !   076  !
 !  ?   ! вопросительный знак    !   077  !
 !  @   ! коммерческое а         !   100  !
 !  [   ! квадратная скобка левая!   133  !
 !  \   ! обратная дробная черта !   134  !
 !      ! (обратный слэш)        !        !
 !  ]   ! квадратная скобка      !   135  !
 !      ! правая                 !        !
 ------------------------------------------



























8

                                       Продолжение таблицы 2

                    Графические символы


 ------------------------------------------
 ! знак ! наименование           !   код  !
 ------------------------------------------
 !  ^   ! стрелка вверх (лог. не)!   136  !
 !  _   ! подчеркивание          !   137  !
 !  '   ! слабое ударение        !   140  !
 !  {   ! фигурная скобка левая  !   173  !
 !  |   ! вертикальная черта     !   174  !
 !  }   ! фигурная скобка правая !   175  !
 !  ~   ! тильда                 !   176  !
 ------------------------------------------

                                                   Таблица 3

                          Коды цифр


 ------------------------------------------
 !   обозначение   !   восьмеричный код   !
 !----------------------------------------!
 !        0        !          060         !
 !        1        !          061         !
 !        2        !          062         !
 !        3        !          063         !
 !        4        !          064         !
 !        5        !          065         !
 !        6        !          066         !
 !        7        !          067         !
 !        8        !          070         !
 !        9        !          071         !
 ------------------------------------------




























                                                           9

                                                   Таблица 4

                     Коды латинских букв


 ------------------------------------------
 !cимвол !восьмеричн. код !восьмеричн. код!
 !       !прописной буквы !строчной буквы !
 ------------------------------------------
 !   A   !       101      !       141     !
 !   B   !       102      !       142     !
 !   C   !       103      !       143     !
 !   D   !       104      !       144     !
 !   E   !       105      !       145     !
 !   F   !       106      !       146     !
 !   G   !       107      !       147     !
 !   H   !       110      !       150     !
 !   I   !       111      !       151     !
 !   J   !       112      !       152     !
 !   K   !       113      !       153     !
 !   L   !       114      !       154     !
 !   M   !       115      !       155     !
 !   N   !       116      !       156     !
 !   O   !       117      !       157     !
 !   P   !       120      !       160     !
 !   Q   !       121      !       161     !
 !   R   !       122      !       162     !
 !   S   !       123      !       163     !
 !   T   !       124      !       164     !
 !   U   !       125      !       165     !
 !   V   !       126      !       166     !
 !   W   !       127      !       167     !
 !   X   !       130      !       170     !
 !   Y   !       131      !       171     !
 !   Z   !       132      !       172     !
 ------------------------------------------




























10

                                                   Таблица 5

                      Коды русских букв


 ------------------------------------------
 !cимвол !восьмеричн. код !восьмеричн. код!
 !       !прописной буквы !строчной буквы !
 ------------------------------------------
 !   Ю   !       340      !       300     !
 !   А   !       341      !       301     !
 !   Б   !       342      !       302     !
 !   Ц   !       343      !       303     !
 !   Д   !       344      !       304     !
 !   Е   !       345      !       305     !
 !   Ф   !       346      !       306     !
 !   Г   !       347      !       307     !
 !   Х   !       350      !       310     !
 !   И   !       351      !       311     !
 !   Й   !       352      !       312     !
 !   К   !       353      !       313     !
 !   Л   !       354      !       314     !
 !   М   !       355      !       315     !
 !   Н   !       356      !       316     !
 !   О   !       357      !       317     !
 !   П   !       360      !       320     !
 !   Я   !       361      !       321     !
 !   Р   !       362      !       322     !
 !   С   !       363      !       323     !
 !   Т   !       364      !       324     !
 !   У   !       365      !       325     !
 !   Ж   !       366      !       326     !
 !   В   !       367      !       327     !
 !   Ь   !       370      !       330     !
 !   Ы   !       371      !       331     !
 !   З   !       372      !       332     !
 ------------------------------------------



























                                                          11

                                       Продолжение таблицы 5

                      Коды русских букв


 ------------------------------------------
 !cимвол !восьмеричн. код !восьмеричн. код!
 !       !прописной буквы !строчной буквы !
 ------------------------------------------
 !   Ш   !       373      !       333     !
 !   Э   !       374      !       334     !
 !   Щ   !       375      !       335     !
 !   Ч   !       376      !       336     !
 ------------------------------------------


















































12


   На внешних устройствах, не имеющих полного набора  КОИ-8,
отсутствующие  символы  изображаются  в  виде пары символов.
Если в  символьном  наборе  конкретного  устройства  имеется
только один регистр букв, то он считается регистром строчных
букв. Прописные буквы в этом случае  изображаюся  последова-
тельностью - "\" и соответствующей строчной буквой. В табли-
це 6 приводятся обозначения для символов  разделителей,  от-
сутствующих в наборе символов КОИ-7.

                                                   Таблица 6

           Обозначение отсутствующих разделителей


 ------------------------------------------
 ! наименование            ! обозначение  !
 ! символа                 ! на терминале !
 !-------------------------!--------------!
 ! обратный апостроф       !      \'      !
 ! фигурная скобка левая   !      \(      !
 ! вертикальная черта      !      \!      !
 ! фигурная скобка правая  !      \)      !
 ! надчерк (тильда)        !      \^      !
 ------------------------------------------







































                                                          13




         4. ВЗАИМОДЕЙСТВИЕ ПОЛЬЗОВАТЕЛЯ С СИСТЕМОЙ


   ОС ДЕМОС расчитана на диалоговую работу  пользователей  с
терминалов,  подключенных  к  ЭВМ.  Каждому  пользователю ОС
присвоен личный "идентификатор", который может содержать  от
1  до 14 строчных латинских или русских букв и цифр. Для за-
щиты от несанкционированного входа служит  "пароль",  состо-
ящий  практически из любых символов. Для каждого пользовате-
ля, при его регистрации в системе, указывается интерпретатор
команд,  с  которым тот будет работать. Как правило, это ин-
терпретатор языка SHELL (sh) или Си-SHELL (csh).

   При работе в ОС каждый пользователь создает себе  некото-
рую  "среду", в которой работает. В это понятие входит набор
команд, доступных пользователю, набор макропеременных, набор
"псевдонимов"  и  сокращений,  ряд правил умолчания, правила
интерпретации клавиатуры терминала и многое другое.  Начина-
ющие пользователи попадают в стандартную "среду", и, по мере
освоения системы, расширяют и изменяют ее.

   Каждый пользователь ОС ДЕМОС имеет  определенные  возмож-
ности  по  выполнению  команд и доступу к файлам. Существует
выделенный "супер-пользователь", который обладает практичес-
ки неограниченными правами. Остальные могут выполнять коман-
ды общего назначения и работать со своими файлами  (и,  воз-
можно, с файлами своей группы).


   4.1. Подключение к системе


   Пользователь может вызвать систему ДЕМОС с любого  терми-
нала, подключенного к ЭВМ.

   Для начала сеанса необходимо подготовить терминал к рабо-
те. Требуется установить:

   - "комплексный режим" на терминалах типа ВТА-2000;

   - "линия" и систему команд  2  на  терминале  ЭЛЕКТРОНИКА
     15ИЭ;

   - "on line" - на других терминалах;

   - режим "дуплекс", "нижний регистр".

   На терминале должно появиться приглашение вида:

        "название системы"
        login:


   Если слово "login:" не  появилось,  нужно  несколько  раз
нажать "возврат каретки", "возврат строки" или <ctrl>d и по-
дождать 1-2 минуты. В случае неудачи проверить скорость  об-
мена, установленную на терминале.




14

   Название системы должно выдаваться  русскими  буквами  на
терминале, имеющем русский шрифт, и латинскими - на термина-
ле без русских букв. Если это правило нарушено значит в сис-
теме  неверно задан тип данного терминала: после регистрации
придется установить его заново.

   Получив "login:", необходимо зарегистрироваться в  систе-
ме.  Для этого нужно установить регистр клавиатуры ("нижний"
"латинский" на ЭЛЕКТРОНИКА  15ИЭ,  "русский"  на  ВТА  2000,
"нижний"  на "VDT-52100" и подобных ему терминалах) и ввести
идентификатор пользователя.

   Если у пользователя есть  пароль,  появится  подсказка  -
"password:".  Нужно  набрать пароль и "возврат каретки" (па-
роль не будет отображаться на экране). Если все было набрано
верно, будет получено сообщение:

        "last login <дата> <время> <терминал>"
        <другие сообщения>
 $


Знак "$" в качестве  подсказки  указывает,  что  вызван  ин-
терпретатор  команд  SHELL. Если в качестве командного языка
используется Си-SHELL, будет  выдан  символ  "%".  Появление
подсказки, означает, что система готова к вводу команд. Если
были допущены ошибки, высветится сообщение:

        "login incorrect"
        login:


нужно повторить попытку входа.

   Для окончания данного сеанса можно непосредственно  заре-
гистрироваться в качестве другого пользователя, введя коман-
ду login.

   Все символы, которые пользователь  вводит  с  клавиатуры,
интерпретируются специальной системной программой и сохраня-
ются в недоступной для пользователя области памяти. Эти сим-
волы не будут переданы программе, для которой они предназна-
чены, до тех пор, пока пользователь не введет  с  клавиатуры
код "возврат каретки" или "новая строка".

   Система ДЕМОС осуществляет работу с терминалом  пользова-
теля в дуплексном режиме. Она допускает опережающий ввод ин-
формации (т.е. пользователь может начать ввод данных в любой
момент  времени  -  даже  тогда, когда выполняемая программа
осуществляет вывод данных на его терминал). В последнем слу-
чае,  выводимые и вводимые символы будут печататься в произ-
вольном порядке, т.е. данные окажутся смешанными. Тем не ме-
нее, все введенные с клавиатуры данные будут сохранены и ин-
терпретированы в правильной  последовательности.  Количество
вводимой  с  опережением информации ограничено, однако уста-
новленный предельный об'ем очень велик и редко  превышается.
Если предельный об'ем информации превышен, система уничтожа-
ет все введенные с опережением символы.

   При вводе с клавиатуры символ "kill" (по  умолчанию  "#")
уничтожает  последний введенный символ, а символ "erase" (по
умолчанию "@") отменяет свою строку. Можно установить  умол-


                                                          15

чания в стиле ОС РАФОС или ОС РВ, набрав:

        stty dec


   В этом режиме для отмены символа служит "забой" (del),  а
для отмены строки - <ctrl>u, символ <ctrl>с прерывает выпол-
нение команды.

   При  работе   на   терминалах   ВТА-2000,   VIDEOTON-340,
VDT-52100 и других аналогичных им терминалах, на которых нет
строчных букв, но есть прописные русские и латинские  симво-
лы,  система моделирует терминал с полным алфавитом. При вы-
воде на такой терминал отсутствующие спецсимволы и прописные
буквы   изображаются   парой  символов;  при  вводе  клавиша
"рус/лат" служит для переключения  "верхний/нижний  регистр"
("лат"  -  верхний,  "рус"  -  нижний): для перехода к вводу
русских букв служит код <ctrl>n, латинских -  <ctrl>o.  Ввод
специальных символов представлен в таблице 7.













































16

                                                   Таблица 7

                  Ввод специальных символов


 ------------------------------------------
 ! символ      ! символ на  ! изображение !
 ! КОИ - 8     ! клавиатуре ! на экране   !
 !-------------!------------!-------------!
 ! слабое      !      @     !     \'      !
 ! ударение    !            !             !
 ! фигурная    !      [     !     \(      !
 ! скобка левая!            !             !
 ! фигурная    !      ]     !     \)      !
 ! скобка      !            !             !
 ! правая      !            !             !
 ! тильда      !      ^     !     \^      !
 ! вертикальная!      \     !    \!       !
 ! черта       !            !             !
 ------------------------------------------


   Более подробно правило ввода символов описано в документе
"Руководство  программиста"  часть 2 (АПК.00109-01 33 01-2 и
АПК.00109-01 33 01-5).

   Система  ДЕМОС  пытается  определить  имеет  ли  терминал
функциональный код "новая строка" или его необходимо модели-
ровать с помощью кодов "возврат каретки" и "перевод строки".
В  последнем  случае все вводимые с клавиатуры коды "возврат
каретки" преобразуется в символы "новая строка" и при печати
на  терминале в режиме "эхо" возвращаются в виде двух симво-
лов: "возврат каретки" и "перевод  строки".  Если  выбранный
системой  режим  интерпретации  ввода оказался неправильным,
пользователь может отказаться от него с помощью команды stty
(см.  "Руководство  программиста"  часть  2, АПК 00109-01 33
01-2).

   В исходных программах, предназначенных для системы ДЕМОС,
допускается свободное использование символов табуляции. Если
терминал не имеет функционального кода "табуляция",  пользо-
ватель  может  задать режим работы терминала, в котором этот
код будет при выводе и при вводе в режиме "эхо" преобразован
в  пробелы.  По  умолчанию, в качестве позиций табуляции ис-
пользуются колонки с номерами кратными 8-ми. Для  отказа  от
такого  режима интерпретации можно также воспользоваться ко-
мандами tset или stty.


   4.2. Запуск программ


   После того, как пользователь успешно  завершил  процедуру
регистрации, его терминал обслуживается системной программой
называемой интерпретатором команд. Интерпретатор команд счи-
тывает  вводимые  с клавиатуры строки символов, разбивает их
на имя команды и аргументы, и выполняет соответствующую  ко-
манду.  Здесь  команда  - это просто некоторая доступная для
выполнения программа. Чтобы найти нужную команду,  интерпре-
татор  просматривает несколько системных справочников. Кроме
того, пользователь  может  помещать  команды  в  собственный
справочник,  где  они  также  будут  найдены интерпретатором


                                                          17

команд. Команды, входящие в предоставляемый системой  посто-
янный  набор команд, не обладают никакими особыми свойствами
за исключением того, что они содержатся в системном справоч-
нике и всегда могут быть найдены интерпретатором команд.

   Имя команды всегда представлено первым  словом  введенной
строки, аргументы команды отделены друг от друга пробелами.

   Когда вызванная программа завершена, управление возвраща-
ется  интерпретатору команд, который выводит сообщение, ука-
зывающее на то, что интерпретатор готов к  обработке  следу-
ющей команды.




















































18




                 5. ОПИСАНИЕ ВХОДНОГО ЯЗЫКА



   5.1. Простые команды


   Простые команды состоят из одного  или  нескольких  слов,
разделенных пробелами. Первое слово является именем выполня-
емой команды, все остальные слова передаются этой команде  в
качестве аргументов.

   Например:

who    Выдает имена зарегистрировавшихся в системе пользова-
       телей;

ls -l  Печатает список файлов в текущем  справочнике.  Аргу-
       мент  -l  сообщает  команде ls, что для каждого файла
       необходимо печатать информацию о состоянии,  длине  и
       дате его создания.


   5.2. Фоновые команды


   Для выполнения команды интерпретатор языка управления за-
даниями  обычно порождает новый процесс, и следующая команда
выполняется после его завершения. При выполнении  команды  в
фоновом  режиме,  интерпретатор переходит к выполнению новой
команды, не дожидаясь окончания запущеного процесса.  Напри-
мер, задание:

        cc pgm.c&

вызывает компилятор языка Си  для  трансляции  файла  pgm.c.
Завершающее "&" является признаком того, что команду необхо-
димо выполнить в фоновом  режиме.  После  создания  фонового
процесса  интерпретатор  команд  сообщает  его номер. Список
процессов, активных в текущий момент времени, можно получить
с помощью команды ps.


   5.3. Переадресация ввода и вывода


   Большинство команд производят выдачу в  стандартный  файл
вывода,  который  первоначально  связан  с терминалом. В ка-
честве стандартного файла вывода можно использовать  практи-
чески любой доступный файл, например:

        ls -l >file

обозначение >file интерпретируется языком SHELL как  задание
file  в  качестве  стандортного файла вывода и не передается
команде ls в качестве аргумента. Если file не существует, то
командный  язык создает его, в противном случае первоначаль-
ное содержимое файла file заменяется данными, полученными  в
результате  работы  команды  ls. Данные могут дописываться в


                                                          19

конец файла с помощью команды:

        ls -l >>file

и в этом случае file создается, если он еще не  существовал.
В  качестве  стандартного файла ввода, также может использо-
ваться не только терминал, но и любой файл. Например,  зада-
ние вида:

        wc <file

определяет file стандартным файлом ввода для команды wc, ко-
торая подсчитывает число обнаруженных в нем символов, слов и
строк и выдает полученные значения в стандатный файл  вывода
(в  данном  случае  на  терминал).  Если  требуется получить
только число строк, то может быть использована команда

        wc -l <file



   5.4. Программный канал и фильтры


   Стандартный файл вывода одной команды может быть соединен
со стандартным файлом ввода другой команды путем записи опе-
ратора "программный канал" (|). Например, задание вида:

        ls -l | wc

имеет тот же самый эффект, что и последовательность команд:

        ls -l > file
        wc <file

за исключением того, что  не  используется  никакого  файла.
Вместо  этого два процесса связываются программным каналом и
выполняются параллельно. Программные каналы  являются  одно-
направленными, синхронизация достигается остановкой процесса
wc, когда ему нечего читать, и остановкой процесса ls, когда
буфер программного канала заполнен.

   Фильтр - это команда,  которая  читает  свой  стандартный
файл  ввода,  преобразует его некоторым образом, и результат
выдает в стандартный файл вывода. Один  из  таких  фильтров,
grep, выбирает из своего файла ввода только те строки, кото-
рые содержат указанную цепочку символов. Например, команда:

        ls | grep old

выдает только те строки вывода команды ls, которые  содержат
последовательность  букв old. Другим полезным фильтром явля-
ется sort. Например, команда:

        who | sort

напечатает список зарегистрированных пользователей, упорядо-
ченный  в алфавитном порядке. Программный канал может состо-
ять более чем из двух команд, например, задание вида:





20

        ls | grep old | wc -l

может быть использовано для получения числа файлов из  теку-
щего справочника, имена которых содержат сочетание "old".




























































                                                          21




                    6. СООБЩЕНИЯ СИСТЕМЫ


   Некоторые команды при ошибках выдают диагностические  со-
общения.  Конкретная расшифровка сообщений приводится в опи-
сании команд.

   Для большинства вызовов системных  программ  предусмотрен
возврат  управления  по ошибке. Наличие ошибки указывается с
помощью специального значения возвращаемого параметра. Таким
значением  почти всегда является "-1". Кроме того, пользова-
телю доступен номер ошибки, представленный внешней  перемен-
ной  errno.  Переменная  errno не устанавливается в исходное
состояние при последующих вызовах, поэтому проверять ее сле-
дует   сразу   же   после   обнаружения   ошибки.   В  файле
/usr/include/errno.h определены имена макропеременных и, со-
отвествующие  им  номера ошибок. С помощью директивы препро-
цессора:

        #include <errno.h>

эти макропеременные становятся доступными программам,  напи-
санным на языке Си. Соотвествующие диагностические сообщения
могут быть получены с помощью программы perror. Список номе-
ров ошибок приводится ниже.

0  Error 0
     Не используется.

1 EPERM  Not owner
     Как правило, эта ошибка указывает на попытку  изменения
     содержимого  файла способом, который запрещен для всех,
     кроме владельца данного файла  или  супер-пользователя.
     Кроме  того,  это  значение возвращается в случае, если
     обычные пользователи пытаются выполнять какие-либо опе-
     рации, разрешенные только супер-пользователю.

2 ENOENT No such file or directory
     Эта ошибка возникает в случае,  если  указанного  файла
     (справочника) не существует.

3 ESRCH No such process
     Процесс, номер которого был указан в команде signal или
     ptrace, не существует или уже уничтожен.

4 EINTR Interrupted system call
     Во  время   выполнения   системного   вызова   поступил
     асинхронный  сигнал,  например,  сигнал  прерывания или
     сигнал quit, который был выбран пользователем  для  са-
     мостоятельной  обработки.  Если после обработки сигнала
     возобновляется выполнение прерванного процесса, внешне-
     му наблюдателю будет казаться, что прерванный системный
     вызов возвращает данное указание об ошибке.

5 EIO I/O error
     Во время выполнения команды read или  write  обнаружена
     ошибка  ввода-вывода  на физическом уровне. В некоторых
     случаях эта ошибка может появиться при выполнении вызо-
     ва, который следует за тем, в котором она действительно


22

     возникла.

6 ENXIO No such device or address
     Операция  ввода-вывода  с  использованием  специального
     файла  относится  к  несуществующему подтипу устройства
     или нарушает  ограничения,  установленные  для  данного
     устройства.  Кроме того, такая ошибка может возникнуть,
     если,  например,  на  накопителе  не  установлен  пакет
     дисков или бобина с магнитной лентой.

7 E2BIG Arg list to long
     Для команды exec указан список аргументов,  превышающий
     5120 байтов.

8 ENOEXEC Exec format error
     Получен  запрос  на  выполнение  в  качестве  программы
     файла, который несмотря на то, что для него установлены
     соответствующие разрешения на доступ, не начинается  со
     специального набора статуса защиты.

9 EBADF Bad file number
     Либо указанный дескриптор файла не соответствует ни од-
     ному из открытых файлов, либо запрос чтения, записи от-
     носится к файлу, который был открыт только  для  записи
     (чтения).

10 ECHILD No children
     Системный вызов wait относится к процессу,  который  не
     имеет существующих порожденных процессов или подпроцес-
     сов, завершения которых он не дождался.

11 EAGAIN No more processes
     Произошло переполнение системной таблицы процессов  или
     пользователю не разрешено создавать дополнительные про-
     цессы.

12 ENOMEM Not enough core
     При выполнении системного вызова exec или  break  прог-
     рамма  запрашивает  больше  основной  памяти, чем может
     быть предоставлено. Такое состояние не является времен-
     ным, поскольку максимальная емкость основной памяти яв-
     ляется одним из параметров системы.  Эта  ошибка  может
     также  возникнуть в случае, если для размещения сегмен-
     тов текста, данных и стека  требуется  слишком  большое
     число регистров сегмента.

13 EACCES Permission denied
     Попытка осуществить доступ к файлу способом,  запрещен-
     ным системой защиты.

14 EFAULT Bad address
     При попытке осуществить доступ к аргументам,  указанным
     в системном вызове, система получила отказ от аппарату-
     ры.

15 ENOTBLK Block device required
     Там, где должно быть указано блочное устройство, напри-
     мер, в запросе mount, указан обыкновенный файл.

16 EBUSY Mount device busy
     Попытка установить том на устройство, которое уже  заг-
     ружено,  или попытка снять том с устройства, на котором


                                                          23

     хранится справочник активных файлов, открытый файл, те-
     кущий   справочник,  установленный  файл  или  активный
     сегмент текста.

17 EEXIST File exist
     Существующий файл указан в неправильном контексте, нап-
     ример, в качестве второго аргумента вызова link.

18 EXDEV Cross-device link
     Попытка установить связь с файлом, размещенным на  дру-
     гом устройстве.

19 ENODEV No such device
     Попытка обращения к устройству с помощью  неправильного
     системного  вызова, например, попытка считывания данных
     с устройства, допускающего только запись.

20 ENOTDIR Not a directory
     Там, где должен быть указан справочник, указано  другое
     имя,  -  например, в полном имени файла или в аргументе
     вызова chdir.

21 EISDIR Is a directory
     Попытка осуществить запись в справочник.

22 EINVAL Invalid argument
     Указан неправильный аргумент:  снятие  неустановленного
     тома,  неизвестный  сигнал  в вызове signal, чтение или
     запись файла, для которого вызов lseek возвращает отри-
     цательный указатель. Устанавливается также при вычисле-
     нии математических функций.

23 ENFILE File table overflow
     Системная таблица открытых файлов переполнена и времен-
     но блокируется обработка новых вызовов open.

24 EMFILE Too many open files
     Обычная конфигурация  системы  допускает  не  более  20
     открытых файлов для каждого процесса.

25 ENOTTY No typewriter
     Файл, указанный в команде stty или gtty, не представля-
     ет терминал или какое-либо другое устройство, для кото-
     рого можно генерировать такие вызовы.

26 ETXTBSY Text file busy
     Попытка выполнить чисто процедурную программу,  которая
     в  данный  момент  времени открыта для записи (или чте-
     ния). Кроме того,  эта  ошибка  возникает  при  попытке
     открыть для записи чисто процедурную программу, которая
     в данный момент времени выполняется.

27 EFBIG File too large
     Размер файла превышает  максимально  допустимый  (около
     1.0E9 байтов).

28 ENOSPC No space left on device
     При осуществлении записи в обычный файл обнаружено, что
     на запоминающем устройстве нет свободного пространства.





24

29 ESPIPE Illegal seek
     Команда lseek относится к файлу, являющемуся конвейером
     сообщений  между  процессами.  Кроме  того,  эта ошибка
     может возникнуть при обращении к устройствам,  недопус-
     кающим операций установки.

30 EROFS Read-only file system
     Попытка модифицировать файл или справочник, размещенный
     на  устройстве,  для  которого  разрешено только чтение
     (защита определена при установке тома).

31 EMLINK Too many links
     Попытка установить более 32767 связей с файлом.

32 EPIPE Broken pipe
     Осуществление записи в файл, являющийся программным ка-
     налом,  для  которого нет считывающего процесса. Обычно
     эта ошибка приводит к генерированию сигнала; возврат по
     ошибке  происходит лишь в том случае, если сигнал игно-
     рируется.

33 EDOM Math argument
     Аргумент  функции,  входящий  в  пакет   математических
     подпрограмм  (3м), выходит за пределы области определе-
     ния функции.

34 ERANGE Result too large
     Значение  функции,  входящей  в  пакет   математических
     подпрограмм  (3м),  не может быть выражено при заданной
     точности машинного представления чисел.


































                                                          25

