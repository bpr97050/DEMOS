.ds HE 'КАК УСТАНАВЛИВАТЬ \*(RU ''страница %'
.hx
.t0
П О С Т А Н О В К А   \*(SU
.t1
.sp 3
.sh 1
Введение
.PS
Эти инструкции помогут вам прочитать
\*(RU  версии 2.10 версии с ленты и установить его на
вашей системе.
Если у вас работает какая-либо версия
\*(DM, отличная от UTIX,
обязательно прочтите этот вводный документ прежде, чем
что-либо делать.
Обратите особое внимание на раздел 5.3.

*\*(DM это название версии UNIX адаптированной на русские буквы и
отечественные типы ЭВМ.
.sh 1
Установка \*(RU для начала работы с ним.
.PS
Если вы уже имеете систему \*(RU,
переходите к чтению части 1.3.
.dn
Создание пользователей системы \*(DM, которые могут вызывать "\*(rN".
.PS
Первое, что вы должны сделать, это создать пользователя
"\*(rN" в вашей системе и войти в систему под этим именем.
Файлы, которые вы будете считывать с ленты должны
будут принадлежать
"\*(rN" - настоящему пользователю вашей системы.
\*(RU размещает файлы в системе после просмотра
файла /etc/passwd и поиска в нем пользователя "\*(rN".
\*(RU НЕ БУДЕТ работать
без существования такого пользователя.
.sh
Создание родительского каталога для \*(RU.
.PS
Родителький каталог для \*(RU в версии UTIX
как правило создается под именем
"/usr/\*(rN".
Этот каталог должен быть домашним (определенным в файле /etc/passwd)
для пользователя "\*(rN".
Для целей этого документа
родительский каталог будем обозначать "...".
.sh
Извлечение \*(RU с ленты.
.PS
Вы должны быть готовы считать ленту в вашей системе,
используя программу tar.
Вы должны находиться в домашнем каталоге для
\*(RU и быть пользователем \*(RU.
Печатайте команду:

	tar xvfp /dev/nrmt0

В настоящий момент система извлечена с ленты, и
лента может быть по желанию снята.
.sh
Программы, ориентированные на пользователя.
.PS
В каталоге .../bin находится набор команд.
Различные программы, которые являются командами
\*(RU
могут быть связаны ссылками с
/usr/bin.
Другие программы выполняются только другими программами
\*(RU и должны быть оставлены в .../bin.
Самой правильной политикой будет оставление всех программ в ../bin
и включение этого справочника в "PATH" всех пользователей \*(RU.
Для этого пользователи "sh" должны написать в своем стартовом файле
".profile" строку:

 PATH=$PATH:/usr/\*(rN/bin:

пользователи "csh" добавляют в файл ".cshrc" строку:

  set path=($path ~\*(rN/bin)


Очевидно, что каждая из программ должна иметь правильные
коды доступа.
Пример команды
"ls -l" приведен ниже.
Коды доступа ваших файлов должны быть такими же, как
в примере.

.nf
-rwx--x--x 1 \*(rN     . . .   copydb
-rws--x--x 1 \*(rN     . . .   creatdb
-rwxr-xr-x 1 \*(rN     . . .   demodb
-rws--x--x 1 \*(rN     . . .   destroydb
-rwx--x--x 1 \*(rN     . . .   equel
-rws--x--x 1 \*(rN     . . .   helpr
-rws--x--x 1 \*(rN     . . .   \*(rN
-rws--x--x 1 \*(rN     . . .   printr
-rws--x--x 1 \*(rN     . . .   purge
-rws--x--x 1 \*(rN     . . .   restore
.fi

.sh
Библиотека языка запросов EQUEL.
.PS
Библиотека языка запросов EQUEL.
должна быть помещена в
"/lib/libq.a"
или "/usr/lib/libq.a".
Библиотека требуется для компиляции
программ пользователей на EQUEL.
Для компиляции самой системы
\*(RU она не нужна.
Желательно, однако вовсе не обязательно,
чтобы владельцем библиотеки был
"\*(rN".
Для перемещения библиотеки выполните команду:

.nf
     cp .../bin/libq.a  /usr/lib/libq.a
.fi

Об использовании EQUEL и библиотеки EQUEL
см. "Справочное руководство по СУБД \*(RU".
Примеры программ на
EQUEL находятся в
".../doc/Examples/*.q".
.sh
Включение устройства-семафора в ядро.
.PS
ДАННЫЙ РАЗДЕЛ ПРИ ПОСТАНОВКЕ \*(RU В ОС UTIX МОЖНО ПРОПУСТИТЬ, ТАК КАК
В НЕЕ ДРАЙВЕР СЕМАФОРОВ \*(RU ВКЛЮЧЕН ПО УМОЛЧАНИЮ.
.PS
Если вы хотите использовать базу данных для
работы нескольких пользователей,
вы должны установить
\*(RU с включением устройства-семафора в ядро
системы.
Его необходимо добавить как драйвер устройства в
каталог /dev,
и изменить одну строку для завершения системного вызова.
Перед выполнением прочитайте документ
"Инструкции по постановке \*(RU с включением
устройства-семафора в системе \*(DM".
.sh 1
Основная информация об \*(RU.
.dn
Некоторые комментарии по-поводу каталогов \*(RU
.PS
Каталоги (в ...) необходимы для работы
системы с минимальными возможностями:

.nf
bin          объектные программы, выполняемые
	     \*(RU
files        файлы, используемые различными
	     частями \*(RU
data/base/   базы данных, созданные
	     пользователями
demo         используется командой "demodb"
.fi

Создаются также и различные дополнительные каталоги.
Если недостаток свободного места является проблемой в
вашей системе, вы можете захотеть удалить некоторые из
всех этих материалов.
Если вы действительно нуждаетесь в этом,
уничтожайте файлы, но будьте уверены в том,
что каталоги будут сохранены.
Дополнительные каталоги это:

.nf
doc      документация
lib      библиотека объектных файлов
source   исходные тексты системы
.fi
В файле .../source/HISTORY собрана история изменений в системе.
.sh
Поддержка разделяемых областей инструкций и данных.
.PS
На PDP-11,
вы ДОЛЖНЫ иметь разделяемые области данных и инструкций,
а также процессор плавающей точки, чтобы запусить в работу
\*(RU/2.
\*(RU/2 НЕ БУДЕТ работать на 11/40 или на подобных машинах
под седьмой версией \*(DM.
.sh 1
Что надо иметь для начала работы с \*(RU.
.dn
Файлы пользовалей
.PS
По порядку работы с \*(RU,
пользователь должен быть введен в регистрационный файл
"users".
Регистрационный файл содержит информацию
относительно статуса и разрешений для каждого пользователя.
Этот файл похож на файл /etc/passwd,
и включает имя пользователя, идентификатор пользователя
(используется внутри \*(RU для идентификации
пользователя), идентификатор пользователя в \*(DM,
некоторые биты статуса и некоторые другие поля.
Подробнее об этом написано в документе о регистрации
пользователей (файлы).

Регистрационный файл инициализируется при запуске
программы "usersetup".
Эта программа включает всех пользователей
системы (из файла /etc/passwd), в пользователи
\*(RU.
Коды пользователей формируются последовательно начиная
с "aa".
Поле статуса инициализируется 000000
для всех обычных пользоватлей и
177777 для пользоватля "\*(rN".

Для установки регистрационного файла в /usr/\*(rN выполните:

	.../bin/usersetup

Однажды установленный регистрационный файл может быть отредактирован
редактором, чтобы проделать следующее:

.in +8
- удалить тех пользователей, которым не разрешено использовать \*(RU.

- оградить пользователей от использования другими пользователями их
индивидуальной базы данных

- установить остальные биты статуса, соответствущие пользователю.
.in -8

Как только добавляется или удаляется
пользователь \*(DM, должен быть соответствующим образом
изменен регистрационный файл.
Программа "usersetup" должна выполняться только один раз.
При повторном запуске этой програмы выдается соответствующая
диагностика.
.sh
Созданиее учебной базы данных.
.PS
Команда "demodb" может быть использовани
для создания учебной базы данных, которая приведена в
качестве примера в рукодстве
(которое размещено в
".../doc/LP/tutorial.lp").
Чтобы выполнить эту команду вы должны быть
включены в регистрационный файл и иметь разрешение
на создание базы данных.
Для создания учебной базы данных
и с именем "demo"
печатайте команду:

.nf
	demodb demo
.fi

Чтобы использовать \*(RU
с этой базой данных
надо просто напечатать:

.nf
	\*(rN demo
.fi

и вы сможете повторить сеанс работы с базой данных,
описанный в "Введении в \*(RU", или формулировать свои собственные
запросы.

Чтобы создать свою собственную копию образца базы данных,
используйте какое-нибудь уникальное имя.

.nf
	demodb mydemo
.fi

.sh
Создание других баз данных.
.PS
Без сомнения, вы захотите создать другие базы данных для собственного
использования.
Для этого служит команда "creatdb".
Использовать ее вы можете только при условии, что вы зарегистрированы
в файле пользователей \*(RU.
.sh
Управление одновременным доступом к базам данных.
.PS
\*(RU может работать или полностью поддерживая одновременный доступ к
базам данных, или не поддерживая его вовсе.
\*(RU блокирует часть базы данных, используя особый специальный файл
(устройство) системы \*(DM
"/dev/lock" - устройство-семафор.
Сначала вы можете использовать \*(RU без этого устройства.
Если же вы хотите включить управление одновременным доступом,
(если с одной и той же базой данных одновременно будут работать больше
одного человека,
вы ДОЛЖНЫ включить его),
то распечатайте инструкцию по включению устройства-семафора
в систему

.sh 1
Советы и пожелания.
.PS
.dn
Проблемы защиты в \*(Dm.
.PS
Если вы неожиданно встретитесь с проблемами содания каталогов
или чтения файлов с ленты, проверьте статус доступа охватывающего
родительского каталога, чтобы открыть
разрешение на запись в каталог
для создания новых файлов.

Опишем моды, присущие, как правило каждому каталогу.
Все каталоги принадлежат \*(RU, иключая
индивидуальные базы данных.
(Моды в скобках предсталяют моды, которые используются тогда,
когда вы хотите максимально ограничить доступ.)
.nf

bin                            755
data                           700
data/base                      777
demo                           755
doc                            755
files                          755
lib                            755
source и все его подкаталоги   755 (700)
ост.базы данных                777
(символически принадлежащие адм.базы данных)
.fi

Программы в  .../bin могут иметь следующие моды доступа:

.nf
-rwsr----- 1 \*(rN     . . .   ksort
-rwxr-x--x 1 \*(rN     . . .   monitor
-rwsr----- 1 \*(rN     . . .   vax\*(rN
.fi

Вам может понадобиться стать
супер-пользователем, чтобы добавить файл
в "/usr/bin".
.sh
Создание некоторых программ со "Sticky".
.PS
Программа сортировки отношений в \*(RU
довольно часто выполнется во время его работы.
Ее выполнение может быть более эффективно
с применением "sticky".
Если у вас есть достаточно места в
области своппинга,
полезно запустить программу с установленным "sticky".
Это может быть сделано установкой следующей
моды программы
в 5700.

	chmod 5740 .../bin/ksort

.sh
Терминалы только с большими буквами
.PS
Вспомните, когда вы использовали терминалы только с большими буквами,
вы должны были использовать двойную обратную черту "\\\\"
во всех командах, чтобы интерпретировать  ее как символ "\\".
Например для терминала с большими и маленькми буквами,
вы бы напечатали:

.nf
	help parts
	\\g
.fi

а для терминала только с большими буквами вы напечатате:

.nf
	HELP PARTS
	\\\\G
.fi

.sh 1
Исходный текст и перегенерация системы:
.dn
Войдите, как пользователь "\*(rN".
.PS
Когда производятся какие-либо системные работы,
надо всегда быть зарегистрированным как "\*(rN".
.sh
Перекомпиляция.
.PS
Все исходные тексты системы располагаются в ".../source"
и его подкаталогах. Каждый подкаталог называется по имени
функциональной компонент или подкомпоненты системы.
Все "Makefile" для перегенерации различных часетй системы из исходных
текстов размещаются в соответствующих им каталогах.
Для перегенерации отдельных модулей (например parser)
скажите:

.nf
	chdir .../source/parser
	make
.fi

Выполняемая система перекомпилируется и
размещается в /usr/bin
с использованием команды:

.nf
	chdir .../source/conf
	make allinstall sysinstall
.fi

При перекомпиляции системы в первое время решительно
советуем вам каким-либо способом сохранять вывод.

Библиотеки объектных файлов размещены в  .../lib.

Вы можете обнаружить, что ваш Си-компилятор
не может оттранслировать \*(RU.
Если так произрошло, вы должны увеличить размер
таблицы символов в cpp.
.sh
Трассировка работы \*(RU
.PS
Для трассировки \*(RU используются флаги трассировка.
Коды букв для этих флагов следующие:

.nf
.in +5
A       Методы доступа
M       Терминальный монитор
P       Синтаксический анаоизатор
Q       Модификатор запросов
D       Декомпозиция
O       Процессор одной перменной в запросе
Z       Утилиты базы данных
E       Equel интерфейс языка запросов
S       Сканнер
T       Standalone Routines

.sh 1
Документация.
.PS
Все документы в сформатированном виде собраны в справочнике ".../doc/LP".
Список документов приведен в файле ".../doc/READ_ME".
