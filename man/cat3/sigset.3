
SIGSET(3)       ДЕМОС. Библиотечные функции        SIGSET(3)


ИИММЯЯ
       ssiiggsseett,  ssiigghhoolldd,  ssiiggiiggnnoorree,  ssiiggrreellssee,  ssiiggsseettmmaasskk,
       ssiiggbblloocckk, ssiiggppaauussee - обработка сигналов.

ФФООРРММААТТ
       #iinncclluuddee <_s_i_g_n_a_l._h>

       int (*ssiiggsseett) (_s_i_g, _h_a_n_d_l_e_r)
       int _s_i_g;
       int (*_h_a_n_d_l_e_r) ();

       ssiigghhoolldd (_s_i_g)
       int _s_i_g;

       ssiiggrreellssee (_s_i_g)
       int _s_i_g;

       ssiiggiiggnnoorree (_s_i_g)
       int _s_i_g;

       long ssiiggsseettmmaasskk (_m_a_s_k)
       long _m_a_s_k;

       long ssiiggbblloocckk (_m_a_s_k)
       long _m_a_s_k;

       ssiiggppaauussee (_m_a_s_k)
       long _m_a_s_k;

       int _h_a_n_d_l_e_r (_s_i_g)
       int _s_i_g;

ООППИИССААННИИЕЕ
       Этот набор функций входит в состав стандартной библи-
       отеки и предназначен для управления обработкой сигна-
       лов.

       Фунция ssiiggsseett  подключает  подпрограмму  _h_a_n_d_l_e_r  для
       обработки  сигнала _s_i_g.  Установленная реакция сохра-
       няется и  не  требует  повторного  определения  после
       обращения  к _h_a_n_d_l_e_r и остальным функциям. После пос-
       тупления сигнала  устанавливается  режим  SSIIGG__HHOOLLDD  и
       вызывается  подпрограмма  обработки  _h_a_n_d_l_e_r.   После
       обработки  сигнала  опять  подключается  подпрограмма
       _h_a_n_d_l_e_r, и если к этому моменту накопились отложенные
       сигналы, все повторяется сначала. Если  для  возврата
       из   подпрограммы   обработки   используется  функция
       lloonnggjjmmpp (см.  _s_e_t_j_m_p(3)), необходимо  восстанавливать
       реакцию на сигнал с помощью функции ssiiggrreellssee ..

       Функции ssiigghhoolldd и ssiiggiiggnnoorree могут использоваться  для
       защиты  от  сигналов на критичных участках программы.
       Функция ssiiggrreellssee позволяет  восстанавливать  реакцию,
       определенную функцией ssiiggsseett, после вызовов ssiigghhoolldd и
       ssiiggiiggnnoorree.

       Функция ssiigghhoolldd позволяет отложить обработку  указан-
       ного  сигнала  (режим  SSIIGG__HHOOLLDD)  до  новой установки


                            -1-                        ДЕМОС


SIGSET(3)       ДЕМОС. Библиотечные функции        SIGSET(3)


       реакции с помощью ssiiggsseett, ssiiggnnaall, ssiiggiiggnnoorree,  или  до
       выполнения функции ssiiggrreellssee.

       Функция ssiiggiiggnnoorree сбрасывает все отложенные  к  этому
       моменту сигналы (устанавливает режим SSIIGG__IIGGNN).

       Функция ssiiggsseettmmaasskk устанавливает и отменяет  блокиро-
       вание сигналов (режим SSIIGG__HHOOLLDD) в соответствие с ука-
       занной маской _m_a_s_k.  При этом  i-й  бит  маски  соот-
       ветствует  сигналу с i-м номером.  Бит можно получить
       при помощи конструкции вида (1L << ((_s_i_g) - 1).   При
       бите, равном 1, происходит блокирование сигнала, если
       сигнал не был блокирован до этого. Если бит равен  0,
       сигнал  разблокируется, если был блокирован.  Функция
       возвращает старое значение  маски  блокирования  (при
       запуске процесса она равна 0L).  Нельзя заблокировать
       сигналы SSIIGGSSTTOOPP, SSIIGGCCOONNTT, SSIIGGKKIILLLL.

       Функция ssiiggbblloocckk дополнительно блокирует (добавляет к
       старым)  сигналы,  указанные в маске _m_a_s_k.  Возвраща-
       ется старое значение маски блокирования.

       Функция ssiiggppaauussee устанавливает блокирование и разбло-
       кирование  сигналов в соответствии с маской _m_a_s_k (так
       же, как и ssiiggsseettmmaasskk) и переводит процесс в состояние
       ожидания   сигнала   (выполняется   системный   вызов
       _p_a_u_s_e(2)).  После прихода  сигнала  восстанавливается
       старое значение маски блокирования.

ДДООППООЛЛННИИТТЕЕЛЛЬЬННЫЫЕЕ ССССЫЫЛЛККИИ
       _s_i_g_n_a_l(2), _i_n_t_r_o(3), _t_t_y(4)

ЗЗААММЕЕЧЧААННИИЯЯ
       Все функции хранят служебную информации в статической
       памяти,  поэтому  после  порождения нового процесса с
       помощью _v_f_o_r_k(2) до смены  его  программы  с  помощью
       _e_x_e_c_v_e(2) необходимо использовать вместо функции ssiigg--
       sseett системный вызов ssiiggssyyss.

       Так как ssiiggsseettmmaasskk и ssiiggppaauussee функции, а не системные
       вызовы,  корректно разблокируется только последний из
       блокированных сигналов, по остальным разблокированиям
       сбрасываются  все  накопленные к данному моменту сиг-
       налы.
















                            -2-                        ДЕМОС

