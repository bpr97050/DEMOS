#print
Займемся рекурсивными функциями !!!!!!!
Напишите подпрограмму
    power(x,n)
которая возводит x в степень n по следующему
алгоритму:
 1. если n - 0, то возвращаем 1.
 2. если n - нечетно, то возвращаем x*power(x,n-1).
 3. если n - четно, то возвращаем квадрат функции  power(x,n/2).

Положим, что x и n целые числа, n>=0.
Если n отрицательное число, то возвращаем в качестве ответа 0.
Поместите Вашу программу в файл "power.c".
И, как обычно,
скомпилируйте, проверьте, прогоните, наберите .....
#once #create tzaqc.c
main()
{
if (power(-1,-1) != 0) return(1);
if (power(-3,2) != 9) return(1);
if (power(2,12) != 4096) return(1);
if (power(3,5) !=  243) return(1);
if (power(-5, 5) != -3125) return(1);
if (power(7,3) != 343) return(1);
if (power(7,4) != 2401) return(1);
if (power(3,7) != 2187) return(1);
if (power(2,10) != 1024) return(1);
return(0);
}
#user
cc tzaqc.c power.o
a.out
#succeed
/* возможное решение */
power(x, n)
{
	int k;

	if (n < 0)
		return(0);
	if (n == 0)
		return(1);
	if (n%2 == 1)
		return(x * power(x, n-1));
	k = power(x, n/2);
	return(k*k);
}
#log
#next
40.1a 10
