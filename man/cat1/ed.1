
ED(1)                  ДЕМОС. Команды                  ED(1)


ИИММЯЯ
       eedd - строчный редактор текстов.

ФФООРРММААТТ
       eedd [--] [--xx] [_и_м_я]

ООППИИССААННИИЕЕ
       Для систем, совместимых с ОС Unix, eedd является  стан-
       дартным редактором текстов.  При интерактивной работе
       он уступает по удобству экранным редакторам rreedd(1)  и
       eeddaa(1),  но может работать с любыми терминалами (нап-
       ример, с телетайпами).

       Редактор eedd работает с копией  редактируемого  файла.
       Сделанные  в  копии  изменения  не влияют на исходный
       файл до тех пор,  пока  не  будет  выдана  команда  ww
       (запись).  Копия редактируемого текста размещается во
       временном файле, называемом _б_у_ф_е_р_о_м.

       Если задан параметр _и_м_я, указанный файл считывается в
       буфер редактора для последующей обработки.  Если ука-
       зан ключ --xx, перед чтением файла выполняется  команда
       xx  для  работы  с  зашифрованными  файлами.  Ключ '--'
       подавляет печать сообщений и используется  при  вводе
       инструкций редактирования из командного файла.

       Команды  редактора  eedd  имеют  простую  и  регулярную
       структуру:  0  или  несколько _у_к_а_з_а_т_е_л_е_й, за которыми
       следует односимвольное _и_м_я _к_о_м_а_н_д_ы и, возможно, пара-
       метры.  _У_к_а_з_а_т_е_л_и определяют одну или несколько строк
       в буфере.  Пропущенные адреса дополняются по  умолча-
       нию.

       Во время работы eedd может находиться либо в  командном
       режиме  (когда  вводимые  строки  рассматриваются как
       инструкции редактирования), либо в режиме ввода (т.е.
       набираемая  информация просто переписывается в файл).
       В  начале  сеанса  редактор  находится  в   командном
       режиме.   Если  был  переход  в режим ввода, редактор
       воспринимает только одну команду - выход  из  данного
       режима (точка в первой позиции строки).

       В редакторе eedd в ограниченном виде используется поня-
       тие   _р_е_г_у_л_я_р_н_о_г_о  _в_ы_р_а_ж_е_н_и_я.   Регулярное  выражение
       определяет множество  строк  символов.  Говорят,  что
       член  этого множества соответствует этому регулярному
       выражению. В приведенном ниже определении  регулярных
       выражений слово _с_и_м_в_о_л означает любой символ, за иск-
       лючением символа новой строки.

       1)   Любой символ, за исключением специальных  симво-
            лов,  соответствует  самому  себе.  Специальными
            символами являются: _р_а_з_д_е_л_и_т_е_л_ь _р_е_г_у_л_я_р_н_ы_х _в_ы_р_а_-
            _ж_е_н_и_й,  знаки '\\', '[[', '..' и, иногда, '^^', '**',
            '$$'.

       2)   '.' соответствует одному любому  символу  (кроме
            перевода строки).


                            -1-                     ДЕМОС/PV


ED(1)                  ДЕМОС. Команды                  ED(1)


       3)   Символ '\\', за которым следует любой символ,  за
            исключением  цифры  или круглых скобок (()), соот-
            ветствует этому символу.

       4)   Непустая  строка  _s,  заключенная  в  квадратные
            скобки ([[_s]] или [[^^_s]]), соответствует любому сим-
            волу, входящему (или не входящему) в  строку  _s.
            Внутри строки _s символ '\\' не имеет специального
            значения,  а  ']]'  может  появляться  только   в
            качестве  первой буквы. Подстрока _a--_b, где _a и _b
            расположены в возрастающем порядке  относительно
            русского  или  латинского  алфавитов  (для спец.
            символов - относительно кода КОИ-8),  обозначает
            диапазон символов от _a до _b включительно.

       5)   Регулярное выражение вида  1) - 4),  за  которым
            следует  знак  '**', соответствует последователь-
            ности из 0 или более соответствий этому регуляр-
            ному выражению.

       6)   Регулярное выражение _x, находящееся между  соот-
            ветствует тому же, что и _x.

       7)   Знак '\\' с последующей  цифрой  _n  соответствует
            той же строке, что и находящееся в скобках регу-
            лярное выражение, находящееся в _n-ой паре '\\((' -
            '\\))'.

       8)   Регулярное выражение _x вида 1) - 8), за  которым
            следует  регулярное  выражение  _y  вида 1) - 7),
            соответствует строке для _x, за  которой  следует
            строка для _y, причем строка для _x выбирается как
            можно более длинной, однако  допускающей  сопос-
            тавление остатка с _y.

       9)   Регулярное  выражение  вида  1) - 8),   которому
            предшествует  '^^'  (или за которым следует '$$'),
            должно сопоставляться с подстрокой, начинающейся
            в  левом  (или  заканчивающимися в правом) конце
            всей строки.

       10)  Регулярное выражение вида 1) - 9) выбирает самую
            длинную  и  крайнюю слева подходящую подстроку в
            строке.

       11)  Пустое регулярное выражение заменяется последним
            ранее использованным регулярным выражением.

       Регулярные выражения используются в адресах для опре-
       деления  строк, а также в одной команде (ss) для опре-
       деления части строки, которую  нужно  заменить.  Если
       требуется  использовать один из метасимволов регуляр-
       ных выражений в качестве обычного символа, этому сим-
       волу должен предшествовать символ '\\'.  Это относится
       как  к  символам,  связывающим  регулярные  выражения
       (часто используется '//'), так и к самому символу '\\'.




                            -2-                     ДЕМОС/PV


ED(1)                  ДЕМОС. Команды                  ED(1)


       Для понимания системы адресации в редакторе eedd  необ-
       ходимо представлять себе, что в каждый момент времени
       существует _т_е_к_у_щ_а_я _с_т_р_о_к_а.   Вообще  говоря,  текущая
       строка  представляет  собой последнюю строку, обрабо-
       танную некоторой командой, однако точное  влияние  на
       положение  текущей  строки рассматривается в описании
       команд. Адреса строятся следующим образом:

       1)   Символ '..' адресует текущую строку.

       2)   Символ '$$' адресует последнюю строку буфера.

       3)   Десятичное число _n адресует _n-ую строку буфера.

       4)   ''_x указывает строку, помеченную именем _x,  кото-
            рое   должно  представлять  собой  малую  букву.
            Строки помечаются с помощью команды  kk,  которая
            описана ниже.

       5)   Регулярное выражение, заключенное в символы '//',
            указывает  строку,  которая  определяется  путем
            поиска  вперед  от  текущей  строки  до   первой
            строки,  содержащей последовательность символов,
            соответствующую данному  регулярному  выражению.
            При  необходимости после достижения конца буфера
            поиск продолжается с его начала.

       6)   Регулярное выражение, заключенное в вопроситель-
            ные  знаки '??', адресует строку, которая опреде-
            ляется путем поиска назад от текущей  строки  до
            первой   строки,  содержащей  последовательность
            символов,  соответствующую  данному  регулярному
            выражению.  При  необходимости (после достижения
            начала буфера) поиск продолжается с его конца.

       7)   Адрес, за которым следует знак '++' или знак  '--'
            и  десятичное  число, определяет этот адрес плюс
            (или минус)  указанное  количество  строк.  Знак
            плюс может быть опущен.

       8)   Если адрес начинается  со  знака  '++'  или  '--',
            выполняется  сложение или вычитание по отношению
            к текущей строке; например, --5 означает ..--5.

       9)   Если адрес заканчивается знаком '++' или  '--',  к
            нему добавляется (или вычитается) 1. Как следст-
            вие этого правила и правила 8, адрес  '--'  отно-
            сится  к  строке,  которая  предшествует текущей
            строке. Более того, знаки  '++'  и  '--'  в  конце
            обладают эффектом накопления, так что '----' отно-
            сится к текущей строке минус 2.

       10)  Символ '^^' в адресах эквивалентен символу '--'.

       Команды могут  требовать  ни  одного,  один  или  два
       адреса.  Команды, в которых не требуется адрес, расс-
       матривают наличие адреса как ошибку. Если в командах,
       где   требуется   один   или   два   адреса,  указано


                            -3-                     ДЕМОС/PV


ED(1)                  ДЕМОС. Команды                  ED(1)


       недостаточное количество адресов,  принимаются  стан-
       дартные  адреса.  Если в команде указано больше адре-
       сов, чем требуется, используются последние  один  или
       два адреса (в зависимости от того, сколько нужно).

       Обычно адреса отделяются  друг  от  друга  с  помощью
       запятой  ',,'.   Они  могут разделяться также точкой с
       запятой ';;'.  В этом случае текущая строка '..'  уста-
       навливается  на первый адрес, перед тем как интерпре-
       тируется  следующий.  Эта  особенность   может   быть
       использована  при  определении  начальной  строки для
       прямого и обратного поиска ('//', '??').  Второй  адрес
       любой  двухадресной  последовательности  должен соот-
       ветствовать строке,  следующей  за  строкой,  которая
       соответствует первому адресу.

       В приведенном ниже списке команд редактора  eedd  стан-
       дартные  адреса  указаны в круглых скобках. Скобки не
       являются частью адреса, а используются лишь для того,
       чтобы  показать, что данные адреса являются стандарт-
       ными.

       Как отмечалось ранее, появление в одной  строке  нес-
       кольких  команд  в  общем  случае  является  ошибкой.
       Однако, к большинству  команд  могут  быть  добавлены
       команды  pp или ll, которые вызывают распечатку текущей
       строки в одном из двух форматов,  описанных  ниже.  К
       командам  может  также добавляться команда nn, которая
       вызывает печать номера строки в выводе  команды.  Эти
       суффиксы могут объединяться в любом порядке.

       (.)aa
       <_т_е_к_с_т>
       ..
              Команда дозаписи - считывает указанный текст и
              добавляет  его  после строки с указанным адре-
              сом.   '..'  остается  в  последней   введенной
              строке, если она имеется, в противном случае -
              в адресуемой строке.  В этой команде  допуска-
              ется  адрес  (номер  строки) 0, при этом текст
              помещается в начало буфера.

       (.,.)cc
       <_т_е_к_с_т>
       ..
              Команда  замены  удаляет  адресуемые   строки,
              затем  считывает вводимый текст, который заме-
              няет эти строки.   '..'  остается  в  последней
              введеной  строке;  если  таковых  не было, она
              остается в строке, предшествовавшей  удаленным
              строкам.

       (...)dd Команда удаления удаляет адресуемые строки  из
              буфера.   Текущей  становится строка, первона-
              чально находившаяся после последней  удаленной
              строки;  если удаленные строки располагались в
              конце, текущей строкой становится  новая  пос-
              ледняя строка.


                            -4-                     ДЕМОС/PV


ED(1)                  ДЕМОС. Команды                  ED(1)


       ee _и_м_я__ф_а_й_л_а
              Команда редактирования вызывает удаление всего
              содержимого  буфера и последующее считывание в
              него файла с указанным именем.  '..' устанавли-
              вается на последней строке буфера.  Печатается
              количество  считанных   символов.    _И_м_я__ф_а_й_л_а
              запоминается  для  возможного  использования в
              качестве стандартного имени файла в  последую-
              щих командах rr или ww.  Если _и_м_я__ф_а_й_л_а отсутст-
              вует, используется запомненное имя.

       EE _и_м_я__ф_а_й_л_а
              Эта команда выполняет те же  действия,  что  и
              команда  ee,  за исключением того, что не выда-
              ется  диагностических  сообщений,  если  после
              последнего  изменения  буфера  не  была выдана
              команда ww.

       ff _и_м_я__ф_а_й_л_а
              Команда печати имени файла распечатывает теку-
              щее  запомненное  имя  файла. Если указывается
              _и_м_я__ф_а_й_л_а, текущее запомненное имя файла заме-
              няется на _и_м_я__ф_а_й_л_а.

       (1,$)gg//_р_е_г_у_л_я_р_н_о_е__в_ы_р_а_ж_е_н_и_е//_с_п_и_с_о_к__к_о_м_а_н_д
              В этой команде на первом шаге  помечаются  все
              строки,  которые соответствуют заданному регу-
              лярному  выражению.  После  этого  для  каждой
              такой   строки   выполняется  заданный  список
              команд, причем '..' первоначально  устанавлива-
              ется в этой строке. Одна команда или первая из
              нескольких  команд  располагается  в  той   же
              строке,  что  и команда gg.  Все строки списка,
              состоящие из нескольких строк, должны заканчи-
              ваться символом '\\', за исключением последней.
              Разрешается употребление команд aa, ii, cc и свя-
              занного  с  ними ввода; '..', завершающая режим
              ввода, может быть опущена, если она  находится
              в  последней строке списка команд. Команды gg и
              vv в списке команд не допускаются.

       (.)ii
       <_т_е_к_с_т>
       ..
              Эта команда  вставляет  заданный  текст  перед
              адресуемой  строкой.  '..' остается в последней
              вводимой строке или, если  ее  нет,  в  строке
              перед  адресуемой  строкой. Эта строка отлича-
              ется от команды aa только местом, куда  помеща-
              ется текст.

       (.,.+1)jj
              Эта строка объединяет адресуемые строки в одну
              строку;  промежуточные  символы  новой  строки
              просто исчезают.  '..' остается в  результирую-
              щей строке.

       (.)kk_x  Команда  маркирования  присваивает  адресуемой


                            -5-                     ДЕМОС/PV


ED(1)                  ДЕМОС. Команды                  ED(1)


              строке  имя  _х,  которое  должно  представлять
              собой малую букву.  Впоследствии данная строка
              может адресоваться с помощью формы адреса ''_х.

       (.,.)ll Эта команда  распечатывает  адресуемые  строки
              подробным образом: неграфические символы печа-
              таются в виде двух восьмеричных цифр, а  длин-
              ные строки переносятся. Команда ll может распо-
              лагаться в одной и той же строке  после  любой
              не связанной с вводом-выводом команды.

       (.,.)mm_a
              Команда пересылки перемещает адресуемые строки
              и  помещает  их  после  строки,  адресуемой  с
              помощью _a.  Последняя  из  перемещенных  строк
              становится текущей строкой.

       (.,.)nn Команда  нумерации  распечатывает   адресуемые
              строки  вместе  с  номерами  строк  и символом
              табуляции слева.

       (.,.)pp Эта команда распечатывает  адресуемые  строки.
              '..' остается в последней распечатанной строке.
              Команда pp может располагаться в одной и той же
              строке  после  любой  не  связанной  с вводом-
              выводом команды.

       (.,.)PP Эта команда является синонимом команды pp.

       qq      Команда выхода вызывает выход из редактора eedd.
              Автоматическая запись в файл не производится.

       QQ      Эта команда аналогична команде qq, за  исключе-
              нием  того,  что  не  выдается диагностических
              сообщений,  если  после  последнего  изменения
              буфера не была выдана команда ww.

       ($)rr _и_м_я__ф_а_й_л_а
              Команда  чтения  считывает  указанный  файл  и
              помещает  результат  после  адресуемой строки.
              Если имя файла не указано, используется запом-
              ненное  имя  файла,  если таковое имеется (см.
              команды ll и ff).  Имя файла запоминается,  если
              уже  не  было  запомненного  имени  файла. Для
              команды rr допускается адрес (номер строки)  0,
              который  приводит к тому, что файл считывается
              в  начало  буфера.  Если   считывание   прошло
              успешно,  печатается количество считанных сим-
              волов.  '..' остается на последней считанной из
              файла строке.

       (.,.)ss//_р_е_г_у_л_я_р_н_о_е__в_ы_р_а_ж_е_н_и_е//_з_а_м_е_н_а//    или
       (.,.)ss//_р_е_г_у_л_я_р_н_о_е__в_ы_р_а_ж_е_н_и_е//_з_а_м_е_н_а//gg
              Команда подстановки просматривает каждую адре-
              суемую  строку  на предмет соответствия задан-
              ному  регулярному   выражению.    Если   после
              команды указан индикатор глобального замещения
              gg,  в  каждой  строке,  в  которой  обнаружено


                            -6-                     ДЕМОС/PV


ED(1)                  ДЕМОС. Команды                  ED(1)


              соответствие,  все  соответствующие последова-
              тельности символов замещаются указанной  _з_а_м_е_-
              _н_о_й.   Если  индикатор  глобального  замещения
              отсутствует, заменяется  только  первая  соот-
              ветствующая  последовательность символов. Если
              подстановка не выполняется ни в одной из адре-
              суемых  строк, это является ошибкой.  Для раз-
              деления регулярного выражения и замены  вместо
              '//' может использоваться любой символ пунктуа-
              ции.  '..' остается  в  последней  строке,  где
              была выполнена подстановка. Символ '&&', встре-
              чающийся в замене, заменяется  строкой  симво-
              лов,  соответствующей  регулярному  выражению.
              Специальное значение символа '&&'  в  указанном
              контексте может быть отменено посредством ука-
              зания перед ним '\\'.  Символы '\\_n',  где  _n  -
              цифра,  замещаются текстом, соответствующим _n-
              ому регулярному выражению, заключенному  между
              Если имеются вложенные подвыражения в скобках,
              _n определяется путем подсчета случаев употреб-
              ления  посредством  подстановки в них символов
              новой строки.  Символы новой строки  в  строке
              замены должны быть выделены посредством указа-
              ния перед ними символа '\\'.  Один или два зак-
              лючительных  разделителя  могут  быть опущены,
              подразумевая  суффикс  pp.   Специальная  форма
              команды  ss без последующих разделителей повто-
              ряет последнюю команду подстановки для адресу-
              емых  строк.  После  ss могут следовать буквы rr
              (использовать последнее регулярное выражение в
              левой стороне вместо последней команды подста-
              новки в левой стороне), pp (дополняет установку
              суффикса  pp  для  предыдущей  установки)  и  gg
              (дополняет установку суффикса gg).   Эти  буквы
              могут объединяться в любом порядке.

       (.,.)tt_a
              Эта команда работает аналогично команде mm,  за
              исключением  того,  что копия адресуемых строк
              помещается после адреса _a (который может  быть
              0).  '..' остается в последней строке копии.

       (.,.)uu Команда отмены восстанавливает буфер,  возвра-
              щая  его  в  состояние,  которое он имел перед
              последней командой модификации буфера. Положе-
              ние  текущей  строки  также восстанавливается.
              Командами, модифицирующими буфер, являются  aa,
              cc,  dd, gg, ii, kk и vv.  При отмене gg и vv рассмат-
              риваются  как  одиночные  команды  модификации
              буфера.  Команда  отмены является инверсной по
              отношению к самой себе. Когда редактору eedd  не
              хватает  памяти,  полное  аннулирование невоз-
              можно, и команда uu может  аннулировать  только
              влияние   последней   подстановки   в  текущей
              строке.   Такое   ограниченное   аннулирование
              относится  также  и  к командным файлам редак-
              тора, когда eedd вызывается с ключом '--'.



                            -7-                     ДЕМОС/PV


ED(1)                  ДЕМОС. Команды                  ED(1)


       (1,$)vv//_р_е_г_у_л_я_р_н_о_е__в_ы_р_а_ж_е_н_и_е//_с_п_и_с_о_к__к_о_м_а_н_д
              Эта команда аналогична команде gg, за  исключе-
              нием  того,  что список команд выполняется при
              начальной установке '..' на  каждую  строку  из
              диапазона  адресов  кроме  тех,  которые соот-
              ветствуют регулярному выражению.

       (1,$)ww _и_м_я__ф_а_й_л_а
              Команда записи записывает адресуемые строки  в
              указанный  файл.  Если  файл не существует, он
              создается. Имя файла запоминается, если еще не
              было  запомненного  имени.  Если  имя файла не
              задается, используется запомненное имя  файла,
              если оно имеется (см. команды ее и ff).  Положе-
              ние '..' не  изменяется.  Если  данная  команда
              выполнилась   успешно,  печатается  количество
              записанных символов.

       (1,$)WW _и_м_я__ф_а_й_л_а
              Эта команда аналогична команде ww, за  исключе-
              нием того, что адресуемые строки добавляются к
              файлу.

       (1,$)WWQQ _и_м_я__ф_а_й_л_а
              Эта команда аналогична команде ww, за  исключе-
              нием  того,  что  затем выполняется команда qq,
              осуществляющая выход из редактора после записи
              файла.

       xx      Из стандартного ввода запрашивается  строка  с
              ключом.   Впоследствии  команды rr, ee и ww будут
              зашифровывать и расшифровывать текст с помощью
              алгоритма  ccrryypptt,  используя этот ключ. Пустой
              ключ отменяет режим шифрации.

       (.+1)zz
       (.+1)zz_n
              Эта команда используется для просмотра буфера,
              начиная  с исходной строки. Распечатывается 22
              (или _n, если указано) строки. Последняя  напе-
              чатанная  строка  становится  текущей строкой.
              Значение _n запоминается, т.е.  оно  становится
              стандартным для последующих команд zz.

       ($)==   Распечатывается номер  строки  для  адресуемой
              строки.  Эта команда не меняет положения '..'.

       !<_к_о_м_а_н_д_а__я_з_ы_к_а__S_h_e_l_l>
              Часть  строки  после  '!!'  передается  sshh  для
              выполнения  в  качестве команды. Положение '..'
              не меняется.

       (.+1,.+1) <_п_е_р_е_в_о_д _с_т_р_о_к_и>
              Одиночный адрес в строке  вызывает  распечатку
              адресуемой  строки. Пустая строка эквивалентна
              команде ..++11pp.   Это  полезно  для  прохода  по
              тексту. Если указывается два адреса, не разде-
              ляемые   точкой   с   запятой,   редактор   eedd


                            -8-                     ДЕМОС/PV


ED(1)                  ДЕМОС. Команды                  ED(1)


              распечатывает  указанный  диапазон строк. Если
              они разделены точкой с  запятой,  распечатыва-
              ется вторая строка.

       Если посылается сигнал прерывания, редактор eedd  печа-
       тает ?_i_n_t_e_r_r_u_p_t_e_d (?_п_р_е_р_в_а_н) и возвращается в команд-
       ный режим.

       Некоторые ограничения  на  размеры:  512  символов  в
       строке,  256  символов в списке команд для команды gg,
       64 символа в имени файла и, в мини-ЭВМ, 128K символов
       во  временном  файле. Предел количества строк зависит
       от размера оперативной памяти: каждая строка  требует
       2 слова.

       При чтении файла  eedd  отбрасывает  символы  nnuull  кода
       КОИ-8  и  все  символы после последнего символа новой
       строки.

ФФААЙЙЛЛЫЫ
       /_t_m_p/_e*

       При зависании терминала  здесь  сохраняется  протокол
       выполненной работы.

ДДООППООЛЛННИИТТЕЕЛЛЬЬННЫЫЕЕ ССССЫЫЛЛККИИ
       _s_e_d(1), _c_r_y_p_t(1)

       Имеется отдельное описание редактора eedd.

ДДИИААГГННООССТТИИККАА
       ?_и_м_я   для недоступного файла
       ?      при прочих ошибках

       Для предотвращения потери информации команды  qq  и  ee
       считаются  ошибочными, если после последней модифика-
       ции буфера  не  была  выдана  команда  ww.   Повторная
       команда qq или ее выполняется всегда.

ЗЗААММЕЕЧЧААННИИЯЯ
       Команда  ll  неправильно   обрабатывает   символ   ddeell
       (_з_а_б_о_й).

       Команда аннулирования приводит к потере меток в восс-
       тановленных строках.















                            -9-                     ДЕМОС/PV

